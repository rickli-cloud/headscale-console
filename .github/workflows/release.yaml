name: Release

on:
  release:
    types:
      - published

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - uses: actions/setup-go@v5
        # with:
        #   go-version: ""

      - name: Setup binaryen
        run: |
          sudo apt update
          sudo apt install -y binaryen

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install dependencies
        run: deno install

      - name: Patch version
        run: deno --allow-read="package.json" --allow-write="package.json" patch-version.js ${{ github.event.release.tag_name }}

      - name: Build wasm
        run: |
          GOOS=js GOARCH=wasm go build -trimpath -ldflags "-s -w" -o ./public/tailscale.wasm ./wasm/wasm.go
          wasm-opt --enable-bulk-memory -Oz ./public/tailscale.wasm -o ./public/tailscale.wasm
          cp "$(go env GOROOT)/misc/wasm/wasm_exec.js" ./src/lib/api/tsconnect/wasm_exec.js

      - name: Build app
        run: deno task build

      - name: Release build assets
        shell: bash
        working-directory: ${{ github.workspace }}
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        run: |
          cp LICENSE dist/LICENSE
          zip -r headscale-console-${{ github.event.release.tag_name }}.zip dist
          gh release upload ${{ github.event.release.tag_name }} headscale-console-${{ github.event.release.tag_name }}.zip

      - name: Build versioned docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/rickli-cloud/headscale-console:${{ github.event.release.tag_name }}
          push: true

      - name: Build latest docker image
        uses: docker/build-push-action@v5
        if: "!github.event.release.prerelease"
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/rickli-cloud/headscale-console:latest
          push: true
