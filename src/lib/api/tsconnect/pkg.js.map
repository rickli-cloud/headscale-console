{
  "version": 3,
  "sources": ["../node_modules/xterm/lib/webpack:/xterm/webpack/universalModuleDefinition", "../node_modules/xterm/lib/webpack:/xterm/src/browser/AccessibilityManager.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Clipboard.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/ColorContrastCache.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Dom.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Lifecycle.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Linkifier2.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/LocalizableStrings.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/OscLinkProvider.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/RenderDebouncer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/ScreenDprMonitor.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Terminal.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/TimeBasedDebouncer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/Viewport.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/BufferDecorationRenderer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/ColorZoneStore.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/decorations/OverviewRulerRenderer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/CompositionHelper.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/Mouse.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/input/MoveToCell.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRenderer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/dom/DomRendererRowFactory.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/renderer/shared/RendererUtils.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/selection/SelectionModel.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharSizeService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CharacterJoinerService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/CoreBrowserService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/MouseService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/RenderService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/SelectionService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/Services.ts", "../node_modules/xterm/lib/webpack:/xterm/src/browser/services/ThemeService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/CircularList.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Clone.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Color.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/CoreTerminal.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/EventEmitter.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/InputHandler.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Lifecycle.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/MultiKeyMap.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/Platform.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/SortedList.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/TaskQueue.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/WindowsMode.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/AttributeData.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Buffer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferLine.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferRange.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferReflow.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/BufferSet.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/CellData.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/buffer/Marker.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/data/Charsets.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/data/EscapeSequences.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/Keyboard.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/TextDecoder.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/UnicodeV6.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/WriteBuffer.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/input/XParseColor.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Constants.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/DcsParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/EscapeSequenceParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/OscParser.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/parser/Params.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/AddonManager.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferApiView.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferLineApiView.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/BufferNamespaceApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/ParserApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/public/UnicodeApi.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/BufferService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CharsetService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreMouseService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/CoreService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/DecorationService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/InstantiationService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/LogService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/OptionsService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/OscLinkService.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/ServiceRegistry.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/Services.ts", "../node_modules/xterm/lib/webpack:/xterm/src/common/services/UnicodeService.ts", "../node_modules/xterm/lib/webpack:/xterm/webpack/bootstrap", "../node_modules/xterm/lib/webpack:/xterm/src/browser/public/Terminal.ts", "../node_modules/xterm-addon-fit/lib/webpack:/FitAddon/webpack/universalModuleDefinition", "../node_modules/xterm-addon-fit/lib/webpack:/FitAddon/src/FitAddon.ts", "../node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/webpack/universalModuleDefinition", "../node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/src/WebLinkProvider.ts", "../node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/webpack/bootstrap", "../node_modules/xterm-addon-web-links/lib/webpack:/WebLinksAddon/src/WebLinksAddon.ts", "../../../../../root/.cache/tsgo/4fdaeeb8fe43bcdb4e8cc736433b9cd9c0ddd221/gocross-goroot/lib/wasm/wasm_exec.js", "../src/lib/ssh.ts", "../src/pkg/pkg.ts"],
  "sourcesContent": ["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function() {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from 'browser/LocalizableStrings';\nimport { ITerminal, IRenderDebouncer } from 'browser/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { TimeBasedDebouncer } from 'browser/TimeBasedDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\nimport { removeElementFromParent } from 'browser/Dom';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: IRenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n    this._accessibilityTreeRoot.tabIndex = 0;\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.setAttribute('role', 'list');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new TimeBasedDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    if (!this._terminal.element) {\n      throw new Error('Cannot enable accessibility before Terminal.open');\n    }\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._handleResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._handleChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._handleChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._handleTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._handleKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor(window);\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n    this.register(toDisposable(() => {\n      removeElementFromParent(this._accessibilityTreeRoot);\n      this._rowElements.length = 0;\n    }));\n  }\n\n  private _handleBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = e.target as HTMLElement;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _handleResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _handleTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._handleChar(' ');\n    }\n  }\n\n  private _handleChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      removeElementFromParent(this._liveRegion);\n    }\n  }\n\n  private _handleKey(keyChar: string): void {\n    this._clearLiveRegion();\n    // Only add the char if there is no control character.\n    if (!/\\p{Control}/u.test(keyChar)) {\n      this._charsToConsume.push(keyChar);\n    }\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerText = '\\u00a0';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.css.cell.height) {\n      return;\n    }\n    this._accessibilityTreeRoot.style.width = `${this._renderService.dimensions.css.canvas.width}px`;\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._handleResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.css.cell.height}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, coreService.decPrivateModes.bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord) {\n    selectionService.rightClickSelect(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorContrastCache } from 'browser/Types';\nimport { IColor } from 'common/Types';\nimport { TwoKeyMap } from 'common/MultiKeyMap';\n\nexport class ColorContrastCache implements IColorContrastCache {\n  private _color: TwoKeyMap</* bg */number, /* fg */number, IColor | null> = new TwoKeyMap();\n  private _css: TwoKeyMap</* bg */number, /* fg */number, string | null> = new TwoKeyMap();\n\n  public setCss(bg: number, fg: number, value: string | null): void {\n    this._css.set(bg, fg, value);\n  }\n\n  public getCss(bg: number, fg: number): string | null | undefined {\n    return this._css.get(bg, fg);\n  }\n\n  public setColor(bg: number, fg: number, value: IColor | null): void {\n    this._color.set(bg, fg, value);\n  }\n\n  public getColor(bg: number, fg: number): IColor | null | undefined {\n    return this._color.get(bg, fg);\n  }\n\n  public clear(): void {\n    this._color.clear();\n    this._css.clear();\n  }\n}\n", "/**\n * Copyright (c) 2020 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function removeElementFromParent(...elements: (HTMLElement | undefined)[]): void {\n  for (const e of elements) {\n    e?.parentElement?.removeChild(e);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param node The node to add a listener to.\n * @param type The event type.\n * @param handler The handler for the listener.\n * @param options The boolean or options object to pass on to the event\n * listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  options?: boolean | AddEventListenerOptions\n): IDisposable {\n  node.addEventListener(type, handler, options);\n  let disposed = false;\n  return {\n    dispose: () => {\n      if (disposed) {\n        return;\n      }\n      disposed = true;\n      node.removeEventListener(type, handler, options);\n    }\n  };\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifier2, ILinkProvider, IBufferCellPosition, ILink, ILinkifierEvent, ILinkDecorations, ILinkWithState } from 'browser/Types';\nimport { IDisposable } from 'common/Types';\nimport { IMouseService, IRenderService } from './services/Services';\nimport { IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable, getDisposeArrayDisposable, disposeArray, toDisposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\n\nexport class Linkifier2 extends Disposable implements ILinkifier2 {\n  private _element: HTMLElement | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _linkProviders: ILinkProvider[] = [];\n  public get currentLink(): ILinkWithState | undefined { return this._currentLink; }\n  protected _currentLink: ILinkWithState | undefined;\n  private _mouseDownLink: ILinkWithState | undefined;\n  private _lastMouseEvent: MouseEvent | undefined;\n  private _linkCacheDisposables: IDisposable[] = [];\n  private _lastBufferCell: IBufferCellPosition | undefined;\n  private _isMouseOut: boolean = true;\n  private _activeProviderReplies: Map<Number, ILinkWithState[] | undefined> | undefined;\n  private _activeLine: number = -1;\n\n  private readonly _onShowLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onShowLinkUnderline = this._onShowLinkUnderline.event;\n  private readonly _onHideLinkUnderline = this.register(new EventEmitter<ILinkifierEvent>());\n  public readonly onHideLinkUnderline = this._onHideLinkUnderline.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.register(getDisposeArrayDisposable(this._linkCacheDisposables));\n    this.register(toDisposable(() => {\n      this._lastMouseEvent = undefined;\n    }));\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    this._linkProviders.push(linkProvider);\n    return {\n      dispose: () => {\n        // Remove the link provider from the list\n        const providerIndex = this._linkProviders.indexOf(linkProvider);\n\n        if (providerIndex !== -1) {\n          this._linkProviders.splice(providerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public attachToDom(element: HTMLElement, mouseService: IMouseService, renderService: IRenderService): void {\n    this._element = element;\n    this._mouseService = mouseService;\n    this._renderService = renderService;\n\n    this.register(addDisposableDomListener(this._element, 'mouseleave', () => {\n      this._isMouseOut = true;\n      this._clearCurrentLink();\n    }));\n    this.register(addDisposableDomListener(this._element, 'mousemove', this._handleMouseMove.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mousedown', this._handleMouseDown.bind(this)));\n    this.register(addDisposableDomListener(this._element, 'mouseup', this._handleMouseUp.bind(this)));\n  }\n\n  private _handleMouseMove(event: MouseEvent): void {\n    this._lastMouseEvent = event;\n\n    if (!this._element || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n    this._isMouseOut = false;\n\n    // Ignore the event if it's an embedder created hover widget\n    const composedPath = event.composedPath() as HTMLElement[];\n    for (let i = 0; i < composedPath.length; i++) {\n      const target = composedPath[i];\n      // Hit Terminal.element, break and continue\n      if (target.classList.contains('xterm')) {\n        break;\n      }\n      // It's a hover, don't respect hover event\n      if (target.classList.contains('xterm-hover')) {\n        return;\n      }\n    }\n\n    if (!this._lastBufferCell || (position.x !== this._lastBufferCell.x || position.y !== this._lastBufferCell.y)) {\n      this._handleHover(position);\n      this._lastBufferCell = position;\n    }\n  }\n\n  private _handleHover(position: IBufferCellPosition): void {\n    // TODO: This currently does not cache link provider results across wrapped lines, activeLine should be something like `activeRange: {startY, endY}`\n    // Check if we need to clear the link\n    if (this._activeLine !== position.y) {\n      this._clearCurrentLink();\n      this._askForLink(position, false);\n      return;\n    }\n\n    // Check the if the link is in the mouse position\n    const isCurrentLinkInPosition = this._currentLink && this._linkAtPosition(this._currentLink.link, position);\n    if (!isCurrentLinkInPosition) {\n      this._clearCurrentLink();\n      this._askForLink(position, true);\n    }\n  }\n\n  private _askForLink(position: IBufferCellPosition, useLineCache: boolean): void {\n    if (!this._activeProviderReplies || !useLineCache) {\n      this._activeProviderReplies?.forEach(reply => {\n        reply?.forEach(linkWithState => {\n          if (linkWithState.link.dispose) {\n            linkWithState.link.dispose();\n          }\n        });\n      });\n      this._activeProviderReplies = new Map();\n      this._activeLine = position.y;\n    }\n    let linkProvided = false;\n\n    // There is no link cached, so ask for one\n    for (const [i, linkProvider] of this._linkProviders.entries()) {\n      if (useLineCache) {\n        const existingReply = this._activeProviderReplies?.get(i);\n        // If there isn't a reply, the provider hasn't responded yet.\n\n        // TODO: If there isn't a reply yet it means that the provider is still resolving. Ensuring\n        // provideLinks isn't triggered again saves ILink.hover firing twice though. This probably\n        // needs promises to get fixed\n        if (existingReply) {\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n        }\n      } else {\n        linkProvider.provideLinks(position.y, (links: ILink[] | undefined) => {\n          if (this._isMouseOut) {\n            return;\n          }\n          const linksWithState: ILinkWithState[] | undefined = links?.map(link  => ({ link }));\n          this._activeProviderReplies?.set(i, linksWithState);\n          linkProvided = this._checkLinkProviderResult(i, position, linkProvided);\n\n          // If all providers have responded, remove lower priority links that intersect ranges of\n          // higher priority links\n          if (this._activeProviderReplies?.size === this._linkProviders.length) {\n            this._removeIntersectingLinks(position.y, this._activeProviderReplies);\n          }\n        });\n      }\n    }\n  }\n\n  private _removeIntersectingLinks(y: number, replies: Map<Number, ILinkWithState[] | undefined>): void {\n    const occupiedCells = new Set<number>();\n    for (let i = 0; i < replies.size; i++) {\n      const providerReply = replies.get(i);\n      if (!providerReply) {\n        continue;\n      }\n      for (let i = 0; i < providerReply.length; i++) {\n        const linkWithState = providerReply[i];\n        const startX = linkWithState.link.range.start.y < y ? 0 : linkWithState.link.range.start.x;\n        const endX = linkWithState.link.range.end.y > y ? this._bufferService.cols : linkWithState.link.range.end.x;\n        for (let x = startX; x <= endX; x++) {\n          if (occupiedCells.has(x)) {\n            providerReply.splice(i--, 1);\n            break;\n          }\n          occupiedCells.add(x);\n        }\n      }\n    }\n  }\n\n  private _checkLinkProviderResult(index: number, position: IBufferCellPosition, linkProvided: boolean): boolean {\n    if (!this._activeProviderReplies) {\n      return linkProvided;\n    }\n\n    const links = this._activeProviderReplies.get(index);\n\n    // Check if every provider before this one has come back undefined\n    let hasLinkBefore = false;\n    for (let j = 0; j < index; j++) {\n      if (!this._activeProviderReplies.has(j) || this._activeProviderReplies.get(j)) {\n        hasLinkBefore = true;\n      }\n    }\n\n    // If all providers with higher priority came back undefined, then this provider's link for\n    // the position should be used\n    if (!hasLinkBefore && links) {\n      const linkAtPosition = links.find(link => this._linkAtPosition(link.link, position));\n      if (linkAtPosition) {\n        linkProvided = true;\n        this._handleNewLink(linkAtPosition);\n      }\n    }\n\n    // Check if all the providers have responded\n    if (this._activeProviderReplies.size === this._linkProviders.length && !linkProvided) {\n      // Respect the order of the link providers\n      for (let j = 0; j < this._activeProviderReplies.size; j++) {\n        const currentLink = this._activeProviderReplies.get(j)?.find(link => this._linkAtPosition(link.link, position));\n        if (currentLink) {\n          linkProvided = true;\n          this._handleNewLink(currentLink);\n          break;\n        }\n      }\n    }\n\n    return linkProvided;\n  }\n\n  private _handleMouseDown(): void {\n    this._mouseDownLink = this._currentLink;\n  }\n\n  private _handleMouseUp(event: MouseEvent): void {\n    if (!this._element || !this._mouseService || !this._currentLink) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(event, this._element, this._mouseService);\n    if (!position) {\n      return;\n    }\n\n    if (this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, position)) {\n      this._currentLink.link.activate(event, this._currentLink.link.text);\n    }\n  }\n\n  private _clearCurrentLink(startRow?: number, endRow?: number): void {\n    if (!this._element || !this._currentLink || !this._lastMouseEvent) {\n      return;\n    }\n\n    // If we have a start and end row, check that the link is within it\n    if (!startRow || !endRow || (this._currentLink.link.range.start.y >= startRow && this._currentLink.link.range.end.y <= endRow)) {\n      this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent);\n      this._currentLink = undefined;\n      disposeArray(this._linkCacheDisposables);\n    }\n  }\n\n  private _handleNewLink(linkWithState: ILinkWithState): void {\n    if (!this._element || !this._lastMouseEvent || !this._mouseService) {\n      return;\n    }\n\n    const position = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);\n\n    if (!position) {\n      return;\n    }\n\n    // Trigger hover if the we have a link at the position\n    if (this._linkAtPosition(linkWithState.link, position)) {\n      this._currentLink = linkWithState;\n      this._currentLink.state = {\n        decorations: {\n          underline: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.underline,\n          pointerCursor: linkWithState.link.decorations === undefined ? true : linkWithState.link.decorations.pointerCursor\n        },\n        isHovered: true\n      };\n      this._linkHover(this._element, linkWithState.link, this._lastMouseEvent);\n\n      // Add listener for tracking decorations changes\n      linkWithState.link.decorations = {} as ILinkDecorations;\n      Object.defineProperties(linkWithState.link.decorations, {\n        pointerCursor: {\n          get: () => this._currentLink?.state?.decorations.pointerCursor,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== v) {\n              this._currentLink.state.decorations.pointerCursor = v;\n              if (this._currentLink.state.isHovered) {\n                this._element?.classList.toggle('xterm-cursor-pointer', v);\n              }\n            }\n          }\n        },\n        underline: {\n          get: () => this._currentLink?.state?.decorations.underline,\n          set: v => {\n            if (this._currentLink?.state && this._currentLink?.state?.decorations.underline !== v) {\n              this._currentLink.state.decorations.underline = v;\n              if (this._currentLink.state.isHovered) {\n                this._fireUnderlineEvent(linkWithState.link, v);\n              }\n            }\n          }\n        }\n      });\n\n      // Add listener for rerendering\n      if (this._renderService) {\n        this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange(e => {\n          // When start is 0 a scroll most likely occurred, make sure links above the fold also get\n          // cleared.\n          const start = e.start === 0 ? 0 : e.start + 1 + this._bufferService.buffer.ydisp;\n          const oldEvent = this._currentLink ? this._lastMouseEvent : undefined;\n          this._clearCurrentLink(start, e.end + 1 + this._bufferService.buffer.ydisp);\n          if (oldEvent && this._element) {\n            // re-eval previously active link after changes\n            const position = this._positionFromMouseEvent(oldEvent, this._element, this._mouseService!);\n            if (position) {\n              this._askForLink(position, false);\n            }\n          }\n        }));\n      }\n    }\n  }\n\n  protected _linkHover(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = true;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, true);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.add('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.hover) {\n      link.hover(event, link.text);\n    }\n  }\n\n  private _fireUnderlineEvent(link: ILink, showEvent: boolean): void {\n    const range = link.range;\n    const scrollOffset = this._bufferService.buffer.ydisp;\n    const event = this._createLinkUnderlineEvent(range.start.x - 1, range.start.y - scrollOffset - 1, range.end.x, range.end.y - scrollOffset - 1, undefined);\n    const emitter = showEvent ? this._onShowLinkUnderline : this._onHideLinkUnderline;\n    emitter.fire(event);\n  }\n\n  protected _linkLeave(element: HTMLElement, link: ILink, event: MouseEvent): void {\n    if (this._currentLink?.state) {\n      this._currentLink.state.isHovered = false;\n      if (this._currentLink.state.decorations.underline) {\n        this._fireUnderlineEvent(link, false);\n      }\n      if (this._currentLink.state.decorations.pointerCursor) {\n        element.classList.remove('xterm-cursor-pointer');\n      }\n    }\n\n    if (link.leave) {\n      link.leave(event, link.text);\n    }\n  }\n\n  /**\n   * Check if the buffer position is within the link\n   * @param link\n   * @param position\n   */\n  private _linkAtPosition(link: ILink, position: IBufferCellPosition): boolean {\n    const lower = link.range.start.y * this._bufferService.cols + link.range.start.x;\n    const upper = link.range.end.y * this._bufferService.cols + link.range.end.x;\n    const current = position.y * this._bufferService.cols + position.x;\n    return (lower <= current && current <= upper);\n  }\n\n  /**\n   * Get the buffer position from a mouse event\n   * @param event\n   */\n  private _positionFromMouseEvent(event: MouseEvent, element: HTMLElement, mouseService: IMouseService): IBufferCellPosition | undefined {\n    const coords = mouseService.getCoords(event, element, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return;\n    }\n\n    return { x: coords[0], y: coords[1] + this._bufferService.buffer.ydisp };\n  }\n\n  private _createLinkUnderlineEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// This file contains strings that get exported in the API so they can be localized\n\n// eslint-disable-next-line prefer-const\nexport let promptLabel = 'Terminal input';\n\n// eslint-disable-next-line prefer-const\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange, ILink, ILinkProvider } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService, IOscLinkService } from 'common/services/Services';\n\nexport class OscLinkProvider implements ILinkProvider {\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IOscLinkService private readonly _oscLinkService: IOscLinkService\n  ) {\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const line = this._bufferService.buffer.lines.get(y - 1);\n    if (!line) {\n      callback(undefined);\n      return;\n    }\n\n    const result: ILink[] = [];\n    const linkHandler = this._optionsService.rawOptions.linkHandler;\n    const cell = new CellData();\n    const lineLength = line.getTrimmedLength();\n    let currentLinkId = -1;\n    let currentStart = -1;\n    let finishLink = false;\n    for (let x = 0; x < lineLength; x++) {\n      // Minor optimization, only check for content if there isn't a link in case the link ends with\n      // a null cell\n      if (currentStart === -1 && !line.hasContent(x)) {\n        continue;\n      }\n\n      line.loadCell(x, cell);\n      if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n        if (currentStart === -1) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n          continue;\n        } else {\n          finishLink = cell.extended.urlId !== currentLinkId;\n        }\n      } else {\n        if (currentStart !== -1) {\n          finishLink = true;\n        }\n      }\n\n      if (finishLink || (currentStart !== -1 && x === lineLength - 1)) {\n        const text = this._oscLinkService.getLinkData(currentLinkId)?.uri;\n        if (text) {\n          // These ranges are 1-based\n          const range: IBufferRange = {\n            start: {\n              x: currentStart + 1,\n              y\n            },\n            end: {\n              // Offset end x if it's a link that ends on the last cell in the line\n              x: x + (!finishLink && x === lineLength - 1 ? 1 : 0),\n              y\n            }\n          };\n\n          let ignoreLink = false;\n          if (!linkHandler?.allowNonHttpProtocols) {\n            try {\n              const parsed = new URL(text);\n              if (!['http:', 'https:'].includes(parsed.protocol)) {\n                ignoreLink = true;\n              }\n            } catch (e) {\n              // Ignore invalid URLs to prevent unexpected behaviors\n              ignoreLink = true;\n            }\n          }\n\n          if (!ignoreLink) {\n            // OSC links always use underline and pointer decorations\n            result.push({\n              text,\n              range,\n              activate: (e, text) => (linkHandler ? linkHandler.activate(e, text, range) : defaultActivate(e, text)),\n              hover: (e, text) => linkHandler?.hover?.(e, text, range),\n              leave: (e, text) => linkHandler?.leave?.(e, text, range)\n            });\n          }\n        }\n        finishLink = false;\n\n        // Clear link or start a new link if one starts immediately\n        if (cell.hasExtendedAttrs() && cell.extended.urlId) {\n          currentStart = x;\n          currentLinkId = cell.extended.urlId;\n        } else {\n          currentStart = -1;\n          currentLinkId = -1;\n        }\n      }\n    }\n\n    // TODO: Handle fetching and returning other link ranges to underline other links with the same id\n    callback(result);\n  }\n}\n\nfunction defaultActivate(e: MouseEvent, uri: string): void {\n  const answer = confirm(`Do you want to navigate to ${uri}?\\n\\nWARNING: This link could potentially be dangerous`);\n  if (answer) {\n    const newWindow = window.open();\n    if (newWindow) {\n      try {\n        newWindow.opener = null;\n      } catch {\n        // no-op, Electron can throw\n      }\n      newWindow.location.href = uri;\n    } else {\n      console.warn('Opening link blocked as opener could not be cleared');\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDebouncerWithCallback } from 'browser/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IRenderDebouncerWithCallback {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n  private _refreshCallbacks: FrameRequestCallback[] = [];\n\n  constructor(\n    private _parentWindow: Window,\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      this._parentWindow.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    this._refreshCallbacks.push(callback);\n    if (!this._animationFrame) {\n      this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n    }\n    return this._animationFrame;\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = this._parentWindow.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    this._animationFrame = undefined;\n\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      this._runRefreshCallbacks();\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n    this._runRefreshCallbacks();\n  }\n\n  private _runRefreshCallbacks(): void {\n    for (const callback of this._refreshCallbacks) {\n      callback(0);\n    }\n    this._refreshCallbacks = [];\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  constructor(private _parentWindow: Window) {\n    super();\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this.register(toDisposable(() => {\n      this.clearListener();\n    }));\n  }\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(this._parentWindow.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  private _updateDpr(): void {\n    if (!this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList?.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio;\n    this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { ICompositionHelper, ITerminal, IBrowser, CustomKeyEventHandler, IViewport, ILinkifier2, CharacterJoinerHandler, IBufferRange } from 'browser/Types';\nimport { IRenderer } from 'browser/renderer/shared/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0, C1_ESCAPED } from 'common/data/EscapeSequences';\nimport { WindowsOptionsReportType } from '../common/InputHandler';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ILinkProvider, IDecorationOptions, IDecoration } from 'xterm';\nimport { DomRenderer } from 'browser/renderer/dom/DomRenderer';\nimport { KeyboardResultType, CoreMouseEventType, CoreMouseButton, CoreMouseAction, ITerminalOptions, ScrollSource, IColorEvent, ColorIndex, ColorRequestType } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { RenderService } from 'browser/services/RenderService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ICoreBrowserService, ICharacterJoinerService, IThemeService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { IBuffer } from 'common/buffer/Types';\nimport { MouseService } from 'browser/services/MouseService';\nimport { Linkifier2 } from 'browser/Linkifier2';\nimport { CoreBrowserService } from 'browser/services/CoreBrowserService';\nimport { CoreTerminal } from 'common/CoreTerminal';\nimport { color, rgba } from 'common/Color';\nimport { CharacterJoinerService } from 'browser/services/CharacterJoinerService';\nimport { toRgbString } from 'common/input/XParseColor';\nimport { BufferDecorationRenderer } from 'browser/decorations/BufferDecorationRenderer';\nimport { OverviewRulerRenderer } from 'browser/decorations/OverviewRulerRenderer';\nimport { DecorationService } from 'common/services/DecorationService';\nimport { IDecorationService } from 'common/services/Services';\nimport { OscLinkProvider } from 'browser/OscLinkProvider';\nimport { toDisposable } from 'common/Lifecycle';\nimport { ThemeService } from 'browser/services/ThemeService';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document: Document = (typeof window !== 'undefined') ? window.document : null as any;\n\nexport class Terminal extends CoreTerminal implements ITerminal {\n  public textarea: HTMLTextAreaElement | undefined;\n  public element: HTMLElement | undefined;\n  public screenElement: HTMLElement | undefined;\n\n  private _document: Document | undefined;\n  private _viewportScrollArea: HTMLElement | undefined;\n  private _viewportElement: HTMLElement | undefined;\n  private _helperContainer: HTMLElement | undefined;\n  private _compositionView: HTMLElement | undefined;\n\n  private _overviewRulerRenderer: OverviewRulerRenderer | undefined;\n\n  // private _visualBellTimer: number;\n\n  public browser: IBrowser = Browser as any;\n\n  private _customKeyEventHandler: CustomKeyEventHandler | undefined;\n\n  // browser services\n  private _decorationService: DecorationService;\n  private _charSizeService: ICharSizeService | undefined;\n  private _coreBrowserService: ICoreBrowserService | undefined;\n  private _mouseService: IMouseService | undefined;\n  private _renderService: IRenderService | undefined;\n  private _themeService: IThemeService | undefined;\n  private _characterJoinerService: ICharacterJoinerService | undefined;\n  private _selectionService: ISelectionService | undefined;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  /**\n   * Records whether a keydown event has occured since the last keyup event, i.e. whether a key\n   * is currently \"pressed\".\n   */\n  private _keyDownSeen: boolean = false;\n\n  /**\n   * Records whether the keypress event has already been handled and triggered a data event, if so\n   * the input event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyPressHandled: boolean = false;\n\n  /**\n   * Records whether there has been a keydown event for a dead key without a corresponding keydown\n   * event for the composed/alternative character. If we cancel the keydown event for the dead key,\n   * no events will be emitted for the final character.\n   */\n  private _unprocessedDeadKey: boolean = false;\n\n  public linkifier2: ILinkifier2;\n  public viewport: IViewport | undefined;\n  private _compositionHelper: ICompositionHelper | undefined;\n  private _accessibilityManager: AccessibilityManager | undefined;\n\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onKey = this.register(new EventEmitter<{ key: string, domEvent: KeyboardEvent }>());\n  public readonly onKey = this._onKey.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onBell = this.register(new EventEmitter<void>());\n  public readonly onBell = this._onBell.event;\n\n  private _onFocus = this.register(new EventEmitter<void>());\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = this.register(new EventEmitter<void>());\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  private _onA11yCharEmitter = this.register(new EventEmitter<string>());\n  public get onA11yChar(): IEvent<string> { return this._onA11yCharEmitter.event; }\n  private _onA11yTabEmitter = this.register(new EventEmitter<number>());\n  public get onA11yTab(): IEvent<number> { return this._onA11yTabEmitter.event; }\n  private _onWillOpen = this.register(new EventEmitter<HTMLElement>());\n  public get onWillOpen(): IEvent<HTMLElement> { return this._onWillOpen.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: Partial<ITerminalOptions> = {}\n  ) {\n    super(options);\n\n    this._setup();\n\n    this.linkifier2 = this.register(this._instantiationService.createInstance(Linkifier2));\n    this.linkifier2.registerLinkProvider(this._instantiationService.createInstance(OscLinkProvider));\n    this._decorationService = this._instantiationService.createInstance(DecorationService);\n    this._instantiationService.setService(IDecorationService, this._decorationService);\n\n    // Setup InputHandler listeners\n    this.register(this._inputHandler.onRequestBell(() => this._onBell.fire()));\n    this.register(this._inputHandler.onRequestRefreshRows((start, end) => this.refresh(start, end)));\n    this.register(this._inputHandler.onRequestSendFocus(() => this._reportFocus()));\n    this.register(this._inputHandler.onRequestReset(() => this.reset()));\n    this.register(this._inputHandler.onRequestWindowsOptionsReport(type => this._reportWindowsOptions(type)));\n    this.register(this._inputHandler.onColor((event) => this._handleColorEvent(event)));\n    this.register(forwardEvent(this._inputHandler.onCursorMove, this._onCursorMove));\n    this.register(forwardEvent(this._inputHandler.onTitleChange, this._onTitleChange));\n    this.register(forwardEvent(this._inputHandler.onA11yChar, this._onA11yCharEmitter));\n    this.register(forwardEvent(this._inputHandler.onA11yTab, this._onA11yTabEmitter));\n\n    // Setup listeners\n    this.register(this._bufferService.onResize(e => this._afterResize(e.cols, e.rows)));\n\n    this.register(toDisposable(() => {\n      this._customKeyEventHandler = undefined;\n      this.element?.parentNode?.removeChild(this.element);\n    }));\n  }\n\n  /**\n   * Handle color event from inputhandler for OSC 4|104 | 10|110 | 11|111 | 12|112.\n   * An event from OSC 4|104 may contain multiple set or report requests, and multiple\n   * or none restore requests (resetting all),\n   * while an event from OSC 10|110 | 11|111 | 12|112 always contains a single request.\n   */\n  private _handleColorEvent(event: IColorEvent): void {\n    if (!this._themeService) return;\n    for (const req of event) {\n      let acc: 'foreground' | 'background' | 'cursor' | 'ansi';\n      let ident = '';\n      switch (req.index) {\n        case ColorIndex.FOREGROUND: // OSC 10 | 110\n          acc = 'foreground';\n          ident = '10';\n          break;\n        case ColorIndex.BACKGROUND: // OSC 11 | 111\n          acc = 'background';\n          ident = '11';\n          break;\n        case ColorIndex.CURSOR: // OSC 12 | 112\n          acc = 'cursor';\n          ident = '12';\n          break;\n        default: // OSC 4 | 104\n          // we can skip the [0..255] range check here (already done in inputhandler)\n          acc = 'ansi';\n          ident = '4;' + req.index;\n      }\n      switch (req.type) {\n        case ColorRequestType.REPORT:\n          const channels = color.toColorRGB(acc === 'ansi'\n            ? this._themeService.colors.ansi[req.index]\n            : this._themeService.colors[acc]);\n          this.coreService.triggerDataEvent(`${C0.ESC}]${ident};${toRgbString(channels)}${C1_ESCAPED.ST}`);\n          break;\n        case ColorRequestType.SET:\n          if (acc === 'ansi') {\n            this._themeService.modifyColors(colors => colors.ansi[req.index] = rgba.toColor(...req.color));\n          } else {\n            const narrowedAcc = acc;\n            this._themeService.modifyColors(colors => colors[narrowedAcc] = rgba.toColor(...req.color));\n          }\n          break;\n        case ColorRequestType.RESTORE:\n          this._themeService.restoreColor(req.index);\n          break;\n      }\n    }\n  }\n\n  protected _setup(): void {\n    super._setup();\n\n    this._customKeyEventHandler = undefined;\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  private _handleScreenReaderModeOptionChange(value: boolean): void {\n    if (value) {\n      if (!this._accessibilityManager && this._renderService) {\n        this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n      }\n    } else {\n      this._accessibilityManager?.dispose();\n      this._accessibilityManager = undefined;\n    }\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _handleTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element!.classList.add('focus');\n    this._showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea?.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _handleTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea!.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.coreService.decPrivateModes.sendFocus) {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element!.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  private _syncTextArea(): void {\n    if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper!.isComposing || !this._renderService) {\n      return;\n    }\n    const cursorY = this.buffer.ybase + this.buffer.y;\n    const bufferLine = this.buffer.lines.get(cursorY);\n    if (!bufferLine) {\n      return;\n    }\n    const cursorX = Math.min(this.buffer.x, this.cols - 1);\n    const cellHeight = this._renderService.dimensions.css.cell.height;\n    const width = bufferLine.getWidth(cursorX);\n    const cellWidth = this._renderService.dimensions.css.cell.width * width;\n    const cursorTop = this.buffer.y * this._renderService.dimensions.css.cell.height;\n    const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n    // Sync the textarea to the exact position of the composition view so the IME knows where the\n    // text is.\n    this.textarea.style.left = cursorLeft + 'px';\n    this.textarea.style.top = cursorTop + 'px';\n    this.textarea.style.width = cellWidth + 'px';\n    this.textarea.style.height = cellHeight + 'px';\n    this.textarea.style.lineHeight = cellHeight + 'px';\n    this.textarea.style.zIndex = '-5';\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element!, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService!);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent): void => handlePasteEvent(event, this.textarea!, this.coreService);\n    this.register(addDisposableDomListener(this.textarea!, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element!, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element!, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element!, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea!, this.screenElement!, this._selectionService!, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element!, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea!, this.screenElement!);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea!, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionstart', () => this._compositionHelper!.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper!.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea!, 'compositionend', () => this._compositionHelper!.compositionend()));\n    this.register(addDisposableDomListener(this.textarea!, 'input', (ev: InputEvent) => this._inputEvent(ev), true));\n    this.register(this.onRender(() => this._compositionHelper!.updateCompositionElements()));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    if (!parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!parent.isConnected) {\n      this._logService.debug('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = parent.ownerDocument!;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    if (!Browser.isChromeOS) {\n      // ChromeVox on ChromeOS does not like this. See\n      // https://issuetracker.google.com/issues/260170397\n      this.textarea.setAttribute('aria-multiline', 'false');\n    }\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n\n    // Register the core browser service before the generic textarea handlers are registered so it\n    // handles them first. Otherwise the renderers may use the wrong focus state.\n    this._coreBrowserService = this._instantiationService.createInstance(CoreBrowserService, this.textarea, this._document.defaultView ?? window);\n    this._instantiationService.setService(ICoreBrowserService, this._coreBrowserService);\n\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._handleTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._handleTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._themeService = this._instantiationService.createInstance(ThemeService);\n    this._instantiationService.setService(IThemeService, this._themeService);\n\n    this._characterJoinerService = this._instantiationService.createInstance(CharacterJoinerService);\n    this._instantiationService.setService(ICharacterJoinerService, this._characterJoinerService);\n\n    this._renderService = this.register(this._instantiationService.createInstance(RenderService, this.rows, this.screenElement));\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this.register(this._renderService.onRenderedViewportChange(e => this._onRender.fire(e)));\n    this.onResize(e => this._renderService!.resize(e.cols, e.rows));\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    try {\n      this._onWillOpen.fire(this.element);\n    }\n    catch { /* fails to load addon for some reason */ }\n    if (!this._renderService.hasRenderer()) {\n      this._renderService.setRenderer(this._createRenderer());\n    }\n\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number) => this.scrollLines(amount, true, ScrollSource.VIEWPORT),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.register(this._inputHandler.onRequestSyncScrollBar(() => this.viewport!.syncScrollArea()));\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => {\n      this._renderService!.handleCursorMove();\n      this._syncTextArea();\n    }));\n    this.register(this.onResize(() => this._renderService!.handleResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService!.handleBlur()));\n    this.register(this.onFocus(() => this._renderService!.handleFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport!.syncScrollArea()));\n\n    this._selectionService = this.register(this._instantiationService.createInstance(SelectionService,\n      this.element,\n      this.screenElement,\n      this.linkifier2\n    ));\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onRequestScrollLines(e => this.scrollLines(e.amount, e.suppressScrollEvent)));\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRequestRedraw(e => this._renderService!.handleSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea!.value = text;\n      this.textarea!.focus();\n      this.textarea!.select();\n    }));\n    this.register(this._onScroll.event(ev => {\n      this.viewport!.syncScrollArea();\n      this._selectionService!.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService!.refresh()));\n\n    this.linkifier2.attachToDom(this.screenElement, this._mouseService, this._renderService);\n    this.register(this._instantiationService.createInstance(BufferDecorationRenderer, this.screenElement));\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService!.handleMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.coreMouseService.areMouseEventsActive) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n    this.register(this.optionsService.onSpecificOptionChange('screenReaderMode', e => this._handleScreenReaderModeOptionChange(e)));\n\n    if (this.options.overviewRulerWidth) {\n      this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n    }\n    this.optionsService.onSpecificOptionChange('overviewRulerWidth', value => {\n      if (!this._overviewRulerRenderer && value && this._viewportElement && this.screenElement) {\n        this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(OverviewRulerRenderer, this._viewportElement, this.screenElement));\n      }\n    });\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    return this._instantiationService.createInstance(DomRenderer, this.element!, this.screenElement!, this._viewportElement!, this.linkifier2);\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element!;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      // get mouse coordinates\n      const pos = self._mouseService!.getMouseReportCoords(ev, self.screenElement!);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction | undefined;\n      switch ((ev as any).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n              ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          const amount = self.viewport!.getLinesScrolled(ev as WheelEvent);\n\n          if (amount === 0) {\n            return false;\n          }\n\n          action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self.coreMouseService.triggerMouseEvent({\n        col: pos.col,\n        row: pos.row,\n        x: pos.x,\n        y: pos.y,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: { [key: string]: ((ev: Event) => void) | null } = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: { [key: string]: (ev: any) => void | boolean } = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n          if (requestedEvents.mousedrag) {\n            this._document!.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        return this.cancel(ev, true);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this.register(this.coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      if (events) {\n        if (this.optionsService.rawOptions.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this.coreMouseService.explainEvents(events));\n        }\n        this.element!.classList.add('enable-mouse-events');\n        this._selectionService!.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element!.classList.remove('enable-mouse-events');\n        this._selectionService!.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove!);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel!);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel, { passive: false });\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document!.removeEventListener('mouseup', requestedEvents.mouseup!);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document!.removeEventListener('mousemove', requestedEvents.mousedrag!);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    }));\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.coreMouseService.areMouseEventsActive || this._selectionService!.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document!.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document!.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      // do nothing, if app side handles wheel itself\n      if (requestedEvents.wheel) return;\n\n      if (!this.buffer.hasScrollback) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        const amount = this.viewport!.getLinesScrolled(ev);\n\n        // Do nothing if there's no vertical scroll\n        if (amount === 0) {\n          return;\n        }\n\n        // Construct and send sequences\n        const sequence = C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + (ev.deltaY < 0 ? 'A' : 'B');\n        let data = '';\n        for (let i = 0; i < Math.abs(amount); i++) {\n          data += sequence;\n        }\n        this.coreService.triggerDataEvent(data, true);\n        return this.cancel(ev, true);\n      }\n\n      // normal viewport scrolling\n      // conditionally stop event, if the viewport still had rows to scroll within\n      if (this.viewport!.handleWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      this.viewport!.handleTouchStart(ev);\n      return this.cancel(ev);\n    }, { passive: true }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.coreMouseService.areMouseEventsActive) return;\n      if (!this.viewport!.handleTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }, { passive: false }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    this._renderService?.refreshRows(start, end);\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService?.shouldColumnSelect(ev)) {\n      this.element!.classList.add('column-select');\n    } else {\n      this.element!.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  private _showCursor(): void {\n    if (!this.coreService.isCursorInitialized) {\n      this.coreService.isCursorInitialized = true;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source = ScrollSource.TERMINAL): void {\n    super.scrollLines(disp, suppressScrollEvent, source);\n    this.refresh(0, this.rows - 1);\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea!, this.coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this.linkifier2.registerLinkProvider(linkProvider);\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    const joinerId = this._characterJoinerService.register(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (!this._characterJoinerService) {\n      throw new Error('Terminal must be opened first');\n    }\n    if (this._characterJoinerService.deregister(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker | undefined {\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    return this._decorationService.registerDecoration(decorationOptions);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService!.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): IBufferRange | undefined {\n    if (!this._selectionService || !this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      start: {\n        x: this._selectionService.selectionStart![0],\n        y: this._selectionService.selectionStart![1]\n      },\n      end: {\n        x: this._selectionService.selectionEnd![0],\n        y: this._selectionService.selectionEnd![1]\n      }\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._selectionService?.clearSelection();\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._selectionService?.selectAll();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._selectionService?.selectLines(start, end);\n  }\n\n  /**\n   * Handle a keydown [KeyboardEvent].\n   *\n   * [KeyboardEvent]: https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   */\n  protected _keyDown(event: KeyboardEvent): boolean | undefined {\n    this._keyDownHandled = false;\n    this._keyDownSeen = true;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    // Ignore composing with Alt key on Mac when macOptionIsMeta is enabled\n    const shouldIgnoreComposition = this.browser.isMac && this.options.macOptionIsMeta && event.altKey;\n\n    if (!shouldIgnoreComposition && !this._compositionHelper!.keydown(event)) {\n      if (this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp) {\n        this._bufferService.scrollToBottom();\n      }\n      return false;\n    }\n\n    if (!shouldIgnoreComposition && (event.key === 'Dead' || event.key === 'AltGraph')) {\n      this._unprocessedDeadKey = true;\n    }\n\n    const result = evaluateKeyboardEvent(event, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // HACK: Process A-Z in the keypress event to fix an issue with macOS IMEs where lower case\n    // letters cannot be input while caps lock is on.\n    if (event.key && !event.ctrlKey && !event.altKey && !event.metaKey && event.key.length === 1) {\n      if (event.key.charCodeAt(0) >= 65 && event.key.charCodeAt(0) <= 90) {\n        return true;\n      }\n    }\n\n    if (this._unprocessedDeadKey) {\n      this._unprocessedDeadKey = false;\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea!.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this._showCursor();\n    this.coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, we don't cancel them (unless ctrl or alt\n    // is also depressed) so that the cursor textarea can be updated, which triggers the screen\n    // reader to read it.\n    if (!this.optionsService.rawOptions.screenReaderMode || event.altKey || event.ctrlKey) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: KeyboardEvent): boolean {\n    const thirdLevelKey =\n      (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey) ||\n      (browser.isWindows && ev.getModifierState('AltGraph'));\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    this._keyDownSeen = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n    this._keyPressHandled = false;\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    this._keyPressHandled = false;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this._showCursor();\n    this.coreService.triggerDataEvent(key, true);\n\n    this._keyPressHandled = true;\n\n    // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n    // keys could be ignored\n    this._unprocessedDeadKey = false;\n\n    return true;\n  }\n\n  /**\n   * Handle an input event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/Web/API/InputEvent\n   * @param ev The input event to be handled.\n   */\n  protected _inputEvent(ev: InputEvent): boolean {\n    // Only support emoji IMEs when screen reader mode is disabled as the event must bubble up to\n    // support reading out character input which can doubling up input characters\n    // Based on these event traces: https://github.com/xtermjs/xterm.js/issues/3679\n    if (ev.data && ev.inputType === 'insertText' && (!ev.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {\n      if (this._keyPressHandled) {\n        return false;\n      }\n\n      // The key was handled so clear the dead key state, otherwise certain keystrokes like arrow\n      // keys could be ignored\n      this._unprocessedDeadKey = false;\n\n      const text = ev.data;\n      this.coreService.triggerDataEvent(text, true);\n\n      this.cancel(ev);\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    super.resize(x, y);\n  }\n\n  private _afterResize(x: number, y: number): void {\n    this._charSizeService?.measure();\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport?.syncScrollArea(true);\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.clearAllMarkers();\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)!);\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire({ position: this.buffer.ydisp, source: ScrollSource.TERMINAL });\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n\n    this._setup();\n    super.reset();\n    this._selectionService?.reset();\n    this._decorationService.reset();\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    this.viewport?.syncScrollArea();\n  }\n\n  public clearTextureAtlas(): void {\n    this._renderService?.clearTextureAtlas();\n  }\n\n  private _reportFocus(): void {\n    if (this.element?.classList.contains('focus')) {\n      this.coreService.triggerDataEvent(C0.ESC + '[I');\n    } else {\n      this.coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n  }\n\n  private _reportWindowsOptions(type: WindowsOptionsReportType): void {\n    if (!this._renderService) {\n      return;\n    }\n\n    switch (type) {\n      case WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:\n        const canvasWidth = this._renderService.dimensions.css.canvas.width.toFixed(0);\n        const canvasHeight = this._renderService.dimensions.css.canvas.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[4;${canvasHeight};${canvasWidth}t`);\n        break;\n      case WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:\n        const cellWidth = this._renderService.dimensions.css.cell.width.toFixed(0);\n        const cellHeight = this._renderService.dimensions.css.cell.height.toFixed(0);\n        this.coreService.triggerDataEvent(`${C0.ESC}[6;${cellHeight};${cellWidth}t`);\n        break;\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean | undefined {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nconst RENDER_DEBOUNCE_THRESHOLD_MS = 1000; // 1 Second\n\nimport { IRenderDebouncer } from 'browser/Types';\n\n/**\n * Debounces calls to update screen readers to update at most once configurable interval of time.\n */\nexport class TimeBasedDebouncer implements IRenderDebouncer {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n\n  // The last moment that the Terminal was refreshed at\n  private _lastRefreshMs = 0;\n  // Whether a trailing refresh should be triggered due to a refresh request that was throttled\n  private _additionalRefreshRequested = false;\n\n  private _refreshTimeoutID: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void,\n    private readonly _debounceThresholdMS = RENDER_DEBOUNCE_THRESHOLD_MS\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._refreshTimeoutID) {\n      clearTimeout(this._refreshTimeoutID);\n    }\n  }\n\n  public refresh(rowStart: number | undefined, rowEnd: number | undefined, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    // Only refresh if the time since last refresh is above a threshold, otherwise wait for\n    // enough time to pass before refreshing again.\n    const refreshRequestTime: number = Date.now();\n    if (refreshRequestTime - this._lastRefreshMs >= this._debounceThresholdMS) {\n      // Enough time has lapsed since the last refresh; refresh immediately\n      this._lastRefreshMs = refreshRequestTime;\n      this._innerRefresh();\n    } else if (!this._additionalRefreshRequested) {\n      // This is the first additional request throttled; set up trailing refresh\n      const elapsed = refreshRequestTime - this._lastRefreshMs;\n      const waitPeriodBeforeTrailingRefresh = this._debounceThresholdMS - elapsed;\n      this._additionalRefreshRequested = true;\n\n      this._refreshTimeoutID = window.setTimeout(() => {\n        this._lastRefreshMs = Date.now();\n        this._innerRefresh();\n        this._additionalRefreshRequested = false;\n        this._refreshTimeoutID = undefined; // No longer need to clear the timeout\n      }, waitPeriodBeforeTrailingRefresh);\n    }\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    const start = Math.max(this._rowStart, 0);\n    const end = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Reset debouncer (this happens before render callback as the render could trigger it again)\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n\n    // Run render callback\n    this._renderCallback(start, end);\n  }\n}\n\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport, ReadonlyColorSet } from 'browser/Types';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\ninterface ISmoothScrollState {\n  startTime: number;\n  origin: number;\n  target: number;\n}\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _currentDeviceCellHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n  private _activeBuffer: IBuffer;\n  private _renderDimensions: IRenderDimensions;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n  private _smoothScrollState: ISmoothScrollState = {\n    startTime: 0,\n    origin: -1,\n    target: -1\n  };\n\n  constructor(\n    private readonly _scrollLines: (amount: number) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._handleScroll.bind(this)));\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n    this._renderDimensions = this._renderService.dimensions;\n    this.register(this._renderService.onDimensionsChange(e => this._renderDimensions = e));\n\n    this._handleThemeChange(themeService.colors);\n    this.register(themeService.onChangeColors(e => this._handleThemeChange(e)));\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.syncScrollArea()));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  private _handleThemeChange(colors: ReadonlyColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.device.cell.height / this._coreBrowserService.dpr;\n      this._currentDeviceCellHeight = this._renderService.dimensions.device.cell.height;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.css.canvas.height);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.css.canvas.height) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    if (this._lastScrollTop !== this._activeBuffer.ydisp * this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderDimensions.device.cell.height !== this._currentDeviceCellHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _handleScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      // Still trigger the scroll so lines get refreshed\n      this._scrollLines(0);\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff);\n  }\n\n  private _smoothScroll(): void {\n    // Check valid state\n    if (this._isDisposed || this._smoothScrollState.origin === -1 || this._smoothScrollState.target === -1) {\n      return;\n    }\n\n    // Calculate position complete\n    const percent = this._smoothScrollPercent();\n    this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(percent * (this._smoothScrollState.target - this._smoothScrollState.origin));\n\n    // Continue or finish smooth scroll\n    if (percent < 1) {\n      this._coreBrowserService.window.requestAnimationFrame(() => this._smoothScroll());\n    } else {\n      this._clearSmoothScrollState();\n    }\n  }\n\n  private _smoothScrollPercent(): number {\n    if (!this._optionsService.rawOptions.smoothScrollDuration || !this._smoothScrollState.startTime) {\n      return 1;\n    }\n    return Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0);\n  }\n\n  private _clearSmoothScrollState(): void {\n    this._smoothScrollState.startTime = 0;\n    this._smoothScrollState.origin = -1;\n    this._smoothScrollState.target = -1;\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n      (amount > 0 && scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public handleWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    if (!this._optionsService.rawOptions.smoothScrollDuration) {\n      this._viewportElement.scrollTop += amount;\n    } else {\n      this._smoothScrollState.startTime = Date.now();\n      if (this._smoothScrollPercent() < 1) {\n        this._smoothScrollState.origin = this._viewportElement.scrollTop;\n        if (this._smoothScrollState.target === -1) {\n          this._smoothScrollState.target = this._viewportElement.scrollTop + amount;\n        } else {\n          this._smoothScrollState.target += amount;\n        }\n        this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0);\n        this._smoothScroll();\n      } else {\n        this._clearSmoothScrollState();\n      }\n    }\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0 || ev.shiftKey) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.rawOptions.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n      (modifier === 'ctrl' && ev.ctrlKey) ||\n      (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.rawOptions.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public handleTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public handleTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IInternalDecoration } from 'common/services/Services';\n\nexport class BufferDecorationRenderer extends Disposable {\n  private readonly _container: HTMLElement;\n  private readonly _decorationElements: Map<IInternalDecoration, HTMLElement> = new Map();\n\n  private _animationFrame: number | undefined;\n  private _altBufferIsActive: boolean = false;\n  private _dimensionsChanged: boolean = false;\n\n  constructor(\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    this._container = document.createElement('div');\n    this._container.classList.add('xterm-decoration-container');\n    this._screenElement.appendChild(this._container);\n\n    this.register(this._renderService.onRenderedViewportChange(() => this._doRefreshDecorations()));\n    this.register(this._renderService.onDimensionsChange(() => {\n      this._dimensionsChanged = true;\n      this._queueRefresh();\n    }));\n    this.register(addDisposableDomListener(window, 'resize', () => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt;\n    }));\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh()));\n    this.register(this._decorationService.onDecorationRemoved(decoration => this._removeDecoration(decoration)));\n    this.register(toDisposable(() => {\n      this._container.remove();\n      this._decorationElements.clear();\n    }));\n  }\n\n  private _queueRefresh(): void {\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._renderService.addRefreshCallback(() => {\n      this._doRefreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n\n  private _doRefreshDecorations(): void {\n    for (const decoration of this._decorationService.decorations) {\n      this._renderDecoration(decoration);\n    }\n    this._dimensionsChanged = false;\n  }\n\n  private _renderDecoration(decoration: IInternalDecoration): void {\n    this._refreshStyle(decoration);\n    if (this._dimensionsChanged) {\n      this._refreshXPosition(decoration);\n    }\n  }\n\n  private _createElement(decoration: IInternalDecoration): HTMLElement {\n    const element = document.createElement('div');\n    element.classList.add('xterm-decoration');\n    element.style.width = `${Math.round((decoration.options.width || 1) * this._renderService.dimensions.css.cell.width)}px`;\n    element.style.height = `${(decoration.options.height || 1) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.top = `${(decoration.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height}px`;\n    element.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;\n\n    const x = decoration.options.x ?? 0;\n    if (x && x > this._bufferService.cols) {\n      // exceeded the container width, so hide\n      element.style.display = 'none';\n    }\n    this._refreshXPosition(decoration, element);\n\n    return element;\n  }\n\n  private _refreshStyle(decoration: IInternalDecoration): void {\n    const line = decoration.marker.line - this._bufferService.buffers.active.ydisp;\n    if (line < 0 || line >= this._bufferService.rows) {\n      // outside of viewport\n      if (decoration.element) {\n        decoration.element.style.display = 'none';\n        decoration.onRenderEmitter.fire(decoration.element);\n      }\n    } else {\n      let element = this._decorationElements.get(decoration);\n      if (!element) {\n        element = this._createElement(decoration);\n        decoration.element = element;\n        this._decorationElements.set(decoration, element);\n        this._container.appendChild(element);\n      }\n      element.style.top = `${line * this._renderService.dimensions.css.cell.height}px`;\n      element.style.display = this._altBufferIsActive ? 'none' : 'block';\n      decoration.onRenderEmitter.fire(element);\n    }\n  }\n\n  private _refreshXPosition(decoration: IInternalDecoration, element: HTMLElement | undefined = decoration.element): void {\n    if (!element) {\n      return;\n    }\n    const x = decoration.options.x ?? 0;\n    if ((decoration.options.anchor || 'left') === 'right') {\n      element.style.right = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    } else {\n      element.style.left = x ? `${x * this._renderService.dimensions.css.cell.width}px` : '';\n    }\n  }\n\n  private _removeDecoration(decoration: IInternalDecoration): void {\n    this._decorationElements.get(decoration)?.remove();\n    this._decorationElements.delete(decoration);\n    decoration.dispose();\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInternalDecoration } from 'common/services/Services';\n\nexport interface IColorZoneStore {\n  readonly zones: IColorZone[];\n  clear(): void;\n  addDecoration(decoration: IInternalDecoration): void;\n  /**\n   * Sets the amount of padding in lines that will be added between zones, if new lines intersect\n   * the padding they will be merged into the same zone.\n   */\n  setPadding(padding: { [position: string]: number }): void;\n}\n\nexport interface IColorZone {\n  /** Color in a format supported by canvas' fillStyle. */\n  color: string;\n  position: 'full' | 'left' | 'center' | 'right' | undefined;\n  startBufferLine: number;\n  endBufferLine: number;\n}\n\ninterface IMinimalDecorationForColorZone {\n  marker: Pick<IInternalDecoration['marker'], 'line'>;\n  options: Pick<IInternalDecoration['options'], 'overviewRulerOptions'>;\n}\n\nexport class ColorZoneStore implements IColorZoneStore {\n  private _zones: IColorZone[] = [];\n\n  // The zone pool is used to keep zone objects from being freed between clearing the color zone\n  // store and fetching the zones. This helps reduce GC pressure since the color zones are\n  // accumulated on potentially every scroll event.\n  private _zonePool: IColorZone[] = [];\n  private _zonePoolIndex = 0;\n\n  private _linePadding: { [position: string]: number } = {\n    full: 0,\n    left: 0,\n    center: 0,\n    right: 0\n  };\n\n  public get zones(): IColorZone[] {\n    // Trim the zone pool to free unused memory\n    this._zonePool.length = Math.min(this._zonePool.length, this._zones.length);\n    return this._zones;\n  }\n\n  public clear(): void {\n    this._zones.length = 0;\n    this._zonePoolIndex = 0;\n  }\n\n  public addDecoration(decoration: IMinimalDecorationForColorZone): void {\n    if (!decoration.options.overviewRulerOptions) {\n      return;\n    }\n    for (const z of this._zones) {\n      if (z.color === decoration.options.overviewRulerOptions.color &&\n          z.position === decoration.options.overviewRulerOptions.position) {\n        if (this._lineIntersectsZone(z, decoration.marker.line)) {\n          return;\n        }\n        if (this._lineAdjacentToZone(z, decoration.marker.line, decoration.options.overviewRulerOptions.position)) {\n          this._addLineToZone(z, decoration.marker.line);\n          return;\n        }\n      }\n    }\n    // Create using zone pool if possible\n    if (this._zonePoolIndex < this._zonePool.length) {\n      this._zonePool[this._zonePoolIndex].color = decoration.options.overviewRulerOptions.color;\n      this._zonePool[this._zonePoolIndex].position = decoration.options.overviewRulerOptions.position;\n      this._zonePool[this._zonePoolIndex].startBufferLine = decoration.marker.line;\n      this._zonePool[this._zonePoolIndex].endBufferLine = decoration.marker.line;\n      this._zones.push(this._zonePool[this._zonePoolIndex++]);\n      return;\n    }\n    // Create\n    this._zones.push({\n      color: decoration.options.overviewRulerOptions.color,\n      position: decoration.options.overviewRulerOptions.position,\n      startBufferLine: decoration.marker.line,\n      endBufferLine: decoration.marker.line\n    });\n    this._zonePool.push(this._zones[this._zones.length - 1]);\n    this._zonePoolIndex++;\n  }\n\n  public setPadding(padding: { [position: string]: number }): void {\n    this._linePadding = padding;\n  }\n\n  private _lineIntersectsZone(zone: IColorZone, line: number): boolean {\n    return (\n      line >= zone.startBufferLine &&\n      line <= zone.endBufferLine\n    );\n  }\n\n  private _lineAdjacentToZone(zone: IColorZone, line: number, position: IColorZone['position']): boolean {\n    return (\n      (line >= zone.startBufferLine - this._linePadding[position || 'full']) &&\n      (line <= zone.endBufferLine + this._linePadding[position || 'full'])\n    );\n  }\n\n  private _addLineToZone(zone: IColorZone, line: number): void {\n    zone.startBufferLine = Math.min(zone.startBufferLine, line);\n    zone.endBufferLine = Math.max(zone.endBufferLine, line);\n  }\n}\n", "/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ColorZoneStore, IColorZone, IColorZoneStore } from 'browser/decorations/ColorZoneStore';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { ICoreBrowserService, IRenderService } from 'browser/services/Services';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IDecorationService, IOptionsService } from 'common/services/Services';\n\n// Helper objects to avoid excessive calculation and garbage collection during rendering. These are\n// static values for each render and can be accessed using the decoration position as the key.\nconst drawHeight = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawWidth = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\nconst drawX = {\n  full: 0,\n  left: 0,\n  center: 0,\n  right: 0\n};\n\nexport class OverviewRulerRenderer extends Disposable {\n  private readonly _canvas: HTMLCanvasElement;\n  private readonly _ctx: CanvasRenderingContext2D;\n  private readonly _colorZoneStore: IColorZoneStore = new ColorZoneStore();\n  private get _width(): number {\n    return this._optionsService.options.overviewRulerWidth || 0;\n  }\n  private _animationFrame: number | undefined;\n\n  private _shouldUpdateDimensions: boolean | undefined = true;\n  private _shouldUpdateAnchor: boolean | undefined = true;\n  private _lastKnownBufferLength: number = 0;\n\n  private _containerHeight: number | undefined;\n\n  constructor(\n    private readonly _viewportElement: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowseService: ICoreBrowserService\n  ) {\n    super();\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add('xterm-decoration-overview-ruler');\n    this._refreshCanvasDimensions();\n    this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);\n    const ctx = this._canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Ctx cannot be null');\n    } else {\n      this._ctx = ctx;\n    }\n    this._registerDecorationListeners();\n    this._registerBufferChangeListeners();\n    this._registerDimensionChangeListeners();\n    this.register(toDisposable(() => {\n      this._canvas?.remove();\n    }));\n  }\n\n  /**\n   * On decoration add or remove, redraw\n   */\n  private _registerDecorationListeners(): void {\n    this.register(this._decorationService.onDecorationRegistered(() => this._queueRefresh(undefined, true)));\n    this.register(this._decorationService.onDecorationRemoved(() => this._queueRefresh(undefined, true)));\n  }\n\n  /**\n   * On buffer change, redraw\n   * and hide the canvas if the alt buffer is active\n   */\n  private _registerBufferChangeListeners(): void {\n    this.register(this._renderService.onRenderedViewportChange(() => this._queueRefresh()));\n    this.register(this._bufferService.buffers.onBufferActivate(() => {\n      this._canvas!.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? 'none' : 'block';\n    }));\n    this.register(this._bufferService.onScroll(() => {\n      if (this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length) {\n        this._refreshDrawHeightConstants();\n        this._refreshColorZonePadding();\n      }\n    }));\n  }\n  /**\n   * On dimension change, update canvas dimensions\n   * and then redraw\n   */\n  private _registerDimensionChangeListeners(): void {\n    // container height changed\n    this.register(this._renderService.onRender((): void => {\n      if (!this._containerHeight || this._containerHeight !== this._screenElement.clientHeight) {\n        this._queueRefresh(true);\n        this._containerHeight = this._screenElement.clientHeight;\n      }\n    }));\n    // overview ruler width changed\n    this.register(this._optionsService.onSpecificOptionChange('overviewRulerWidth', () => this._queueRefresh(true)));\n    // device pixel ratio changed\n    this.register(addDisposableDomListener(this._coreBrowseService.window, 'resize', () => this._queueRefresh(true)));\n    // set the canvas dimensions\n    this._queueRefresh(true);\n  }\n\n  private _refreshDrawConstants(): void {\n    // width\n    const outerWidth = Math.floor(this._canvas.width / 3);\n    const innerWidth = Math.ceil(this._canvas.width / 3);\n    drawWidth.full = this._canvas.width;\n    drawWidth.left = outerWidth;\n    drawWidth.center = innerWidth;\n    drawWidth.right = outerWidth;\n    // height\n    this._refreshDrawHeightConstants();\n    // x\n    drawX.full = 0;\n    drawX.left = 0;\n    drawX.center = drawWidth.left;\n    drawX.right = drawWidth.left + drawWidth.center;\n  }\n\n  private _refreshDrawHeightConstants(): void {\n    drawHeight.full = Math.round(2 * this._coreBrowseService.dpr);\n    // Calculate actual pixels per line\n    const pixelsPerLine = this._canvas.height / this._bufferService.buffer.lines.length;\n    // Clamp actual pixels within a range\n    const nonFullHeight = Math.round(Math.max(Math.min(pixelsPerLine, 12), 6) * this._coreBrowseService.dpr);\n    drawHeight.left = nonFullHeight;\n    drawHeight.center = nonFullHeight;\n    drawHeight.right = nonFullHeight;\n  }\n\n  private _refreshColorZonePadding(): void {\n    this._colorZoneStore.setPadding({\n      full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.full),\n      left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.left),\n      center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.center),\n      right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * drawHeight.right)\n    });\n    this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length;\n  }\n\n  private _refreshCanvasDimensions(): void {\n    this._canvas.style.width = `${this._width}px`;\n    this._canvas.width = Math.round(this._width * this._coreBrowseService.dpr);\n    this._canvas.style.height = `${this._screenElement.clientHeight}px`;\n    this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowseService.dpr);\n    this._refreshDrawConstants();\n    this._refreshColorZonePadding();\n  }\n\n  private _refreshDecorations(): void {\n    if (this._shouldUpdateDimensions) {\n      this._refreshCanvasDimensions();\n    }\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    this._colorZoneStore.clear();\n    for (const decoration of this._decorationService.decorations) {\n      this._colorZoneStore.addDecoration(decoration);\n    }\n    this._ctx.lineWidth = 1;\n    const zones = this._colorZoneStore.zones;\n    for (const zone of zones) {\n      if (zone.position !== 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    for (const zone of zones) {\n      if (zone.position === 'full') {\n        this._renderColorZone(zone);\n      }\n    }\n    this._shouldUpdateDimensions = false;\n    this._shouldUpdateAnchor = false;\n  }\n\n  private _renderColorZone(zone: IColorZone): void {\n    this._ctx.fillStyle = zone.color;\n    this._ctx.fillRect(\n      /* x */ drawX[zone.position || 'full'],\n      /* y */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        (zone.startBufferLine / this._bufferService.buffers.active.lines.length) - drawHeight[zone.position || 'full'] / 2\n      ),\n      /* w */ drawWidth[zone.position || 'full'],\n      /* h */ Math.round(\n        (this._canvas.height - 1) * // -1 to ensure at least 2px are allowed for decoration on last line\n        ((zone.endBufferLine - zone.startBufferLine) / this._bufferService.buffers.active.lines.length) + drawHeight[zone.position || 'full']\n      )\n    );\n  }\n\n  private _queueRefresh(updateCanvasDimensions?: boolean, updateAnchor?: boolean): void {\n    this._shouldUpdateDimensions = updateCanvasDimensions || this._shouldUpdateDimensions;\n    this._shouldUpdateAnchor = updateAnchor || this._shouldUpdateAnchor;\n    if (this._animationFrame !== undefined) {\n      return;\n    }\n    this._animationFrame = this._coreBrowseService.window.requestAnimationFrame(() => {\n      this._refreshDecorations();\n      this._animationFrame = undefined;\n    });\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\nimport { C0 } from 'common/data/EscapeSequences';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n  public get isComposing(): boolean { return this._isComposing; }\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  /**\n   * Data already sent due to keydown event.\n   */\n  private _dataAlreadySent: string;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n    this._dataAlreadySent = '';\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._dataAlreadySent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: Pick<CompositionEvent, 'data'>): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @returns Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      }\n      if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          // Add length of data already sent due to keydown event,\n          // otherwise input characters can be duplicated. (Issue #3191)\n          currentCompositionPosition.start += this._dataAlreadySent.length;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          if (input.length > 0) {\n            this._coreService.triggerDataEvent(input, true);\n          }\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n\n        const diff = newValue.replace(oldValue, '');\n\n        this._dataAlreadySent = diff;\n\n        if (newValue.length > oldValue.length) {\n          this._coreService.triggerDataEvent(diff, true);\n        } else if (newValue.length < oldValue.length) {\n          this._coreService.triggerDataEvent(`${C0.DEL}`, true);\n        } else if ((newValue.length === oldValue.length) && (newValue !== oldValue)) {\n          this._coreService.triggerDataEvent(newValue, true);\n        }\n\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n\n      const cellHeight = this._renderService.dimensions.css.cell.height;\n      const cursorTop = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height;\n      const cursorLeft = cursorX * this._renderService.dimensions.css.cell.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      // Ensure the text area is at least 1x1, otherwise certain IMEs may break\n      this._textarea.style.width = Math.max(compositionViewBounds.width, 1) + 'px';\n      this._textarea.style.height = Math.max(compositionViewBounds.height, 1) + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(window: Pick<Window, 'getComputedStyle'>, event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  const elementStyle = window.getComputedStyle(element);\n  const leftPadding = parseInt(elementStyle.getPropertyValue('padding-left'));\n  const topPadding = parseInt(elementStyle.getPropertyValue('padding-top'));\n  return [\n    event.clientX - rect.left - leftPadding,\n    event.clientY - rect.top - topPadding\n  ];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param window The window object the element belongs to.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param hasValidCharSize Whether there is a valid character size available.\n * @param cssCellWidth The cell width device pixel render dimensions.\n * @param cssCellHeight The cell height device pixel render dimensions.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(window: Pick<Window, 'getComputedStyle'>, event: Pick<MouseEvent, 'clientX' | 'clientY'>, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, cssCellWidth: number, cssCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(window, event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? cssCellWidth / 2 : 0)) / cssCellWidth);\n  coords[1] = Math.ceil(coords[1] / cssCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  let direction;\n  if (startY === targetY) {\n    direction = startX > targetX ? Direction.LEFT : Direction.RIGHT;\n    return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n  }\n  direction = startY > targetY ? Direction.LEFT : Direction.RIGHT;\n  const rowDifference = Math.abs(startY - targetY);\n  const cellsToMove = colsFromRowEnd(startY > targetY ? targetX : startX, bufferService) +\n    (rowDifference - 1) * bufferService.cols + 1 /* wrap around 1 row */ +\n    colsFromRowBeginning(startY > targetY ? startX : targetX, bufferService);\n  return repeat(cellsToMove, sequence(direction, applicationCursor));\n}\n\n/**\n * Find the number of cols from a row beginning to a col.\n */\nfunction colsFromRowBeginning(currX: number, bufferService: IBufferService): number {\n  return currX - 1;\n}\n\n/**\n * Find the number of cols from a col to row end.\n */\nfunction colsFromRowEnd(currX: number, bufferService: IBufferService): number {\n  return bufferService.cols - currX;\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(startY, bufferService), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(startY, bufferService);\n  const endRow = targetY - wrappedRowsForRow(targetY, bufferService);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line?.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(currentRow: number, bufferService: IBufferService): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line?.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line?.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(targetY, bufferService);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param str The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { removeElementFromParent } from 'browser/Dom';\nimport { BOLD_CLASS, CURSOR_BLINK_CLASS, CURSOR_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory, ITALIC_CLASS } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { createRenderDimensions } from 'browser/renderer/shared/RendererUtils';\nimport { IRenderDimensions, IRenderer, IRequestRedrawEvent } from 'browser/renderer/shared/Types';\nimport { ICharSizeService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { ILinkifier2, ILinkifierEvent, ReadonlyColorSet } from 'browser/Types';\nimport { color } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IBufferService, IInstantiationService, IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement!: HTMLStyleElement;\n  private _dimensionsStyleElement!: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n  private _cellToRowElements: Int16Array[] = [];\n\n  public dimensions: IRenderDimensions;\n\n  public readonly onRequestRedraw = this.register(new EventEmitter<IRequestRedrawEvent>()).event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _linkifier2: ILinkifier2,\n    @IInstantiationService instantiationService: IInstantiationService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._bufferService.cols, this._bufferService.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = createRenderDimensions();\n    this._updateDimensions();\n    this.register(this._optionsService.onOptionChange(() => this._handleOptionsChanged()));\n\n    this.register(themeService.onChangeColors(e => this._injectCss(e)));\n    this._injectCss(themeService.colors);\n\n    this._rowFactory = instantiationService.createInstance(DomRendererRowFactory, document);\n\n    this._element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._screenElement.appendChild(this._rowContainer);\n    this._screenElement.appendChild(this._selectionContainer);\n\n    this.register(this._linkifier2.onShowLinkUnderline(e => this._handleLinkHover(e)));\n    this.register(this._linkifier2.onHideLinkUnderline(e => this._handleLinkLeave(e)));\n\n    this.register(toDisposable(() => {\n      this._element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n\n      // Outside influences such as React unmounts may manipulate the DOM before our disposal.\n      // https://github.com/xtermjs/xterm.js/issues/2960\n      removeElementFromParent(this._rowContainer, this._selectionContainer, this._themeStyleElement, this._dimensionsStyleElement);\n    }));\n  }\n\n  private _updateDimensions(): void {\n    const dpr = this._coreBrowserService.dpr;\n    this.dimensions.device.char.width = this._charSizeService.width * dpr;\n    this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * dpr);\n    this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing);\n    this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight);\n    this.dimensions.device.char.left = 0;\n    this.dimensions.device.char.top = 0;\n    this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols;\n    this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows;\n    this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / dpr);\n    this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / dpr);\n    this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols;\n    this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;\n\n    for (const element of this._rowElements) {\n      element.style.width = `${this.dimensions.css.canvas.width}px`;\n      element.style.height = `${this.dimensions.css.cell.height}px`;\n      element.style.lineHeight = `${this.dimensions.css.cell.height}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    }\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n      ` display: inline-block;` +\n      ` height: 100%;` +\n      ` vertical-align: top;` +\n      ` width: ${this.dimensions.css.cell.width}px` +\n      `}`;\n\n    this._dimensionsStyleElement.textContent = styles;\n\n    this._selectionContainer.style.height = this._viewportElement.style.height;\n    this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`;\n    this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`;\n  }\n\n  private _injectCss(colors: ReadonlyColorSet): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n      ` color: ${colors.foreground.css};` +\n      ` font-family: ${this._optionsService.rawOptions.fontFamily};` +\n      ` font-size: ${this._optionsService.rawOptions.fontSize}px;` +\n      `}`;\n    // Text styles\n    styles +=\n      `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeight};` +\n      `}` +\n      `${this._terminalSelector} span.${BOLD_CLASS} {` +\n      ` font-weight: ${this._optionsService.rawOptions.fontWeightBold};` +\n      `}` +\n      `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n      ` font-style: italic;` +\n      `}`;\n    // Blink animation\n    styles +=\n      `@keyframes blink_box_shadow` + `_` + this._terminalClass + ` {` +\n      ` 50% {` +\n      `  box-shadow: none;` +\n      ` }` +\n      `}`;\n    styles +=\n      `@keyframes blink_block` + `_` + this._terminalClass + ` {` +\n      ` 0% {` +\n      `  background-color: ${colors.cursor.css};` +\n      `  color: ${colors.cursorAccent.css};` +\n      ` }` +\n      ` 50% {` +\n      `  background-color: ${colors.cursorAccent.css};` +\n      `  color: ${colors.cursor.css};` +\n      ` }` +\n      `}`;\n    // Cursor\n    styles +=\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` outline: 1px solid ${colors.cursor.css};` +\n      ` outline-offset: -1px;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n      ` animation: blink_box_shadow` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` animation: blink_block` + `_` + this._terminalClass + ` 1s step-end infinite;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n      ` background-color: ${colors.cursor.css};` +\n      ` color: ${colors.cursorAccent.css};` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n      ` box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${colors.cursor.css} inset;` +\n      `}` +\n      `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n      ` box-shadow: 0 -1px 0 ${colors.cursor.css} inset;` +\n      `}`;\n    // Selection\n    styles +=\n      `${this._terminalSelector} .${SELECTION_CLASS} {` +\n      ` position: absolute;` +\n      ` top: 0;` +\n      ` left: 0;` +\n      ` z-index: 1;` +\n      ` pointer-events: none;` +\n      `}` +\n      `${this._terminalSelector}.focus .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionBackgroundOpaque.css};` +\n      `}` +\n      `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n      ` position: absolute;` +\n      ` background-color: ${colors.selectionInactiveBackgroundOpaque.css};` +\n      `}`;\n    // Colors\n    for (const [i, c] of colors.ansi.entries()) {\n      styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    }\n    styles +=\n      `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${color.opaque(colors.background).css}; }` +\n      `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${colors.foreground.css}; }`;\n\n    this._themeStyleElement.textContent = styles;\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public handleCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public handleBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public handleFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    this._rowFactory.handleSelectionChanged(start, end, columnSelectMode);\n    this.renderRows(0, this._bufferService.rows - 1);\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      const isXFlipped = start[0] > end[0];\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, isXFlipped ? end[0] : start[0], isXFlipped ? start[0] : end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportEndRow ? end[0] : this._bufferService.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._bufferService.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.css.cell.height}px`;\n    element.style.top = `${row * this.dimensions.css.cell.height}px`;\n    element.style.left = `${colStart * this.dimensions.css.cell.width}px`;\n    element.style.width = `${this.dimensions.css.cell.width * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public handleCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  private _handleOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n  }\n\n  public clear(): void {\n    for (const e of this._rowElements) {\n      /**\n       * NOTE: This used to be `e.innerText = '';` but that doesn't work when using `jsdom` and `@testing-library/react`\n       *\n       * references:\n       * - https://github.com/testing-library/react-testing-library/issues/1146\n       * - https://github.com/jsdom/jsdom/issues/1245\n       */\n      e.replaceChildren();\n    }\n  }\n\n  public renderRows(start: number, end: number): void {\n    const cursorAbsoluteY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const cursorX = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);\n    const cursorBlink = this._optionsService.rawOptions.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      const row = y + this._bufferService.buffer.ydisp;\n      const lineData = this._bufferService.buffer.lines.get(row);\n      const cursorStyle = this._optionsService.rawOptions.cursorStyle;\n      if (!this._cellToRowElements[y] || this._cellToRowElements[y].length !== this._bufferService.cols) {\n        this._cellToRowElements[y] = new Int16Array(this._bufferService.cols);\n      }\n      rowElement.replaceChildren(this._rowFactory.createRow(lineData!, row, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.css.cell.width, this._bufferService.cols, this._cellToRowElements[y]));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  private _handleLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _handleLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    x = this._cellToRowElements[y][x];\n    x2 = this._cellToRowElements[y2][x2];\n\n    if (x === -1 || x2 === -1) {\n      return;\n    }\n\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = row.children[x] as HTMLElement;\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, IColor } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/shared/Constants';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Attributes } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { ICoreService, IDecorationService, IOptionsService } from 'common/services/Services';\nimport { color, rgba } from 'common/Color';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ICharacterJoinerService, ICoreBrowserService, IThemeService } from 'browser/services/Services';\nimport { JoinedCellData } from 'browser/services/CharacterJoinerService';\nimport { excludeFromContrastRatioDemands } from 'browser/renderer/shared/RendererUtils';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const STRIKETHROUGH_CLASS = 'xterm-strikethrough';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  private _selectionStart: [number, number] | undefined;\n  private _selectionEnd: [number, number] | undefined;\n  private _columnSelectMode: boolean = false;\n\n  constructor(\n    private readonly _document: Document,\n    @ICharacterJoinerService private readonly _characterJoinerService: ICharacterJoinerService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IDecorationService private readonly _decorationService: IDecorationService,\n    @IThemeService private readonly _themeService: IThemeService\n  ) {}\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionStart = start;\n    this._selectionEnd = end;\n    this._columnSelectMode = columnSelectMode;\n  }\n\n  public createRow(lineData: IBufferLine, row: number, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number, cellMap: Int16Array): DocumentFragment {\n    // NOTE: `cellMap` maps cell positions to a span element index in a row.\n    // All positions should be updated, even skipped ones after wide chars or left overs at the end,\n    // otherwise the mouse hover logic might mark the wrong elements as underlined.\n\n    const fragment = this._document.createDocumentFragment();\n\n    const joinedRanges = this._characterJoinerService.getJoinedCharacters(row);\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    const colors = this._themeService.colors;\n    let elemIndex = -1;\n\n    let x = 0;\n    for (; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      let width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      // still have to update cellMap with current element index\n      if (width === 0) {\n        cellMap[x] = elemIndex;\n        continue;\n      }\n\n      // If true, indicates that the current character(s) to draw were joined.\n      let isJoined = false;\n      let lastCharX = x;\n\n      // Process any joined character ranges as needed. Because of how the\n      // ranges are produced, we know that they are valid for the characters\n      // and attributes of our input.\n      let cell = this._workCell;\n      if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n        isJoined = true;\n        const range = joinedRanges.shift()!;\n\n        // We already know the exact start and end column of the joined range,\n        // so we get the string and width representing it directly\n        cell = new JoinedCellData(\n          this._workCell,\n          lineData.translateToString(true, range[0], range[1]),\n          range[1] - range[0]\n        );\n\n        // Skip over the cells occupied by this range in the loop\n        lastCharX = range[1] - 1;\n\n        // Recalculate width\n        width = cell.getWidth();\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isJoined) {\n        // Ligatures in the DOM renderer must use display inline, as they may not show with\n        // inline-block if they are outside the bounds of the element\n        charElement.style.display = 'inline';\n\n        // The DOM renderer colors the background of the cursor but for ligatures all cells are\n        // joined. The workaround here is to show a cursor around the whole ligature so it shows up,\n        // the cursor looks the same when on any character of the ligature though\n        if (cursorX >= x && cursorX <= lastCharX) {\n          cursorX = x;\n        }\n      }\n\n      if (!this._coreService.isCursorHidden && isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (cell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (cell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (cell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (cell.isInvisible()) {\n        charElement.textContent = WHITESPACE_CELL_CHAR;\n      } else {\n        charElement.textContent = cell.getChars() || WHITESPACE_CELL_CHAR;\n      }\n\n      if (cell.isUnderline()) {\n        charElement.classList.add(`${UNDERLINE_CLASS}-${cell.extended.underlineStyle}`);\n        if (charElement.textContent === ' ') {\n          charElement.textContent = '\\xa0'; // = &nbsp;\n        }\n        if (!cell.isUnderlineColorDefault()) {\n          if (cell.isUnderlineColorRGB()) {\n            charElement.style.textDecorationColor = `rgb(${AttributeData.toColorRGB(cell.getUnderlineColor()).join(',')})`;\n          } else {\n            let fg = cell.getUnderlineColor();\n            if (this._optionsService.rawOptions.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            charElement.style.textDecorationColor = colors.ansi[fg].css;\n          }\n        }\n      }\n\n      if (cell.isStrikethrough()) {\n        charElement.classList.add(STRIKETHROUGH_CLASS);\n      }\n\n      let fg = cell.getFgColor();\n      let fgColorMode = cell.getFgColorMode();\n      let bg = cell.getBgColor();\n      let bgColorMode = cell.getBgColorMode();\n      const isInverse = !!cell.isInverse();\n      if (isInverse) {\n        const temp = fg;\n        fg = bg;\n        bg = temp;\n        const temp2 = fgColorMode;\n        fgColorMode = bgColorMode;\n        bgColorMode = temp2;\n      }\n\n      // Apply any decoration foreground/background overrides, this must happen after inverse has\n      // been applied\n      let bgOverride: IColor | undefined;\n      let fgOverride: IColor | undefined;\n      let isTop = false;\n      this._decorationService.forEachDecorationAtCell(x, row, undefined, d => {\n        if (d.options.layer !== 'top' && isTop) {\n          return;\n        }\n        if (d.backgroundColorRGB) {\n          bgColorMode = Attributes.CM_RGB;\n          bg = d.backgroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          bgOverride = d.backgroundColorRGB;\n        }\n        if (d.foregroundColorRGB) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = d.foregroundColorRGB.rgba >> 8 & 0xFFFFFF;\n          fgOverride = d.foregroundColorRGB;\n        }\n        isTop = d.options.layer === 'top';\n      });\n\n      // Apply selection foreground if applicable\n      const isInSelection = this._isCellInSelection(x, row);\n      if (!isTop) {\n        if (colors.selectionForeground && isInSelection) {\n          fgColorMode = Attributes.CM_RGB;\n          fg = colors.selectionForeground.rgba >> 8 & 0xFFFFFF;\n          fgOverride = colors.selectionForeground;\n        }\n      }\n\n      // If in the selection, force the element to be above the selection to improve contrast and\n      // support opaque selections\n      if (isInSelection) {\n        bgOverride = this._coreBrowserService.isFocused ? colors.selectionBackgroundOpaque : colors.selectionInactiveBackgroundOpaque;\n        isTop = true;\n      }\n\n      // If it's a top decoration, render above the selection\n      if (isTop) {\n        charElement.classList.add(`xterm-decoration-top`);\n      }\n\n      // Background\n      let resolvedBg: IColor;\n      switch (bgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          resolvedBg = colors.ansi[bg];\n          charElement.classList.add(`xterm-bg-${bg}`);\n          break;\n        case Attributes.CM_RGB:\n          resolvedBg = rgba.toColor(bg >> 16, bg >> 8 & 0xFF, bg & 0xFF);\n          this._addStyle(charElement, `background-color:#${padStart((bg >>> 0).toString(16), '0', 6)}`);\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (isInverse) {\n            resolvedBg = colors.foreground;\n            charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n          } else {\n            resolvedBg = colors.background;\n          }\n      }\n\n      // If there is no background override by now it's the original color, so apply dim if needed\n      if (!bgOverride) {\n        if (cell.isDim()) {\n          bgOverride = color.multiplyOpacity(resolvedBg, 0.5);\n        }\n      }\n\n      // Foreground\n      switch (fgColorMode) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:\n          if (cell.isBold() && fg < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors) {\n            fg += 8;\n          }\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.ansi[fg], cell, bgOverride, undefined)) {\n            charElement.classList.add(`xterm-fg-${fg}`);\n          }\n          break;\n        case Attributes.CM_RGB:\n          const color = rgba.toColor(\n            (fg >> 16) & 0xFF,\n            (fg >>  8) & 0xFF,\n            (fg      ) & 0xFF\n          );\n          if (!this._applyMinimumContrast(charElement, resolvedBg, color, cell, bgOverride, fgOverride)) {\n            this._addStyle(charElement, `color:#${padStart(fg.toString(16), '0', 6)}`);\n          }\n          break;\n        case Attributes.CM_DEFAULT:\n        default:\n          if (!this._applyMinimumContrast(charElement, resolvedBg, colors.foreground, cell, bgOverride, undefined)) {\n            if (isInverse) {\n              charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n            }\n          }\n      }\n\n      fragment.appendChild(charElement);\n      cellMap[x] = ++elemIndex;\n\n      x = lastCharX;\n    }\n\n    // since the loop above might exit early not handling all cells,\n    // also set remaining cell positions to last element index\n    if (x < cols - 1) {\n      cellMap.subarray(x).fill(++elemIndex);\n    }\n\n    return fragment;\n  }\n\n  private _applyMinimumContrast(element: HTMLElement, bg: IColor, fg: IColor, cell: ICellData, bgOverride: IColor | undefined, fgOverride: IColor | undefined): boolean {\n    if (this._optionsService.rawOptions.minimumContrastRatio === 1 || excludeFromContrastRatioDemands(cell.getCode())) {\n      return false;\n    }\n\n    // Try get from cache first, only use the cache when there are no decoration overrides\n    let adjustedColor: IColor | undefined | null = undefined;\n    if (!bgOverride && !fgOverride) {\n      adjustedColor = this._themeService.colors.contrastCache.getColor(bg.rgba, fg.rgba);\n    }\n\n    // Calculate and store in cache\n    if (adjustedColor === undefined) {\n      adjustedColor = color.ensureContrastRatio(bgOverride || bg, fgOverride || fg, this._optionsService.rawOptions.minimumContrastRatio);\n      this._themeService.colors.contrastCache.setColor((bgOverride || bg).rgba, (fgOverride || fg).rgba, adjustedColor ?? null);\n    }\n\n    if (adjustedColor) {\n      this._addStyle(element, `color:${adjustedColor.css}`);\n      return true;\n    }\n\n    return false;\n  }\n\n  private _addStyle(element: HTMLElement, style: string): void {\n    element.setAttribute('style', `${element.getAttribute('style') || ''}${style};`);\n  }\n\n  private _isCellInSelection(x: number, y: number): boolean {\n    const start = this._selectionStart;\n    const end = this._selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    if (this._columnSelectMode) {\n      if (start[0] <= end[0]) {\n        return x >= start[0] && y >= start[1] &&\n          x < end[0] && y <= end[1];\n      }\n      return x < start[0] && y >= start[1] &&\n        x >= end[0] && y <= end[1];\n    }\n    return (y > start[1] && y < end[1]) ||\n        (start[1] === end[1] && y === start[1] && x >= start[0] && x < end[0]) ||\n        (start[1] < end[1] && y === end[1] && x < end[0]) ||\n        (start[1] < end[1] && y === start[1] && x >= start[0]);\n  }\n}\n\nfunction padStart(text: string, padChar: string, length: number): string {\n  while (text.length < length) {\n    text = padChar + text;\n  }\n  return text;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isFirefox, isLegacyEdge } from 'common/Platform';\n\nexport const INVERTED_DEFAULT_COLOR = 257;\n\nexport const DIM_OPACITY = 0.5;\n// The text baseline is set conditionally by browser. Using 'ideographic' for Firefox or Legacy Edge would\n// result in truncated text (Issue 3353). Using 'bottom' for Chrome would result in slightly\n// unaligned Powerline fonts (PR 3356#issuecomment-850928179).\nexport const TEXT_BASELINE: CanvasTextBaseline = isFirefox || isLegacyEdge ? 'bottom' : 'ideographic';\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDimensions, IOffset, IRenderDimensions } from 'browser/renderer/shared/Types';\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n\nexport function isPowerlineGlyph(codepoint: number): boolean {\n  // Only return true for Powerline symbols which require\n  // different padding and should be excluded from minimum contrast\n  // ratio standards\n  return 0xE0A4 <= codepoint && codepoint <= 0xE0D6;\n}\n\nexport function isRestrictedPowerlineGlyph(codepoint: number): boolean {\n  return 0xE0B0 <= codepoint && codepoint <= 0xE0B7;\n}\n\nfunction isBoxOrBlockGlyph(codepoint: number): boolean {\n  return 0x2500 <= codepoint && codepoint <= 0x259F;\n}\n\nexport function excludeFromContrastRatioDemands(codepoint: number): boolean {\n  return isPowerlineGlyph(codepoint) || isBoxOrBlockGlyph(codepoint);\n}\n\nexport function createRenderDimensions(): IRenderDimensions {\n  return {\n    css: {\n      canvas: createDimension(),\n      cell: createDimension()\n    },\n    device: {\n      canvas: createDimension(),\n      cell: createDimension(),\n      char: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      }\n    }\n  };\n}\n\nfunction createDimension(): IDimensions {\n  return {\n    width: 0,\n    height: 0\n  };\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        // Ensure the trailing EOL isn't included when the selection ends on the right edge\n        if (startPlusLength % this._bufferService.cols === 0) {\n          return [this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols) - 1];\n        }\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        // Keep the whole wrapped word/line selected if the content wraps multiple lines\n        const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n        if (startPlusLength > this._bufferService.cols) {\n          return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n        }\n        return [Math.max(startPlusLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @returns Whether a refresh is necessary.\n   */\n  public handleTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { Disposable } from 'common/Lifecycle';\nimport { ITerminalOptions } from 'common/Types';\n\nexport class CharSizeService extends Disposable implements ICharSizeService {\n  public serviceBrand: undefined;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private readonly _onCharSizeChange = this.register(new EventEmitter<void>());\n  public readonly onCharSizeChange = this._onCharSizeChange.event;\n\n  constructor(\n    document: Document,\n    parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n    this.register(this._optionsService.onMultipleOptionChange(['fontFamily', 'fontSize'], () => this.measure()));\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoiner } from 'browser/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\nimport { ICharacterJoinerService } from 'browser/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerService implements ICharacterJoinerService {\n  public serviceBrand: undefined;\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    @IBufferService private _bufferService: IBufferService\n  ) { }\n\n  public register(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregister(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    let allJoinedRanges: [number, number][] = [];\n    try {\n      allJoinedRanges = this._characterJoiners[0].handler(text);\n    } catch (error) {\n      console.error(error);\n    }\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      try {\n        const joinerRanges = this._characterJoiners[i].handler(text);\n        for (let j = 0; j < joinerRanges.length; j++) {\n          CharacterJoinerService._mergeRanges(allJoinedRanges, joinerRanges[j]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    this._stringRangesToCellRanges(allJoinedRanges, lineData, startCol);\n    return allJoinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreBrowserService } from './Services';\n\nexport class CoreBrowserService implements ICoreBrowserService {\n  public serviceBrand: undefined;\n\n  private _isFocused = false;\n  private _cachedIsFocused: boolean | undefined = undefined;\n\n  constructor(\n    private _textarea: HTMLTextAreaElement,\n    public readonly window: Window & typeof globalThis\n  ) {\n    this._textarea.addEventListener('focus', () => this._isFocused = true);\n    this._textarea.addEventListener('blur', () => this._isFocused = false);\n  }\n\n  public get dpr(): number {\n    return this.window.devicePixelRatio;\n  }\n\n  public get isFocused(): boolean {\n    if (this._cachedIsFocused === undefined) {\n      this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus();\n      queueMicrotask(() => this._cachedIsFocused = undefined);\n    }\n    return this._cachedIsFocused;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getCoordsRelativeToElement } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  public serviceBrand: undefined;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      window,\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.css.cell.width,\n      this._renderService.dimensions.css.cell.height,\n      isSelection\n    );\n  }\n\n  public getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined {\n    const coords = getCoordsRelativeToElement(window, event, element);\n\n    // due to rounding issues in zoom states pixel values might be negative or overflow actual canvas\n    // ignore those events effectively narrowing mouse area a tiny bit at the edges\n    if (!this._charSizeService.hasValidSize\n      || coords[0] < 0\n      || coords[1] < 0\n      || coords[0] >= this._renderService.dimensions.css.canvas.width\n      || coords[1] >= this._renderService.dimensions.css.canvas.height) {\n      return undefined;\n    }\n\n    return {\n      col: Math.floor(coords[0] / this._renderService.dimensions.css.cell.width),\n      row: Math.floor(coords[1] / this._renderService.dimensions.css.cell.height),\n      x: Math.floor(coords[0]),\n      y: Math.floor(coords[1])\n    };\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions } from 'browser/renderer/shared/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IRenderDebouncerWithCallback, ReadonlyColorSet } from 'browser/Types';\nimport { IOptionsService, IBufferService, IDecorationService } from 'common/services/Services';\nimport { ICharSizeService, ICoreBrowserService, IRenderService, IThemeService } from 'browser/services/Services';\nimport { DebouncedIdleTask } from 'common/TaskQueue';\nimport { ThemeService } from 'browser/services/ThemeService';\n\ninterface ISelectionState {\n  start: [number, number] | undefined;\n  end: [number, number] | undefined;\n  columnSelectMode: boolean;\n}\n\nexport class RenderService extends Disposable implements IRenderService {\n  public serviceBrand: undefined;\n\n  private _renderer: IRenderer | undefined;\n  private _renderDebouncer: IRenderDebouncerWithCallback;\n  private _screenDprMonitor: ScreenDprMonitor;\n  private _pausedResizeTask = new DebouncedIdleTask();\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _isNextRenderRedrawOnly: boolean = true;\n  private _needsSelectionRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n  private _selectionState: ISelectionState = {\n    start: undefined,\n    end: undefined,\n    columnSelectMode: false\n  };\n\n  private readonly _onDimensionsChange = this.register(new EventEmitter<IRenderDimensions>());\n  public readonly onDimensionsChange =  this._onDimensionsChange.event;\n  private readonly _onRenderedViewportChange = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRenderedViewportChange = this._onRenderedViewportChange.event;\n  private readonly _onRender = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRender = this._onRender.event;\n  private readonly _onRefreshRequest = this.register(new EventEmitter<{ start: number, end: number }>());\n  public readonly onRefreshRequest = this._onRefreshRequest.event;\n\n  public get dimensions(): IRenderDimensions { return this._renderer!.dimensions; }\n\n  constructor(\n    private _rowCount: number,\n    screenElement: HTMLElement,\n    @IOptionsService optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IDecorationService decorationService: IDecorationService,\n    @IBufferService bufferService: IBufferService,\n    @ICoreBrowserService coreBrowserService: ICoreBrowserService,\n    @IThemeService themeService: IThemeService\n  ) {\n    super();\n\n    this.register({ dispose: () => this._renderer?.dispose() });\n\n    this._renderDebouncer = new RenderDebouncer(coreBrowserService.window, (start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor(coreBrowserService.window);\n    this._screenDprMonitor.setListener(() => this.handleDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(bufferService.onResize(() => this._fullRefresh()));\n    this.register(bufferService.buffers.onBufferActivate(() => this._renderer?.clear()));\n    this.register(optionsService.onOptionChange(() => this._handleOptionsChanged()));\n    this.register(this._charSizeService.onCharSizeChange(() => this.handleCharSizeChanged()));\n\n    // Do a full refresh whenever any decoration is added or removed. This may not actually result\n    // in changes but since decorations should be used sparingly or added/removed all in the same\n    // frame this should have minimal performance impact.\n    this.register(decorationService.onDecorationRegistered(() => this._fullRefresh()));\n    this.register(decorationService.onDecorationRemoved(() => this._fullRefresh()));\n\n    // Clear the renderer when the a change that could affect glyphs occurs\n    this.register(optionsService.onMultipleOptionChange([\n      'customGlyphs',\n      'drawBoldTextInBrightColors',\n      'letterSpacing',\n      'lineHeight',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontWeightBold',\n      'minimumContrastRatio'\n    ], () => {\n      this.clear();\n      this.handleResize(bufferService.cols, bufferService.rows);\n      this._fullRefresh();\n    }));\n\n    // Refresh the cursor line when the cursor changes\n    this.register(optionsService.onMultipleOptionChange([\n      'cursorBlink',\n      'cursorStyle'\n    ], () => this.refreshRows(bufferService.buffer.y, bufferService.buffer.y, true)));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(coreBrowserService.window, 'resize', () => this.handleDevicePixelRatioChange()));\n\n    this.register(themeService.onChangeColors(() => this._fullRefresh()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in coreBrowserService.window) {\n      const observer = new coreBrowserService.window.IntersectionObserver(e => this._handleIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _handleIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.isIntersecting === undefined ? (entry.intersectionRatio === 0) : !entry.isIntersecting;\n\n    // Terminal was hidden on open\n    if (!this._isPaused && !this._charSizeService.hasValidSize) {\n      this._charSizeService.measure();\n    }\n\n    if (!this._isPaused && this._needsFullRefresh) {\n      this._pausedResizeTask.flush();\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number, isRedrawOnly: boolean = false): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    if (!isRedrawOnly) {\n      this._isNextRenderRedrawOnly = false;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.renderRows(start, end);\n\n    // Update selection if needed\n    if (this._needsSelectionRefresh) {\n      this._renderer.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode);\n      this._needsSelectionRefresh = false;\n    }\n\n    // Fire render event only if it was not a redraw\n    if (!this._isNextRenderRedrawOnly) {\n      this._onRenderedViewportChange.fire({ start, end });\n    }\n    this._onRender.fire({ start, end });\n    this._isNextRenderRedrawOnly = true;\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  private _handleOptionsChanged(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this.refreshRows(0, this._rowCount - 1);\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    if (!this._renderer) {\n      return;\n    }\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.css.canvas.width === this._canvasWidth && this._renderer.dimensions.css.canvas.height === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public hasRenderer(): boolean {\n    return !!this._renderer;\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer?.dispose();\n    this._renderer = renderer;\n    this._renderer.onRequestRedraw(e => this.refreshRows(e.start, e.end, true));\n\n    // Force a refresh\n    this._needsSelectionRefresh = true;\n    this._fullRefresh();\n  }\n\n  public addRefreshCallback(callback: FrameRequestCallback): number {\n    return this._renderDebouncer.addRefreshCallback(callback);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public clearTextureAtlas(): void {\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.clearTextureAtlas?.();\n    this._fullRefresh();\n  }\n\n  public handleDevicePixelRatioChange(): void {\n    // Force char size measurement as DomMeasureStrategy(getBoundingClientRect) is not stable\n    // when devicePixelRatio changes\n    this._charSizeService.measure();\n\n    if (!this._renderer) {\n      return;\n    }\n    this._renderer.handleDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public handleResize(cols: number, rows: number): void {\n    if (!this._renderer) {\n      return;\n    }\n    if (this._isPaused) {\n      this._pausedResizeTask.set(() => this._renderer!.handleResize(cols, rows));\n    } else {\n      this._renderer.handleResize(cols, rows);\n    }\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public handleCharSizeChanged(): void {\n    this._renderer?.handleCharSizeChanged();\n  }\n\n  public handleBlur(): void {\n    this._renderer?.handleBlur();\n  }\n\n  public handleFocus(): void {\n    this._renderer?.handleFocus();\n  }\n\n  public handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void {\n    this._selectionState.start = start;\n    this._selectionState.end = end;\n    this._selectionState.columnSelectMode = columnSelectMode;\n    this._renderer?.handleSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public handleCursorMove(): void {\n    this._renderer?.handleCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer?.clear();\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IMouseService, ISelectionService, IRenderService, ICoreBrowserService } from 'browser/services/Services';\nimport { IBufferRange, ILinkifier2 } from 'browser/Types';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { getRangeLength } from 'common/buffer/BufferRange';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService extends Disposable implements ISelectionService {\n  public serviceBrand: undefined;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n  private _oldHasSelection: boolean = false;\n  private _oldSelectionStart: [number, number] | undefined = undefined;\n  private _oldSelectionEnd: [number, number] | undefined = undefined;\n\n  private readonly _onLinuxMouseSelection = this.register(new EventEmitter<string>());\n  public readonly onLinuxMouseSelection = this._onLinuxMouseSelection.event;\n  private readonly _onRedrawRequest = this.register(new EventEmitter<ISelectionRedrawRequestEvent>());\n  public readonly onRequestRedraw = this._onRedrawRequest.event;\n  private readonly _onSelectionChange = this.register(new EventEmitter<void>());\n  public readonly onSelectionChange = this._onSelectionChange.event;\n  private readonly _onRequestScrollLines = this.register(new EventEmitter<ISelectionRequestScrollLinesEvent>());\n  public readonly onRequestScrollLines = this._onRequestScrollLines.event;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    private readonly _linkifier: ILinkifier2,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICoreBrowserService private readonly _coreBrowserService: ICoreBrowserService\n  ) {\n    super();\n\n    // Init listeners\n    this._mouseMoveListener = event => this._handleMouseMove(event as MouseEvent);\n    this._mouseUpListener = event => this._handleMouseUp(event as MouseEvent);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._handleTrim(amount));\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._handleBufferActivate(e)));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n\n    this.register(toDisposable(() => {\n      this._removeMouseDownListeners();\n    }));\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      // For column selection it's not enough to rely on final selection's swapping of reversed\n      // values, it also needs the x coordinates to swap independently of the y coordinate is needed\n      const startCol = start[0] < end[0] ? start[0] : end[0];\n      const endCol = start[0] < end[0] ? end[0] : start[0];\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, startCol, endCol);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine?.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  private _isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  public isCellInSelection(x: number, y: number): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return this._areCoordsInSelection([x, y], start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  private _selectWordAtCursor(event: MouseEvent, allowWhitespaceOnlySelection: boolean): boolean {\n    // Check if there is a link under the cursor first and select that if so\n    const range = this._linkifier.currentLink?.link?.range;\n    if (range) {\n      this._model.selectionStart = [range.start.x - 1, range.start.y - 1];\n      this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, allowWhitespaceOnlySelection);\n      this._model.selectionEnd = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _handleTrim(amount: number): void {\n    const needsRefresh = this._model.handleTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(this._coreBrowserService.window, event, this._screenElement)[1];\n    const terminalHeight = this._renderService.dimensions.css.canvas.height;\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public handleMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._handleIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._handleSingleClick(event);\n      } else if (event.detail === 2) {\n        this._handleDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._handleTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _handleIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _handleSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current word.\n   * @param event The mouse event.\n   */\n  private _handleDoubleClick(event: MouseEvent): void {\n    if (this._selectWordAtCursor(event, true)) {\n      this._activeSelectionMode = SelectionMode.WORD;\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _handleTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _handleMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._onRequestScrollLines.fire({ amount: this._dragScrollAmount, suppressScrollEvent: false });\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _handleMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME && event.altKey && this._optionsService.rawOptions.altClickMovesCursor) {\n      if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else {\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  private _fireEventIfSelectionChanged(): void {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    const hasSelection = !!start && !!end && (start[0] !== end[0] || start[1] !== end[1]);\n\n    if (!hasSelection) {\n      if (this._oldHasSelection) {\n        this._fireOnSelectionChange(start, end, hasSelection);\n      }\n      return;\n    }\n\n    // Sanity check, these should not be undefined as there is a selection\n    if (!start || !end) {\n      return;\n    }\n\n    if (!this._oldSelectionStart || !this._oldSelectionEnd || (\n      start[0] !== this._oldSelectionStart[0] || start[1] !== this._oldSelectionStart[1] ||\n      end[0] !== this._oldSelectionEnd[0] || end[1] !== this._oldSelectionEnd[1])) {\n\n      this._fireOnSelectionChange(start, end, hasSelection);\n    }\n  }\n\n  private _fireOnSelectionChange(start: [number, number] | undefined, end: [number, number] | undefined, hasSelection: boolean): void {\n    this._oldSelectionStart = start;\n    this._oldSelectionEnd = end;\n    this._oldHasSelection = hasSelection;\n    this._onSelectionChange.fire();\n  }\n\n  private _handleBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    this._trimListener.dispose();\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._handleTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column (0 to cols - 1) to the character index on the\n   * buffer line, the latter takes into account wide and null characters.\n   * @param bufferLine The buffer line to use.\n   * @param x The x index in the buffer line to convert.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, x: number): number {\n    let charIndex = x;\n    for (let i = 0; x >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && x !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n    this._fireEventIfSelectionChanged();\n  }\n\n  public rightClickSelect(ev: MouseEvent): void {\n    if (!this._isClickInSelection(ev)) {\n      if (this._selectWordAtCursor(ev, false)) {\n        this.refresh(true);\n      }\n      this._fireEventIfSelectionChanged();\n    }\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords[0]);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n      endIndex // The index of the selection's end char in the line string\n      - startIndex // The index of the selection's start char in the line string\n      + leftWideCharCount // The number of wide chars left of the initial char\n      + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n      - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n      - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /* ' ' */) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine?.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /* ' ' */) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param cell The cell to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.rawOptions.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    const range: IBufferRange = {\n      start: { x: 0, y: wrappedRange.first },\n      end: { x: this._bufferService.cols - 1, y: wrappedRange.last }\n    };\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = undefined;\n    this._model.selectionStartLength = getRangeLength(range, this._bufferService.cols);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer } from 'browser/renderer/shared/Types';\nimport { IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent as ISelectionRequestRedrawEvent, ISelectionRequestScrollLinesEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { ColorIndex, IDisposable } from 'common/Types';\nimport { ITheme } from 'common/services/Services';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: undefined;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const ICoreBrowserService = createDecorator<ICoreBrowserService>('CoreBrowserService');\nexport interface ICoreBrowserService {\n  serviceBrand: undefined;\n\n  readonly isFocused: boolean;\n  /**\n   * Parent window that the terminal is rendered into. DOM and rendering APIs\n   * (e.g. requestAnimationFrame) should be invoked in the context of this\n   * window.\n   */\n  readonly window: Window & typeof globalThis;\n  /**\n   * Helper for getting the devicePixelRatio of the parent window.\n   */\n  readonly dpr: number;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: undefined;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getMouseReportCoords(event: MouseEvent, element: HTMLElement): { col: number, row: number, x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: undefined;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  /**\n   * Fires when buffer changes are rendered. This does not fire when only cursor\n   * or selections are rendered.\n   */\n  onRenderedViewportChange: IEvent<{ start: number, end: number }>;\n  /**\n   * Fires on render\n   */\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  addRefreshCallback(callback: FrameRequestCallback): number;\n\n  refreshRows(start: number, end: number): void;\n  clearTextureAtlas(): void;\n  resize(cols: number, rows: number): void;\n  hasRenderer(): boolean;\n  setRenderer(renderer: IRenderer): void;\n  handleDevicePixelRatioChange(): void;\n  handleResize(cols: number, rows: number): void;\n  handleCharSizeChanged(): void;\n  handleBlur(): void;\n  handleFocus(): void;\n  handleSelectionChanged(start: [number, number] | undefined, end: [number, number] | undefined, columnSelectMode: boolean): void;\n  handleCursorMove(): void;\n  clear(): void;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: undefined;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRequestRedraw: IEvent<ISelectionRequestRedrawEvent>;\n  readonly onRequestScrollLines: IEvent<ISelectionRequestScrollLinesEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  rightClickSelect(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  handleMouseDown(event: MouseEvent): void;\n  isCellInSelection(x: number, y: number): boolean;\n}\n\nexport const ICharacterJoinerService = createDecorator<ICharacterJoinerService>('CharacterJoinerService');\nexport interface ICharacterJoinerService {\n  serviceBrand: undefined;\n\n  register(handler: (text: string) => [number, number][]): number;\n  deregister(joinerId: number): boolean;\n  getJoinedCharacters(row: number): [number, number][];\n}\n\nexport const IThemeService = createDecorator<IThemeService>('ThemeService');\nexport interface IThemeService {\n  serviceBrand: undefined;\n\n  readonly colors: ReadonlyColorSet;\n\n  readonly onChangeColors: IEvent<ReadonlyColorSet>;\n\n  restoreColor(slot?: ColorIndex): void;\n  /**\n   * Allows external modifying of colors in the theme, this is used instead of {@link colors} to\n   * prevent accidental writes.\n   */\n  modifyColors(callback: (colors: IColorSet) => void): void;\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ColorContrastCache } from 'browser/ColorContrastCache';\nimport { IThemeService } from 'browser/services/Services';\nimport { IColorContrastCache, IColorSet, ReadonlyColorSet } from 'browser/Types';\nimport { channels, color, css, NULL_COLOR } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IOptionsService, ITheme } from 'common/services/Services';\nimport { ColorIndex, IColor } from 'common/Types';\n\ninterface IRestoreColorSet {\n  foreground: IColor;\n  background: IColor;\n  cursor: IColor;\n  ansi: IColor[];\n}\n\n\nconst DEFAULT_FOREGROUND = css.toColor('#ffffff');\nconst DEFAULT_BACKGROUND = css.toColor('#000000');\nconst DEFAULT_CURSOR = css.toColor('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = css.toColor('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF4D\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS.\nexport const DEFAULT_ANSI_COLORS = Object.freeze((() => {\n  const colors = [\n    // dark:\n    css.toColor('#2e3436'),\n    css.toColor('#cc0000'),\n    css.toColor('#4e9a06'),\n    css.toColor('#c4a000'),\n    css.toColor('#3465a4'),\n    css.toColor('#75507b'),\n    css.toColor('#06989a'),\n    css.toColor('#d3d7cf'),\n    // bright:\n    css.toColor('#555753'),\n    css.toColor('#ef2929'),\n    css.toColor('#8ae234'),\n    css.toColor('#fce94f'),\n    css.toColor('#729fcf'),\n    css.toColor('#ad7fa8'),\n    css.toColor('#34e2e2'),\n    css.toColor('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: channels.toCss(r, g, b),\n      rgba: channels.toRgba(r, g, b)\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    colors.push({\n      css: channels.toCss(c, c, c),\n      rgba: channels.toRgba(c, c, c)\n    });\n  }\n\n  return colors;\n})());\n\nexport class ThemeService extends Disposable implements IThemeService {\n  public serviceBrand: undefined;\n\n  private _colors: IColorSet;\n  private _contrastCache: IColorContrastCache;\n  private _restoreColors!: IRestoreColorSet;\n\n  public get colors(): ReadonlyColorSet { return this._colors; }\n\n  private readonly _onChangeColors = this.register(new EventEmitter<ReadonlyColorSet>());\n  public readonly onChangeColors = this._onChangeColors.event;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._contrastCache = new ColorContrastCache();\n    this._colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selectionForeground: undefined,\n      selectionBackgroundTransparent: DEFAULT_SELECTION,\n      selectionBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      selectionInactiveBackgroundTransparent: DEFAULT_SELECTION,\n      selectionInactiveBackgroundOpaque: color.blend(DEFAULT_BACKGROUND, DEFAULT_SELECTION),\n      ansi: DEFAULT_ANSI_COLORS.slice(),\n      contrastCache: this._contrastCache\n    };\n    this._updateRestoreColors();\n    this._setTheme(this._optionsService.rawOptions.theme);\n\n    this.register(this._optionsService.onSpecificOptionChange('minimumContrastRatio', () => this._contrastCache.clear()));\n    this.register(this._optionsService.onSpecificOptionChange('theme', () => this._setTheme(this._optionsService.rawOptions.theme)));\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  private _setTheme(theme: ITheme = {}): void {\n    const colors = this._colors;\n    colors.foreground = parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    colors.background = parseColor(theme.background, DEFAULT_BACKGROUND);\n    colors.cursor = parseColor(theme.cursor, DEFAULT_CURSOR);\n    colors.cursorAccent = parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT);\n    colors.selectionBackgroundTransparent = parseColor(theme.selectionBackground, DEFAULT_SELECTION);\n    colors.selectionBackgroundOpaque = color.blend(colors.background, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundTransparent = parseColor(theme.selectionInactiveBackground, colors.selectionBackgroundTransparent);\n    colors.selectionInactiveBackgroundOpaque = color.blend(colors.background, colors.selectionInactiveBackgroundTransparent);\n    colors.selectionForeground = theme.selectionForeground ? parseColor(theme.selectionForeground, NULL_COLOR) : undefined;\n    if (colors.selectionForeground === NULL_COLOR) {\n      colors.selectionForeground = undefined;\n    }\n\n    /**\n     * If selection color is opaque, blend it with background with 0.3 opacity\n     * Issue #2737\n     */\n    if (color.isOpaque(colors.selectionBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionBackgroundTransparent = color.opacity(colors.selectionBackgroundTransparent, opacity);\n    }\n    if (color.isOpaque(colors.selectionInactiveBackgroundTransparent)) {\n      const opacity = 0.3;\n      colors.selectionInactiveBackgroundTransparent = color.opacity(colors.selectionInactiveBackgroundTransparent, opacity);\n    }\n    colors.ansi = DEFAULT_ANSI_COLORS.slice();\n    colors.ansi[0] = parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    colors.ansi[1] = parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    colors.ansi[2] = parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    colors.ansi[3] = parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    colors.ansi[4] = parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    colors.ansi[5] = parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    colors.ansi[6] = parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    colors.ansi[7] = parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    colors.ansi[8] = parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    colors.ansi[9] = parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    colors.ansi[10] = parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    colors.ansi[11] = parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    colors.ansi[12] = parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    colors.ansi[13] = parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    colors.ansi[14] = parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    colors.ansi[15] = parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n    if (theme.extendedAnsi) {\n      const colorCount = Math.min(colors.ansi.length - 16, theme.extendedAnsi.length);\n      for (let i = 0; i < colorCount; i++) {\n        colors.ansi[i + 16] = parseColor(theme.extendedAnsi[i], DEFAULT_ANSI_COLORS[i + 16]);\n      }\n    }\n    // Clear our the cache\n    this._contrastCache.clear();\n    this._updateRestoreColors();\n    this._onChangeColors.fire(this.colors);\n  }\n\n  public restoreColor(slot?: ColorIndex): void {\n    this._restoreColor(slot);\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _restoreColor(slot: ColorIndex | undefined): void {\n    // unset slot restores all ansi colors\n    if (slot === undefined) {\n      for (let i = 0; i < this._restoreColors.ansi.length; ++i) {\n        this._colors.ansi[i] = this._restoreColors.ansi[i];\n      }\n      return;\n    }\n    switch (slot) {\n      case ColorIndex.FOREGROUND:\n        this._colors.foreground = this._restoreColors.foreground;\n        break;\n      case ColorIndex.BACKGROUND:\n        this._colors.background = this._restoreColors.background;\n        break;\n      case ColorIndex.CURSOR:\n        this._colors.cursor = this._restoreColors.cursor;\n        break;\n      default:\n        this._colors.ansi[slot] = this._restoreColors.ansi[slot];\n    }\n  }\n\n  public modifyColors(callback: (colors: IColorSet) => void): void {\n    callback(this._colors);\n    // Assume the change happened\n    this._onChangeColors.fire(this.colors);\n  }\n\n  private _updateRestoreColors(): void {\n    this._restoreColors = {\n      foreground: this._colors.foreground,\n      background: this._colors.background,\n      cursor: this._colors.cursor,\n      ansi: this._colors.ansi.slice()\n    };\n  }\n}\n\nfunction parseColor(\n  cssString: string | undefined,\n  fallback: IColor\n): IColor {\n  if (cssString !== undefined) {\n    try {\n      return css.toColor(cssString);\n    } catch {\n      // no-op\n    }\n  }\n  return fallback;\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> extends Disposable implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public readonly onDeleteEmitter = this.register(new EventEmitter<IDeleteEvent>());\n  public readonly onDelete = this.onDeleteEmitter.event;\n  public readonly onInsertEmitter = this.register(new EventEmitter<IInsertEvent>());\n  public readonly onInsert = this.onInsertEmitter.event;\n  public readonly onTrimEmitter = this.register(new EventEmitter<number>());\n  public readonly onTrim = this.onTrimEmitter.event;\n\n  constructor(\n    private _maxLength: number\n  ) {\n    super();\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @returns The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @returns The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n      this.onDeleteEmitter.fire({ index: start, amount: deleteCount });\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n    if (items.length) {\n      this.onInsertEmitter.fire({ index: start, amount: items.length });\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] && clone(val[key], depth - 1));\n  }\n\n  return clonedObject as T;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\nimport { IColor, IColorRGB } from 'common/Types';\n\nlet $r = 0;\nlet $g = 0;\nlet $b = 0;\nlet $a = 0;\n\nexport const NULL_COLOR: IColor = {\n  css: '#00000000',\n  rgba: 0\n};\n\n/**\n * Helper functions where the source type is \"channels\" (individual color channels as numbers).\n */\nexport namespace channels {\n  export function toCss(r: number, g: number, b: number, a?: number): string {\n    if (a !== undefined) {\n      return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}${toPaddedHex(a)}`;\n    }\n    return `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`;\n  }\n\n  export function toRgba(r: number, g: number, b: number, a: number = 0xFF): number {\n    // Note: The aggregated number is RGBA32 (BE), thus needs to be converted to ABGR32\n    // on LE systems, before it can be used for direct 32-bit buffer writes.\n    // >>> 0 forces an unsigned int\n    return (r << 24 | g << 16 | b << 8 | a) >>> 0;\n  }\n}\n\n/**\n * Helper functions where the source type is `IColor`.\n */\nexport namespace color {\n  export function blend(bg: IColor, fg: IColor): IColor {\n    $a = (fg.rgba & 0xFF) / 255;\n    if ($a === 1) {\n      return {\n        css: fg.css,\n        rgba: fg.rgba\n      };\n    }\n    const fgR = (fg.rgba >> 24) & 0xFF;\n    const fgG = (fg.rgba >> 16) & 0xFF;\n    const fgB = (fg.rgba >> 8) & 0xFF;\n    const bgR = (bg.rgba >> 24) & 0xFF;\n    const bgG = (bg.rgba >> 16) & 0xFF;\n    const bgB = (bg.rgba >> 8) & 0xFF;\n    $r = bgR + Math.round((fgR - bgR) * $a);\n    $g = bgG + Math.round((fgG - bgG) * $a);\n    $b = bgB + Math.round((fgB - bgB) * $a);\n    const css = channels.toCss($r, $g, $b);\n    const rgba = channels.toRgba($r, $g, $b);\n    return { css, rgba };\n  }\n\n  export function isOpaque(color: IColor): boolean {\n    return (color.rgba & 0xFF) === 0xFF;\n  }\n\n  export function ensureContrastRatio(bg: IColor, fg: IColor, ratio: number): IColor | undefined {\n    const result = rgba.ensureContrastRatio(bg.rgba, fg.rgba, ratio);\n    if (!result) {\n      return undefined;\n    }\n    return rgba.toColor(\n      (result >> 24 & 0xFF),\n      (result >> 16 & 0xFF),\n      (result >> 8  & 0xFF)\n    );\n  }\n\n  export function opaque(color: IColor): IColor {\n    const rgbaColor = (color.rgba | 0xFF) >>> 0;\n    [$r, $g, $b] = rgba.toChannels(rgbaColor);\n    return {\n      css: channels.toCss($r, $g, $b),\n      rgba: rgbaColor\n    };\n  }\n\n  export function opacity(color: IColor, opacity: number): IColor {\n    $a = Math.round(opacity * 0xFF);\n    [$r, $g, $b] = rgba.toChannels(color.rgba);\n    return {\n      css: channels.toCss($r, $g, $b, $a),\n      rgba: channels.toRgba($r, $g, $b, $a)\n    };\n  }\n\n  export function multiplyOpacity(color: IColor, factor: number): IColor {\n    $a = color.rgba & 0xFF;\n    return opacity(color, ($a * factor) / 0xFF);\n  }\n\n  export function toColorRGB(color: IColor): IColorRGB {\n    return [(color.rgba >> 24) & 0xFF, (color.rgba >> 16) & 0xFF, (color.rgba >> 8) & 0xFF];\n  }\n}\n\n/**\n * Helper functions where the source type is \"css\" (string: '#rgb', '#rgba', '#rrggbb', '#rrggbbaa').\n */\nexport namespace css {\n  let $ctx: CanvasRenderingContext2D | undefined;\n  let $litmusColor: CanvasGradient | undefined;\n  if (!isNode) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d', {\n      willReadFrequently: true\n    });\n    if (ctx) {\n      $ctx = ctx;\n      $ctx.globalCompositeOperation = 'copy';\n      $litmusColor = $ctx.createLinearGradient(0, 0, 1, 1);\n    }\n  }\n\n  /**\n   * Converts a css string to an IColor, this should handle all valid CSS color strings and will\n   * throw if it's invalid. The ideal format to use is `#rrggbb[aa]` as it's the fastest to parse.\n   *\n   * Only `#rgb[a]`, `#rrggbb[aa]`, `rgb()` and `rgba()` formats are supported when run in a Node\n   * environment.\n   */\n  export function toColor(css: string): IColor {\n    // Formats: #rgb[a] and #rrggbb[aa]\n    if (css.match(/#[\\da-f]{3,8}/i)) {\n      switch (css.length) {\n        case 4: { // #rgb\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          return rgba.toColor($r, $g, $b);\n        }\n        case 5: { // #rgba\n          $r = parseInt(css.slice(1, 2).repeat(2), 16);\n          $g = parseInt(css.slice(2, 3).repeat(2), 16);\n          $b = parseInt(css.slice(3, 4).repeat(2), 16);\n          $a = parseInt(css.slice(4, 5).repeat(2), 16);\n          return rgba.toColor($r, $g, $b, $a);\n        }\n        case 7: // #rrggbb\n          return {\n            css,\n            rgba: (parseInt(css.slice(1), 16) << 8 | 0xFF) >>> 0\n          };\n        case 9: // #rrggbbaa\n          return {\n            css,\n            rgba: parseInt(css.slice(1), 16) >>> 0\n          };\n      }\n    }\n\n    // Formats: rgb() or rgba()\n    const rgbaMatch = css.match(/rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(,\\s*(0|1|\\d?\\.(\\d+))\\s*)?\\)/);\n    if (rgbaMatch) {\n      $r = parseInt(rgbaMatch[1]);\n      $g = parseInt(rgbaMatch[2]);\n      $b = parseInt(rgbaMatch[3]);\n      $a = Math.round((rgbaMatch[5] === undefined ? 1 : parseFloat(rgbaMatch[5])) * 0xFF);\n      return rgba.toColor($r, $g, $b, $a);\n    }\n\n    // Validate the context is available for canvas-based color parsing\n    if (!$ctx || !$litmusColor) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Validate the color using canvas fillStyle\n    // See https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    $ctx.fillStyle = $litmusColor;\n    $ctx.fillStyle = css;\n    if (typeof $ctx.fillStyle !== 'string') {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    $ctx.fillRect(0, 0, 1, 1);\n    [$r, $g, $b, $a] = $ctx.getImageData(0, 0, 1, 1).data;\n\n    // Validate the color is non-transparent as color hue gets lost when drawn to the canvas\n    if ($a !== 0xFF) {\n      throw new Error('css.toColor: Unsupported css format');\n    }\n\n    // Extract the color from the canvas' fillStyle property which exposes the color value in rgba()\n    // format\n    // See https://html.spec.whatwg.org/multipage/canvas.html#serialisation-of-a-color\n    return {\n      rgba: channels.toRgba($r, $g, $b, $a),\n      css\n    };\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgb\" (number: 0xrrggbb).\n */\nexport namespace rgb {\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param rgb The color to use.\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance(rgb: number): number {\n    return relativeLuminance2(\n      (rgb >> 16) & 0xFF,\n      (rgb >> 8 ) & 0xFF,\n      (rgb      ) & 0xFF);\n  }\n\n  /**\n   * Gets the relative luminance of an RGB color, this is useful in determining the contrast ratio\n   * between two colors.\n   * @param r The red channel (0x00 to 0xFF).\n   * @param g The green channel (0x00 to 0xFF).\n   * @param b The blue channel (0x00 to 0xFF).\n   * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n   */\n  export function relativeLuminance2(r: number, g: number, b: number): number {\n    const rs = r / 255;\n    const gs = g / 255;\n    const bs = b / 255;\n    const rr = rs <= 0.03928 ? rs / 12.92 : Math.pow((rs + 0.055) / 1.055, 2.4);\n    const rg = gs <= 0.03928 ? gs / 12.92 : Math.pow((gs + 0.055) / 1.055, 2.4);\n    const rb = bs <= 0.03928 ? bs / 12.92 : Math.pow((bs + 0.055) / 1.055, 2.4);\n    return rr * 0.2126 + rg * 0.7152 + rb * 0.0722;\n  }\n}\n\n/**\n * Helper functions where the source type is \"rgba\" (number: 0xrrggbbaa).\n */\nexport namespace rgba {\n  /**\n   * Given a foreground color and a background color, either increase or reduce the luminance of the\n   * foreground color until the specified contrast ratio is met. If pure white or black is hit\n   * without the contrast ratio being met, go the other direction using the background color as the\n   * foreground color and take either the first or second result depending on which has the higher\n   * contrast ratio.\n   *\n   * `undefined` will be returned if the contrast ratio is already met.\n   *\n   * @param bgRgba The background color in rgba format.\n   * @param fgRgba The foreground color in rgba format.\n   * @param ratio The contrast ratio to achieve.\n   */\n  export function ensureContrastRatio(bgRgba: number, fgRgba: number, ratio: number): number | undefined {\n    const bgL = rgb.relativeLuminance(bgRgba >> 8);\n    const fgL = rgb.relativeLuminance(fgRgba >> 8);\n    const cr = contrastRatio(bgL, fgL);\n    if (cr < ratio) {\n      if (fgL < bgL) {\n        const resultA = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n        if (resultARatio < ratio) {\n          const resultB = increaseLuminance(bgRgba, fgRgba, ratio);\n          const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n          return resultARatio > resultBRatio ? resultA : resultB;\n        }\n        return resultA;\n      }\n      const resultA = increaseLuminance(bgRgba, fgRgba, ratio);\n      const resultARatio = contrastRatio(bgL, rgb.relativeLuminance(resultA >> 8));\n      if (resultARatio < ratio) {\n        const resultB = reduceLuminance(bgRgba, fgRgba, ratio);\n        const resultBRatio = contrastRatio(bgL, rgb.relativeLuminance(resultB >> 8));\n        return resultARatio > resultBRatio ? resultA : resultB;\n      }\n      return resultA;\n    }\n    return undefined;\n  }\n\n  export function reduceLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to reducing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR > 0 || fgG > 0 || fgB > 0)) {\n      // Reduce by 10% until the ratio is hit\n      fgR -= Math.max(0, Math.ceil(fgR * 0.1));\n      fgG -= Math.max(0, Math.ceil(fgG * 0.1));\n      fgB -= Math.max(0, Math.ceil(fgB * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  export function increaseLuminance(bgRgba: number, fgRgba: number, ratio: number): number {\n    // This is a naive but fast approach to increasing luminance as converting to\n    // HSL and back is expensive\n    const bgR = (bgRgba >> 24) & 0xFF;\n    const bgG = (bgRgba >> 16) & 0xFF;\n    const bgB = (bgRgba >>  8) & 0xFF;\n    let fgR = (fgRgba >> 24) & 0xFF;\n    let fgG = (fgRgba >> 16) & 0xFF;\n    let fgB = (fgRgba >>  8) & 0xFF;\n    let cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    while (cr < ratio && (fgR < 0xFF || fgG < 0xFF || fgB < 0xFF)) {\n      // Increase by 10% until the ratio is hit\n      fgR = Math.min(0xFF, fgR + Math.ceil((255 - fgR) * 0.1));\n      fgG = Math.min(0xFF, fgG + Math.ceil((255 - fgG) * 0.1));\n      fgB = Math.min(0xFF, fgB + Math.ceil((255 - fgB) * 0.1));\n      cr = contrastRatio(rgb.relativeLuminance2(fgR, fgG, fgB), rgb.relativeLuminance2(bgR, bgG, bgB));\n    }\n    return (fgR << 24 | fgG << 16 | fgB << 8 | 0xFF) >>> 0;\n  }\n\n  // FIXME: Move this to channels NS?\n  export function toChannels(value: number): [number, number, number, number] {\n    return [(value >> 24) & 0xFF, (value >> 16) & 0xFF, (value >> 8) & 0xFF, value & 0xFF];\n  }\n\n  export function toColor(r: number, g: number, b: number, a?: number): IColor {\n    return {\n      css: channels.toCss(r, g, b, a),\n      rgba: channels.toRgba(r, g, b, a)\n    };\n  }\n}\n\nexport function toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Gets the contrast ratio between two relative luminance values.\n * @param l1 The first relative luminance.\n * @param l2 The first relative luminance.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function contrastRatio(l1: number, l2: number): number {\n  if (l1 < l2) {\n    return (l2 + 0.05) / (l1 + 0.05);\n  }\n  return (l1 + 0.05) / (l2 + 0.05);\n}\n", "/**\n * Copyright (c) 2014-2020 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IInstantiationService, IOptionsService, IBufferService, ILogService, ICharsetService, ICoreService, ICoreMouseService, IUnicodeService, LogLevelEnum, ITerminalOptions, IOscLinkService } from 'common/services/Services';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { LogService } from 'common/services/LogService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { IDisposable, IAttributeData, ICoreTerminal, IScrollEvent, ScrollSource } from 'common/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { EventEmitter, IEvent, forwardEvent } from 'common/EventEmitter';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { UnicodeService } from 'common/services/UnicodeService';\nimport { CharsetService } from 'common/services/CharsetService';\nimport { updateWindowsModeWrappedState } from 'common/WindowsMode';\nimport { IFunctionIdentifier, IParams } from 'common/parser/Types';\nimport { IBufferSet } from 'common/buffer/Types';\nimport { InputHandler } from 'common/InputHandler';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\nimport { OscLinkService } from 'common/services/OscLinkService';\n\n// Only trigger this warning a single time per session\nlet hasWriteSyncWarnHappened = false;\n\nexport abstract class CoreTerminal extends Disposable implements ICoreTerminal {\n  protected readonly _instantiationService: IInstantiationService;\n  protected readonly _bufferService: IBufferService;\n  protected readonly _logService: ILogService;\n  protected readonly _charsetService: ICharsetService;\n  protected readonly _oscLinkService: IOscLinkService;\n\n  public readonly coreMouseService: ICoreMouseService;\n  public readonly coreService: ICoreService;\n  public readonly unicodeService: IUnicodeService;\n  public readonly optionsService: IOptionsService;\n\n  protected _inputHandler: InputHandler;\n  private _writeBuffer: WriteBuffer;\n  private _windowsMode: IDisposable | undefined;\n\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  protected _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  protected readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  /**\n   * Internally we track the source of the scroll but this is meaningless outside the library so\n   * it's filtered out.\n   */\n  protected _onScrollApi?: EventEmitter<number, void>;\n  protected _onScroll = this.register(new EventEmitter<IScrollEvent, void>());\n  public get onScroll(): IEvent<number, void> {\n    if (!this._onScrollApi) {\n      this._onScrollApi = this.register(new EventEmitter<number, void>());\n      this._onScroll.event(ev => {\n        this._onScrollApi?.fire(ev.position);\n      });\n    }\n    return this._onScrollApi.event;\n  }\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n  public get buffers(): IBufferSet { return this._bufferService.buffers; }\n  public get options(): Required<ITerminalOptions> { return this.optionsService.options; }\n  public set options(options: ITerminalOptions) {\n    for (const key in options) {\n      this.optionsService.options[key] = options[key];\n    }\n  }\n\n  constructor(\n    options: Partial<ITerminalOptions>\n  ) {\n    super();\n\n    // Setup and initialize services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = this.register(new OptionsService(options));\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this.register(this._instantiationService.createInstance(BufferService));\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this.register(this._instantiationService.createInstance(LogService));\n    this._instantiationService.setService(ILogService, this._logService);\n    this.coreService = this.register(this._instantiationService.createInstance(CoreService));\n    this._instantiationService.setService(ICoreService, this.coreService);\n    this.coreMouseService = this.register(this._instantiationService.createInstance(CoreMouseService));\n    this._instantiationService.setService(ICoreMouseService, this.coreMouseService);\n    this.unicodeService = this.register(this._instantiationService.createInstance(UnicodeService));\n    this._instantiationService.setService(IUnicodeService, this.unicodeService);\n    this._charsetService = this._instantiationService.createInstance(CharsetService);\n    this._instantiationService.setService(ICharsetService, this._charsetService);\n    this._oscLinkService = this._instantiationService.createInstance(OscLinkService);\n    this._instantiationService.setService(IOscLinkService, this._oscLinkService);\n\n    // Register input handler and handle/forward events\n    this._inputHandler = this.register(new InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService));\n    this.register(forwardEvent(this._inputHandler.onLineFeed, this._onLineFeed));\n    this.register(this._inputHandler);\n\n    // Setup listeners\n    this.register(forwardEvent(this._bufferService.onResize, this._onResize));\n    this.register(forwardEvent(this.coreService.onData, this._onData));\n    this.register(forwardEvent(this.coreService.onBinary, this._onBinary));\n    this.register(this.coreService.onRequestScrollToBottom(() => this.scrollToBottom()));\n    this.register(this.coreService.onUserInput(() =>  this._writeBuffer.handleUserInput()));\n    this.register(this.optionsService.onSpecificOptionChange('windowsMode', e => this._handleWindowsModeOptionChange(e)));\n    this.register(this._bufferService.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n    this.register(this._inputHandler.onScroll(event => {\n      this._onScroll.fire({ position: this._bufferService.buffer.ydisp, source: ScrollSource.TERMINAL });\n      this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom);\n    }));\n\n    // Setup WriteBuffer\n    this._writeBuffer = this.register(new WriteBuffer((data, promiseResult) => this._inputHandler.parse(data, promiseResult)));\n    this.register(forwardEvent(this._writeBuffer.onWriteParsed, this._onWriteParsed));\n\n    this.register(toDisposable(() => {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }));\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  /**\n   * Write data to terminal synchonously.\n   *\n   * This method is unreliable with async parser handlers, thus should not\n   * be used anymore. If you need blocking semantics on data input consider\n   * `write` with a callback instead.\n   *\n   * @deprecated Unreliable, will be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    if (this._logService.logLevel <= LogLevelEnum.WARN && !hasWriteSyncWarnHappened) {\n      this._logService.warn('writeSync is unreliable and will be removed soon.');\n      hasWriteSyncWarnHappened = true;\n    }\n    this._writeBuffer.writeSync(data, maxSubsequentCalls);\n  }\n\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    x = Math.max(x, MINIMUM_COLS);\n    y = Math.max(y, MINIMUM_ROWS);\n\n    this._bufferService.resize(x, y);\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    this._bufferService.scroll(eraseAttr, isWrapped);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    this._bufferService.scrollLines(disp, suppressScrollEvent, source);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this._bufferService.scrollPages(pageCount);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this._bufferService.scrollToTop();\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this._bufferService.scrollToBottom();\n  }\n\n  public scrollToLine(line: number): void {\n    this._bufferService.scrollToLine(line);\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerCsiHandler(id, callback);\n  }\n\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._inputHandler.registerOscHandler(ident, callback);\n  }\n\n  protected _setup(): void {\n    if (this.optionsService.rawOptions.windowsMode) {\n      this._enableWindowsMode();\n    }\n  }\n\n  public reset(): void {\n    this._inputHandler.reset();\n    this._bufferService.reset();\n    this._charsetService.reset();\n    this.coreService.reset();\n    this.coreMouseService.reset();\n  }\n\n  private _handleWindowsModeOptionChange(value: boolean): void {\n    if (value) {\n      this._enableWindowsMode();\n    } else {\n      this._windowsMode?.dispose();\n      this._windowsMode = undefined;\n    }\n  }\n\n  protected _enableWindowsMode(): void {\n    if (!this._windowsMode) {\n      const disposables: IDisposable[] = [];\n      disposables.push(this.onLineFeed(updateWindowsModeWrappedState.bind(null, this._bufferService)));\n      disposables.push(this.registerCsiHandler({ final: 'H' }, () => {\n        updateWindowsModeWrappedState(this._bufferService);\n        return false;\n      }));\n      this._windowsMode = {\n        dispose: () => {\n          for (const d of disposables) {\n            d.dispose();\n          }\n        }\n      };\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T, U = void> {\n  (arg1: T, arg2: U): void;\n}\n\nexport interface IEvent<T, U = void> {\n  (listener: (arg1: T, arg2: U) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T, U = void> {\n  event: IEvent<T, U>;\n  fire(arg1: T, arg2: U): void;\n  dispose(): void;\n}\n\nexport class EventEmitter<T, U = void> implements IEventEmitter<T, U> {\n  private _listeners: IListener<T, U>[] = [];\n  private _event?: IEvent<T, U>;\n  private _disposed: boolean = false;\n\n  public get event(): IEvent<T, U> {\n    if (!this._event) {\n      this._event = (listener: (arg1: T, arg2: U) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            if (!this._disposed) {\n              for (let i = 0; i < this._listeners.length; i++) {\n                if (this._listeners[i] === listener) {\n                  this._listeners.splice(i, 1);\n                  return;\n                }\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(arg1: T, arg2: U): void {\n    const queue: IListener<T, U>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, arg1, arg2);\n    }\n  }\n\n  public dispose(): void {\n    if (this._listeners) {\n      this._listeners.length = 0;\n    }\n    this._disposed = true;\n  }\n}\n\nexport function forwardEvent<T>(from: IEvent<T>, to: IEventEmitter<T>): IDisposable {\n  return from(e => to.fire(e));\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IAttributeData, IDisposable, IWindowOptions, IColorEvent, IParseStack, ColorIndex, ColorRequestType } from 'common/Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { StringToUtf32, stringFromCodePoint, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { IParsingState, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content, UnderlineStyle } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, ICoreMouseService, ICharsetService, IUnicodeService, LogLevelEnum, IOscLinkService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\nimport { IBuffer } from 'common/buffer/Types';\nimport { parseColor } from 'common/input/XParseColor';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: { [key: string]: number } = { '(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2 };\n\n/**\n * VT commands done by the parser - FIXME: move this to the parser?\n */\n// @vt: #Y   ESC   CSI   \"Control Sequence Introducer\"   \"ESC [\"   \"Start of a CSI sequence.\"\n// @vt: #Y   ESC   OSC   \"Operating System Command\"      \"ESC ]\"   \"Start of an OSC sequence.\"\n// @vt: #Y   ESC   DCS   \"Device Control String\"         \"ESC P\"   \"Start of a DCS sequence.\"\n// @vt: #Y   ESC   ST    \"String Terminator\"             \"ESC \\\"   \"Terminator used for string type sequences.\"\n// @vt: #Y   ESC   PM    \"Privacy Message\"               \"ESC ^\"   \"Start of a privacy message.\"\n// @vt: #Y   ESC   APC   \"Application Program Command\"   \"ESC _\"   \"Start of an APC sequence.\"\n// @vt: #Y   C1    CSI   \"Control Sequence Introducer\"   \"\\x9B\"    \"Start of a CSI sequence.\"\n// @vt: #Y   C1    OSC   \"Operating System Command\"      \"\\x9D\"    \"Start of an OSC sequence.\"\n// @vt: #Y   C1    DCS   \"Device Control String\"         \"\\x90\"    \"Start of a DCS sequence.\"\n// @vt: #Y   C1    ST    \"String Terminator\"             \"\\x9C\"    \"Terminator used for string type sequences.\"\n// @vt: #Y   C1    PM    \"Privacy Message\"               \"\\x9E\"    \"Start of a privacy message.\"\n// @vt: #Y   C1    APC   \"Application Program Command\"   \"\\x9F\"    \"Start of an APC sequence.\"\n// @vt: #Y   C0    NUL   \"Null\"                          \"\\0, \\x00\"  \"NUL is ignored.\"\n// @vt: #Y   C0    ESC   \"Escape\"                        \"\\e, \\x1B\"  \"Start of a sequence. Cancels any other sequence.\"\n\n/**\n * Document xterm VT features here that are currently unsupported\n */\n// @vt: #E[Supported via xterm-addon-image.]  DCS   SIXEL       \"SIXEL Graphics\"          \"DCS Ps ; Ps ; Ps ; q \tPt ST\"  \"Draw SIXEL image.\"\n// @vt: #N  DCS   DECUDK      \"User Defined Keys\"       \"DCS Ps ; Ps \\| Pt ST\"           \"Definitions for user-defined keys.\"\n// @vt: #N  DCS   XTGETTCAP   \"Request Terminfo String\" \"DCS + q Pt ST\"                 \"Request Terminfo String.\"\n// @vt: #N  DCS   XTSETTCAP   \"Set Terminfo Data\"       \"DCS + p Pt ST\"                 \"Set Terminfo Data.\"\n// @vt: #N  OSC   1           \"Set Icon Name\"           \"OSC 1 ; Pt BEL\"                \"Set icon name.\"\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n/**\n * Limit length of title and icon name stacks.\n */\nconst STACK_LIMIT = 10;\n\n// map params to window option\nfunction paramToWindowOption(n: number, opts: IWindowOptions): boolean {\n  if (n > 24) {\n    return opts.setWinLines || false;\n  }\n  switch (n) {\n    case 1: return !!opts.restoreWin;\n    case 2: return !!opts.minimizeWin;\n    case 3: return !!opts.setWinPosition;\n    case 4: return !!opts.setWinSizePixels;\n    case 5: return !!opts.raiseWin;\n    case 6: return !!opts.lowerWin;\n    case 7: return !!opts.refreshWin;\n    case 8: return !!opts.setWinSizeChars;\n    case 9: return !!opts.maximizeWin;\n    case 10: return !!opts.fullscreenWin;\n    case 11: return !!opts.getWinState;\n    case 13: return !!opts.getWinPosition;\n    case 14: return !!opts.getWinSizePixels;\n    case 15: return !!opts.getScreenSizePixels;\n    case 16: return !!opts.getCellSizePixels;\n    case 18: return !!opts.getWinSizeChars;\n    case 19: return !!opts.getScreenSizeChars;\n    case 20: return !!opts.getIconTitle;\n    case 21: return !!opts.getWinTitle;\n    case 22: return !!opts.pushTitle;\n    case 23: return !!opts.popTitle;\n    case 24: return !!opts.setWinLines;\n  }\n  return false;\n}\n\nexport enum WindowsOptionsReportType {\n  GET_WIN_SIZE_PIXELS = 0,\n  GET_CELL_SIZE_PIXELS = 1\n}\n\n// create a warning log if an async handler takes longer than the limit (in ms)\nconst SLOW_ASYNC_LIMIT = 5000;\n\n// Work variables to avoid garbage collection\nlet $temp = 0;\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n  private _windowTitle = '';\n  private _iconName = '';\n  private _dirtyRowTracker: IDirtyRowTracker;\n  protected _windowTitleStack: string[] = [];\n  protected _iconNameStack: string[] = [];\n\n  private _curAttrData: IAttributeData = DEFAULT_ATTR_DATA.clone();\n  public getAttrData(): IAttributeData { return this._curAttrData; }\n  private _eraseAttrDataInternal: IAttributeData = DEFAULT_ATTR_DATA.clone();\n\n  private _activeBuffer: IBuffer;\n\n  private readonly _onRequestBell = this.register(new EventEmitter<void>());\n  public readonly onRequestBell = this._onRequestBell.event;\n  private readonly _onRequestRefreshRows = this.register(new EventEmitter<number, number>());\n  public readonly onRequestRefreshRows = this._onRequestRefreshRows.event;\n  private readonly _onRequestReset = this.register(new EventEmitter<void>());\n  public readonly onRequestReset = this._onRequestReset.event;\n  private readonly _onRequestSendFocus = this.register(new EventEmitter<void>());\n  public readonly onRequestSendFocus = this._onRequestSendFocus.event;\n  private readonly _onRequestSyncScrollBar = this.register(new EventEmitter<void>());\n  public readonly onRequestSyncScrollBar = this._onRequestSyncScrollBar.event;\n  private readonly _onRequestWindowsOptionsReport = this.register(new EventEmitter<WindowsOptionsReportType>());\n  public readonly onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event;\n\n  private readonly _onA11yChar = this.register(new EventEmitter<string>());\n  public readonly onA11yChar = this._onA11yChar.event;\n  private readonly _onA11yTab = this.register(new EventEmitter<number>());\n  public readonly onA11yTab = this._onA11yTab.event;\n  private readonly _onCursorMove = this.register(new EventEmitter<void>());\n  public readonly onCursorMove = this._onCursorMove.event;\n  private readonly _onLineFeed = this.register(new EventEmitter<void>());\n  public readonly onLineFeed = this._onLineFeed.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n  private readonly _onTitleChange = this.register(new EventEmitter<string>());\n  public readonly onTitleChange = this._onTitleChange.event;\n  private readonly _onColor = this.register(new EventEmitter<IColorEvent>());\n  public readonly onColor = this._onColor.event;\n\n  private _parseStack: IParseStack = {\n    paused: false,\n    cursorStartX: 0,\n    cursorStartY: 0,\n    decodedLength: 0,\n    position: 0\n  };\n\n  constructor(\n    private readonly _bufferService: IBufferService,\n    private readonly _charsetService: ICharsetService,\n    private readonly _coreService: ICoreService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _oscLinkService: IOscLinkService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _unicodeService: IUnicodeService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser()\n  ) {\n    super();\n    this.register(this._parser);\n    this._dirtyRowTracker = new DirtyRowTracker(this._bufferService);\n\n    // Track properties used in performance critical code manually to avoid using slow getters\n    this._activeBuffer = this._bufferService.buffer;\n    this.register(this._bufferService.buffers.onBufferActivate(e => this._activeBuffer = e.activeBuffer));\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.registerCsiHandler({ final: '@' }, params => this.insertChars(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: '@' }, params => this.scrollLeft(params));\n    this._parser.registerCsiHandler({ final: 'A' }, params => this.cursorUp(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'A' }, params => this.scrollRight(params));\n    this._parser.registerCsiHandler({ final: 'B' }, params => this.cursorDown(params));\n    this._parser.registerCsiHandler({ final: 'C' }, params => this.cursorForward(params));\n    this._parser.registerCsiHandler({ final: 'D' }, params => this.cursorBackward(params));\n    this._parser.registerCsiHandler({ final: 'E' }, params => this.cursorNextLine(params));\n    this._parser.registerCsiHandler({ final: 'F' }, params => this.cursorPrecedingLine(params));\n    this._parser.registerCsiHandler({ final: 'G' }, params => this.cursorCharAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'H' }, params => this.cursorPosition(params));\n    this._parser.registerCsiHandler({ final: 'I' }, params => this.cursorForwardTab(params));\n    this._parser.registerCsiHandler({ final: 'J' }, params => this.eraseInDisplay(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'J' }, params => this.eraseInDisplay(params, true));\n    this._parser.registerCsiHandler({ final: 'K' }, params => this.eraseInLine(params, false));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'K' }, params => this.eraseInLine(params, true));\n    this._parser.registerCsiHandler({ final: 'L' }, params => this.insertLines(params));\n    this._parser.registerCsiHandler({ final: 'M' }, params => this.deleteLines(params));\n    this._parser.registerCsiHandler({ final: 'P' }, params => this.deleteChars(params));\n    this._parser.registerCsiHandler({ final: 'S' }, params => this.scrollUp(params));\n    this._parser.registerCsiHandler({ final: 'T' }, params => this.scrollDown(params));\n    this._parser.registerCsiHandler({ final: 'X' }, params => this.eraseChars(params));\n    this._parser.registerCsiHandler({ final: 'Z' }, params => this.cursorBackwardTab(params));\n    this._parser.registerCsiHandler({ final: '`' }, params => this.charPosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'a' }, params => this.hPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'b' }, params => this.repeatPrecedingCharacter(params));\n    this._parser.registerCsiHandler({ final: 'c' }, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.registerCsiHandler({ prefix: '>', final: 'c' }, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.registerCsiHandler({ final: 'd' }, params => this.linePosAbsolute(params));\n    this._parser.registerCsiHandler({ final: 'e' }, params => this.vPositionRelative(params));\n    this._parser.registerCsiHandler({ final: 'f' }, params => this.hVPosition(params));\n    this._parser.registerCsiHandler({ final: 'g' }, params => this.tabClear(params));\n    this._parser.registerCsiHandler({ final: 'h' }, params => this.setMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'h' }, params => this.setModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'l' }, params => this.resetMode(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'l' }, params => this.resetModePrivate(params));\n    this._parser.registerCsiHandler({ final: 'm' }, params => this.charAttributes(params));\n    this._parser.registerCsiHandler({ final: 'n' }, params => this.deviceStatus(params));\n    this._parser.registerCsiHandler({ prefix: '?', final: 'n' }, params => this.deviceStatusPrivate(params));\n    this._parser.registerCsiHandler({ intermediates: '!', final: 'p' }, params => this.softReset(params));\n    this._parser.registerCsiHandler({ intermediates: ' ', final: 'q' }, params => this.setCursorStyle(params));\n    this._parser.registerCsiHandler({ final: 'r' }, params => this.setScrollRegion(params));\n    this._parser.registerCsiHandler({ final: 's' }, params => this.saveCursor(params));\n    this._parser.registerCsiHandler({ final: 't' }, params => this.windowOptions(params));\n    this._parser.registerCsiHandler({ final: 'u' }, params => this.restoreCursor(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '}' }, params => this.insertColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\\'', final: '~' }, params => this.deleteColumns(params));\n    this._parser.registerCsiHandler({ intermediates: '\"', final: 'q' }, params => this.selectProtected(params));\n    this._parser.registerCsiHandler({ intermediates: '$', final: 'p' }, params => this.requestMode(params, true));\n    this._parser.registerCsiHandler({ prefix: '?', intermediates: '$', final: 'p' }, params => this.requestMode(params, false));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.registerOscHandler(0, new OscHandler(data => { this.setTitle(data); this.setIconName(data); return true; }));\n    //   1 - icon name\n    this._parser.registerOscHandler(1, new OscHandler(data => this.setIconName(data)));\n    //   2 - title\n    this._parser.registerOscHandler(2, new OscHandler(data => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    this._parser.registerOscHandler(4, new OscHandler(data => this.setOrReportIndexedColor(data)));\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //   8 - create hyperlink (not in xterm spec, see https://gist.github.com/egmontkob/eb114294efbcd5adb1944c9f3cb5feda)\n    this._parser.registerOscHandler(8, new OscHandler(data => this.setHyperlink(data)));\n    //  10 - Change VT100 text foreground color to Pt.\n    this._parser.registerOscHandler(10, new OscHandler(data => this.setOrReportFgColor(data)));\n    //  11 - Change VT100 text background color to Pt.\n    this._parser.registerOscHandler(11, new OscHandler(data => this.setOrReportBgColor(data)));\n    //  12 - Change text cursor color to Pt.\n    this._parser.registerOscHandler(12, new OscHandler(data => this.setOrReportCursorColor(data)));\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    this._parser.registerOscHandler(104, new OscHandler(data => this.restoreIndexedColor(data)));\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    this._parser.registerOscHandler(110, new OscHandler(data => this.restoreFgColor(data)));\n    // 111 - Reset VT100 text background color.\n    this._parser.registerOscHandler(111, new OscHandler(data => this.restoreBgColor(data)));\n    // 112 - Reset text cursor color.\n    this._parser.registerOscHandler(112, new OscHandler(data => this.restoreCursorColor(data)));\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.registerEscHandler({ final: '7' }, () => this.saveCursor());\n    this._parser.registerEscHandler({ final: '8' }, () => this.restoreCursor());\n    this._parser.registerEscHandler({ final: 'D' }, () => this.index());\n    this._parser.registerEscHandler({ final: 'E' }, () => this.nextLine());\n    this._parser.registerEscHandler({ final: 'H' }, () => this.tabSet());\n    this._parser.registerEscHandler({ final: 'M' }, () => this.reverseIndex());\n    this._parser.registerEscHandler({ final: '=' }, () => this.keypadApplicationMode());\n    this._parser.registerEscHandler({ final: '>' }, () => this.keypadNumericMode());\n    this._parser.registerEscHandler({ final: 'c' }, () => this.fullReset());\n    this._parser.registerEscHandler({ final: 'n' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: 'o' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '|' }, () => this.setgLevel(3));\n    this._parser.registerEscHandler({ final: '}' }, () => this.setgLevel(2));\n    this._parser.registerEscHandler({ final: '~' }, () => this.setgLevel(1));\n    this._parser.registerEscHandler({ intermediates: '%', final: '@' }, () => this.selectDefaultCharset());\n    this._parser.registerEscHandler({ intermediates: '%', final: 'G' }, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.registerEscHandler({ intermediates: '(', final: flag }, () => this.selectCharset('(' + flag));\n      this._parser.registerEscHandler({ intermediates: ')', final: flag }, () => this.selectCharset(')' + flag));\n      this._parser.registerEscHandler({ intermediates: '*', final: flag }, () => this.selectCharset('*' + flag));\n      this._parser.registerEscHandler({ intermediates: '+', final: flag }, () => this.selectCharset('+' + flag));\n      this._parser.registerEscHandler({ intermediates: '-', final: flag }, () => this.selectCharset('-' + flag));\n      this._parser.registerEscHandler({ intermediates: '.', final: flag }, () => this.selectCharset('.' + flag));\n      this._parser.registerEscHandler({ intermediates: '/', final: flag }, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.registerEscHandler({ intermediates: '#', final: '8' }, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.registerDcsHandler({ intermediates: '$', final: 'q' }, new DcsHandler((data, params) => this.requestStatusString(data, params)));\n  }\n\n  /**\n   * Async parse support.\n   */\n  private _preserveStack(cursorStartX: number, cursorStartY: number, decodedLength: number, position: number): void {\n    this._parseStack.paused = true;\n    this._parseStack.cursorStartX = cursorStartX;\n    this._parseStack.cursorStartY = cursorStartY;\n    this._parseStack.decodedLength = decodedLength;\n    this._parseStack.position = position;\n  }\n\n  private _logSlowResolvingAsync(p: Promise<boolean>): void {\n    // log a limited warning about an async handler taking too long\n    if (this._logService.logLevel <= LogLevelEnum.WARN) {\n      Promise.race([p, new Promise((res, rej) => setTimeout(() => rej('#SLOW_TIMEOUT'), SLOW_ASYNC_LIMIT))])\n        .catch(err => {\n          if (err !== '#SLOW_TIMEOUT') {\n            throw err;\n          }\n          console.warn(`async parser handler taking longer than ${SLOW_ASYNC_LIMIT} ms`);\n        });\n    }\n  }\n\n  private _getCurrentLinkId(): number {\n    return this._curAttrData.extended.urlId;\n  }\n\n  /**\n   * Parse call with async handler support.\n   *\n   * Whether the stack state got preserved for the next call, is indicated by the return value:\n   * - undefined (void):\n   *   all handlers were sync, no stack save, continue normally with next chunk\n   * - Promise\\<boolean\\>:\n   *   execution stopped at async handler, stack saved, continue with\n   *   same chunk and the promise resolve value as `promiseResult` until the method returns `undefined`\n   *\n   * Note: This method should only be called by `Terminal.write` to ensure correct execution order and\n   * proper continuation of async parser handlers.\n   */\n  public parse(data: string | Uint8Array, promiseResult?: boolean): void | Promise<boolean> {\n    let result: void | Promise<boolean>;\n    let cursorStartX = this._activeBuffer.x;\n    let cursorStartY = this._activeBuffer.y;\n    let start = 0;\n    const wasPaused = this._parseStack.paused;\n\n    if (wasPaused) {\n      // assumption: _parseBuffer never mutates between async calls\n      if (result = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, promiseResult)) {\n        this._logSlowResolvingAsync(result);\n        return result;\n      }\n      cursorStartX = this._parseStack.cursorStartX;\n      cursorStartY = this._parseStack.cursorStartY;\n      this._parseStack.paused = false;\n      if (data.length > MAX_PARSEBUFFER_LENGTH) {\n        start = this._parseStack.position + MAX_PARSEBUFFER_LENGTH;\n      }\n    }\n\n    // Log debug data, the log level gate is to prevent extra work in this hot path\n    if (this._logService.logLevel <= LogLevelEnum.DEBUG) {\n      this._logService.debug(`parsing data${typeof data === 'string' ? ` \"${data}\"` : ` \"${Array.prototype.map.call(data, e => String.fromCharCode(e)).join('')}\"`}`, typeof data === 'string'\n        ? data.split('').map(e => e.charCodeAt(0))\n        : data\n      );\n    }\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // Clear the dirty row service so we know which lines changed as a result of parsing\n    // Important: do not clear between async calls, otherwise we lost pending update information.\n    if (!wasPaused) {\n      this._dirtyRowTracker.clearRange();\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = start; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, i);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    } else {\n      if (!wasPaused) {\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data, this._parseBuffer)\n          : this._utf8Decoder.decode(data, this._parseBuffer);\n        if (result = this._parser.parse(this._parseBuffer, len)) {\n          this._preserveStack(cursorStartX, cursorStartY, len, 0);\n          this._logSlowResolvingAsync(result);\n          return result;\n        }\n      }\n    }\n\n    if (this._activeBuffer.x !== cursorStartX || this._activeBuffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n\n    // Refresh any dirty rows accumulated as part of parsing\n    this._onRequestRefreshRows.fire(this._dirtyRowTracker.start, this._dirtyRowTracker.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const charset = this._charsetService.charset;\n    const screenReaderMode = this._optionsService.rawOptions.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._coreService.decPrivateModes.wraparound;\n    const insertMode = this._coreService.modes.insertMode;\n    const curAttr = this._curAttrData;\n    let bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    // handle wide chars: reset start_cell-1 if we would overwrite the second cell of a wide char\n    if (this._activeBuffer.x && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x - 1) === 2) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x - 1, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = this._unicodeService.wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._onA11yChar.fire(stringFromCodePoint(code));\n      }\n      if (this._getCurrentLinkId()) {\n        this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y);\n      }\n\n      // insert combining char at last cursor position\n      // this._activeBuffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for this._activeBuffer.x to avoid overflow left\n      if (!chWidth && this._activeBuffer.x) {\n        if (!bufferRow.getWidth(this._activeBuffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(this._activeBuffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // NOTE: To avoid costly width checks here,\n      // the terminal does not allow a cols < 2.\n      if (this._activeBuffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          // clear left over cells to the right\n          while (this._activeBuffer.x < cols) {\n            bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n          }\n          this._activeBuffer.x = 0;\n          this._activeBuffer.y++;\n          if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n            this._activeBuffer.y--;\n            this._bufferService.scroll(this._eraseAttrData(), true);\n          } else {\n            if (this._activeBuffer.y >= this._bufferService.rows) {\n              this._activeBuffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        } else {\n          this._activeBuffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(this._activeBuffer.x, chWidth, this._activeBuffer.getNullCell(curAttr), curAttr);\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x++, code, chWidth, curAttr.fg, curAttr.bg, curAttr.extended);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that this._activeBuffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(this._activeBuffer.x++, 0, 0, curAttr.fg, curAttr.bg, curAttr.extended);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end - start > 0) {\n      bufferRow.loadCell(this._activeBuffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n\n    // handle wide chars: reset cell to the right if it is second cell of a wide char\n    if (this._activeBuffer.x < cols && end - start > 0 && bufferRow.getWidth(this._activeBuffer.x) === 0 && !bufferRow.hasContent(this._activeBuffer.x)) {\n      bufferRow.setCellFromCodePoint(this._activeBuffer.x, 0, 1, curAttr.fg, curAttr.bg, curAttr.extended);\n    }\n\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Forward registerCsiHandler from parser.\n   */\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean | Promise<boolean>): IDisposable {\n    if (id.final === 't' && !id.prefix && !id.intermediates) {\n      // security: always check whether window option is allowed\n      return this._parser.registerCsiHandler(id, params => {\n        if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n          return true;\n        }\n        return callback(params);\n      });\n    }\n    return this._parser.registerCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward registerDcsHandler from parser.\n   */\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward registerEscHandler from parser.\n   */\n  public registerEscHandler(id: IFunctionIdentifier, callback: () => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerEscHandler(id, callback);\n  }\n\n  /**\n   * Forward registerOscHandler from parser.\n   */\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._parser.registerOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   *\n   * @vt: #Y   C0    BEL   \"Bell\"  \"\\a, \\x07\"  \"Ring the bell.\"\n   * The behavior of the bell is further customizable with `ITerminalOptions.bellStyle`\n   * and `ITerminalOptions.bellSound`.\n   */\n  public bell(): boolean {\n    this._onRequestBell.fire();\n    return true;\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   *\n   * @vt: #Y   C0    LF   \"Line Feed\"            \"\\n, \\x0A\"  \"Move the cursor one row down, scrolling if needed.\"\n   * Scrolling is restricted to scroll margins and will only happen on the bottom line.\n   *\n   * @vt: #Y   C0    VT   \"Vertical Tabulation\"  \"\\v, \\x0B\"  \"Treated as LF.\"\n   * @vt: #Y   C0    FF   \"Form Feed\"            \"\\f, \\x0C\"  \"Treated as LF.\"\n   */\n  public lineFeed(): boolean {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._optionsService.rawOptions.convertEol) {\n      this._activeBuffer.x = 0;\n    }\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      this._activeBuffer.x--;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n\n    this._onLineFeed.fire();\n    return true;\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   *\n   * @vt: #Y   C0    CR   \"Carriage Return\"  \"\\r, \\x0D\"  \"Move the cursor to the beginning of the row.\"\n   */\n  public carriageReturn(): boolean {\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   *\n   * @vt: #Y   C0    BS   \"Backspace\"  \"\\b, \\x08\"  \"Move the cursor one position to the left.\"\n   * By default it is not possible to move the cursor past the leftmost position.\n   * If `reverse wrap-around` (`CSI ? 45 h`) is set, a previous soft line wrap (DECAWM)\n   * can be undone with BS within the scroll margins. In that case the cursor will wrap back\n   * to the end of the previous row. Note that it is not possible to peek back into the scrollbuffer\n   * with the cursor, thus at the home position (top-leftmost cell) this has no effect.\n   */\n  public backspace(): boolean {\n    // reverse wrap-around is disabled\n    if (!this._coreService.decPrivateModes.reverseWraparound) {\n      this._restrictCursor();\n      if (this._activeBuffer.x > 0) {\n        this._activeBuffer.x--;\n      }\n      return true;\n    }\n\n    // reverse wrap-around is enabled\n    // other than for normal operation mode, reverse wrap-around allows the cursor\n    // to be at x=cols to be able to address the last cell of a row by BS\n    this._restrictCursor(this._bufferService.cols);\n\n    if (this._activeBuffer.x > 0) {\n      this._activeBuffer.x--;\n    } else {\n      /**\n       * reverse wrap-around handling:\n       * Our implementation deviates from xterm on purpose. Details:\n       * - only previous soft NLs can be reversed (isWrapped=true)\n       * - only works within scrollborders (top/bottom, left/right not yet supported)\n       * - cannot peek into scrollbuffer\n       * - any cursor movement sequence keeps working as expected\n       */\n      if (this._activeBuffer.x === 0\n        && this._activeBuffer.y > this._activeBuffer.scrollTop\n        && this._activeBuffer.y <= this._activeBuffer.scrollBottom\n        && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {\n        this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!.isWrapped = false;\n        this._activeBuffer.y--;\n        this._activeBuffer.x = this._bufferService.cols - 1;\n        // find last taken cell - last cell can have 3 different states:\n        // - hasContent(true) + hasWidth(1): narrow char - we are done\n        // - hasWidth(0): second part of wide char - we are done\n        // - hasContent(false) + hasWidth(1): empty cell due to early wrapping wide char, go one cell further back\n        const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)!;\n        if (line.hasWidth(this._activeBuffer.x) && !line.hasContent(this._activeBuffer.x)) {\n          this._activeBuffer.x--;\n          // We do this only once, since width=1 + hasContent=false currently happens only once before\n          // early wrapping of a wide char.\n          // This needs to be fixed once we support graphemes taking more than 2 cells.\n        }\n      }\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   *\n   * @vt: #Y   C0    HT   \"Horizontal Tabulation\"  \"\\t, \\x09\"  \"Move the cursor to the next character tab stop.\"\n   */\n  public tab(): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    const originalX = this._activeBuffer.x;\n    this._activeBuffer.x = this._activeBuffer.nextStop();\n    if (this._optionsService.rawOptions.screenReaderMode) {\n      this._onA11yTab.fire(this._activeBuffer.x - originalX);\n    }\n    return true;\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   *\n   * @vt: #P[Only limited ISO-2022 charset support.]  C0    SO   \"Shift Out\"  \"\\x0E\"  \"Switch to an alternative character set.\"\n   */\n  public shiftOut(): boolean {\n    this._charsetService.setgLevel(1);\n    return true;\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   *\n   * @vt: #Y   C0    SI   \"Shift In\"   \"\\x0F\"  \"Return to regular character set after Shift Out.\"\n   */\n  public shiftIn(): boolean {\n    this._charsetService.setgLevel(0);\n    return true;\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(maxCol: number = this._bufferService.cols - 1): void {\n    this._activeBuffer.x = Math.min(maxCol, Math.max(0, this._activeBuffer.x));\n    this._activeBuffer.y = this._coreService.decPrivateModes.origin\n      ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y));\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    if (this._coreService.decPrivateModes.origin) {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = this._activeBuffer.scrollTop + y;\n    } else {\n      this._activeBuffer.x = x;\n      this._activeBuffer.y = y;\n    }\n    this._restrictCursor();\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._activeBuffer.x + x, this._activeBuffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   *\n   * @vt: #Y CSI CUU   \"Cursor Up\"   \"CSI Ps A\"  \"Move cursor `Ps` times up (default=1).\"\n   * If the cursor would pass the top scroll margin, it will stop there.\n   */\n  public cursorUp(params: IParams): boolean {\n    // stop at scrollTop\n    const diffToTop = this._activeBuffer.y - this._activeBuffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   *\n   * @vt: #Y CSI CUD   \"Cursor Down\"   \"CSI Ps B\"  \"Move cursor `Ps` times down (default=1).\"\n   * If the cursor would pass the bottom scroll margin, it will stop there.\n   */\n  public cursorDown(params: IParams): boolean {\n    // stop at scrollBottom\n    const diffToBottom = this._activeBuffer.scrollBottom - this._activeBuffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   *\n   * @vt: #Y CSI CUF   \"Cursor Forward\"    \"CSI Ps C\"  \"Move cursor `Ps` times forward (default=1).\"\n   */\n  public cursorForward(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   *\n   * @vt: #Y CSI CUB   \"Cursor Backward\"   \"CSI Ps D\"  \"Move cursor `Ps` times backward (default=1).\"\n   */\n  public cursorBackward(params: IParams): boolean {\n    this._moveCursor(-(params.params[0] || 1), 0);\n    return true;\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CNL   \"Cursor Next Line\"  \"CSI Ps E\"  \"Move cursor `Ps` times down (default=1) and to the first column.\"\n   * Same as CUD, additionally places the cursor at the first column.\n   */\n  public cursorNextLine(params: IParams): boolean {\n    this.cursorDown(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   *\n   * @vt: #Y CSI CPL   \"Cursor Backward\"   \"CSI Ps F\"  \"Move cursor `Ps` times up (default=1) and to the first column.\"\n   * Same as CUU, additionally places the cursor at the first column.\n   */\n  public cursorPrecedingLine(params: IParams): boolean {\n    this.cursorUp(params);\n    this._activeBuffer.x = 0;\n    return true;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   *\n   * @vt: #Y CSI CHA   \"Cursor Horizontal Absolute\" \"CSI Ps G\" \"Move cursor to `Ps`-th column of the active row (default=1).\"\n   */\n  public cursorCharAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   *\n   * @vt: #Y CSI CUP   \"Cursor Position\"   \"CSI Ps ; Ps H\"  \"Set cursor to position [`Ps`, `Ps`] (default = [1, 1]).\"\n   * If ORIGIN mode is set, places the cursor to the absolute position within the scroll margins.\n   * If ORIGIN mode is not set, places the cursor to the absolute position within the viewport.\n   * Note that the coordinates are 1-based, thus the top left position starts at `1 ; 1`.\n   */\n  public cursorPosition(params: IParams): boolean {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1\n    );\n    return true;\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   *\n   * @vt: #Y CSI HPA   \"Horizontal Position Absolute\"  \"CSI Ps ` \" \"Same as CHA.\"\n   */\n  public charPosAbsolute(params: IParams): boolean {\n    this._setCursor((params.params[0] || 1) - 1, this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   *\n   * @vt: #Y CSI HPR   \"Horizontal Position Relative\"  \"CSI Ps a\"  \"Same as CUF.\"\n   */\n  public hPositionRelative(params: IParams): boolean {\n    this._moveCursor(params.params[0] || 1, 0);\n    return true;\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   *\n   * @vt: #Y CSI VPA   \"Vertical Position Absolute\"    \"CSI Ps d\"  \"Move cursor to `Ps`-th row (default=1).\"\n   */\n  public linePosAbsolute(params: IParams): boolean {\n    this._setCursor(this._activeBuffer.x, (params.params[0] || 1) - 1);\n    return true;\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   *\n   * @vt: #Y CSI VPR   \"Vertical Position Relative\"    \"CSI Ps e\"  \"Move cursor `Ps` times down (default=1).\"\n   */\n  public vPositionRelative(params: IParams): boolean {\n    this._moveCursor(0, params.params[0] || 1);\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   *\n   * @vt: #Y CSI HVP   \"Horizontal and Vertical Position\" \"CSI Ps ; Ps f\"  \"Same as CUP.\"\n   */\n  public hVPosition(params: IParams): boolean {\n    this.cursorPosition(params);\n    return true;\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   *\n   * @vt: #Y CSI TBC   \"Tab Clear\" \"CSI Ps g\"  \"Clear tab stops at current position (0) or all (3) (default=0).\"\n   * Clearing tabstops off the active row (Ps = 2, VT100) is currently not supported.\n   */\n  public tabClear(params: IParams): boolean {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._activeBuffer.tabs[this._activeBuffer.x];\n    } else if (param === 3) {\n      this._activeBuffer.tabs = {};\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   *\n   * @vt: #Y CSI CHT   \"Cursor Horizontal Tabulation\" \"CSI Ps I\" \"Move cursor `Ps` times tabs forward (default=1).\"\n   */\n  public cursorForwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.nextStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   *\n   * @vt: #Y CSI CBT   \"Cursor Backward Tabulation\"  \"CSI Ps Z\"  \"Move cursor `Ps` tabs backward (default=1).\"\n   */\n  public cursorBackwardTab(params: IParams): boolean {\n    if (this._activeBuffer.x >= this._bufferService.cols) {\n      return true;\n    }\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.x = this._activeBuffer.prevStop();\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps \" q  Select Character Protection Attribute (DECSCA).\n   *\n   * @vt: #Y CSI DECSCA   \"Select Character Protection Attribute\"  \"CSI Ps \" q\"  \"Whether DECSED and DECSEL can erase (0=default, 2) or not (1).\"\n   */\n  public selectProtected(params: IParams): boolean {\n    const p = params.params[0];\n    if (p === 1) this._curAttrData.bg |= BgFlags.PROTECTED;\n    if (p === 2 || p === 0) this._curAttrData.bg &= ~BgFlags.PROTECTED;\n    return true;\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y The row index relative to the viewport.\n   * @param start The start x index of the range to be erased.\n   * @param end The end x index of the range to be erased (exclusive).\n   * @param clearWrap clear the isWrapped flag\n   * @param respectProtect Whether to respect the protection attribute (DECSCA).\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.replaceCells(\n      start,\n      end,\n      this._activeBuffer.getNullCell(this._eraseAttrData()),\n      this._eraseAttrData(),\n      respectProtect\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number, respectProtect: boolean = false): void {\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n    line.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), respectProtect);\n    this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + y);\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI ED  \"Erase In Display\"  \"CSI Ps J\"  \"Erase various parts of the viewport.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                       |\n   * | -- | ------------------------------------------------------------ |\n   * | 0  | Erase from the cursor through the end of the viewport.       |\n   * | 1  | Erase from the beginning of the viewport through the cursor. |\n   * | 2  | Erase complete viewport.                                     |\n   * | 3  | Erase scrollback.                                            |\n   *\n   * @vt: #Y CSI DECSED   \"Selective Erase In Display\"  \"CSI ? Ps J\"  \"Same as ED with respecting protection flag.\"\n   */\n  public eraseInDisplay(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        this._eraseInBufferLine(j++, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(j);\n        break;\n      case 1:\n        j = this._activeBuffer.y;\n        this._dirtyRowTracker.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._activeBuffer.x + 1, true, respectProtect);\n        if (this._activeBuffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._activeBuffer.lines.get(j + 1)!.isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowTracker.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j, respectProtect);\n        }\n        this._dirtyRowTracker.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._activeBuffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._activeBuffer.lines.trimStart(scrollBackSize);\n          this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - scrollBackSize, 0);\n          this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   *\n   * @vt: #Y CSI EL    \"Erase In Line\"  \"CSI Ps K\"  \"Erase various parts of the active row.\"\n   * Supported param values:\n   *\n   * | Ps | Effect                                                   |\n   * | -- | -------------------------------------------------------- |\n   * | 0  | Erase from the cursor through the end of the row.        |\n   * | 1  | Erase from the beginning of the line through the cursor. |\n   * | 2  | Erase complete line.                                     |\n   *\n   * @vt: #Y CSI DECSEL   \"Selective Erase In Line\"  \"CSI ? Ps K\"  \"Same as EL with respecting protecting flag.\"\n   */\n  public eraseInLine(params: IParams, respectProtect: boolean = false): boolean {\n    this._restrictCursor(this._bufferService.cols);\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, this._activeBuffer.x === 0, respectProtect);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, false, respectProtect);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, true, respectProtect);\n        break;\n    }\n    this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    return true;\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   *\n   * @vt: #Y CSI IL  \"Insert Line\"   \"CSI Ps L\"  \"Insert `Ps` blank lines at active row (default=1).\"\n   * For every inserted line at the scroll top one line at the scroll bottom gets removed.\n   * The cursor is set to the first column.\n   * IL has no effect if the cursor is outside the scroll margins.\n   */\n  public insertLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + this._activeBuffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      this._activeBuffer.lines.splice(row, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   *\n   * @vt: #Y CSI DL  \"Delete Line\"   \"CSI Ps M\"  \"Delete `Ps` lines at active row (default=1).\"\n   * For every deleted line at the scroll top one blank line at the scroll bottom gets appended.\n   * The cursor is set to the first column.\n   * DL has no effect if the cursor is outside the scroll margins.\n   */\n  public deleteLines(params: IParams): boolean {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n\n    const row: number = this._activeBuffer.ybase + this._activeBuffer.y;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom;\n    j = this._bufferService.rows - 1 + this._activeBuffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      this._activeBuffer.lines.splice(row, 1);\n      this._activeBuffer.lines.splice(j, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom);\n    this._activeBuffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n    return true;\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   *\n   * @vt: #Y CSI ICH  \"Insert Characters\"   \"CSI Ps @\"  \"Insert `Ps` (blank) characters (default = 1).\"\n   * The ICH sequence inserts `Ps` blank characters. The cursor remains at the beginning of the blank characters.\n   * Text between the cursor and right margin moves to the right. Characters moved past the right margin are lost.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public insertChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.insertCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   *\n   * @vt: #Y CSI DCH   \"Delete Character\"  \"CSI Ps P\"  \"Delete `Ps` characters (default=1).\"\n   * As characters are deleted, the remaining characters between the cursor and right margin move to the left.\n   * Character attributes move with the characters. The terminal adds blank characters at the right margin.\n   *\n   *\n   * FIXME: check against xterm - should not work outside of scroll margins (see VT520 manual)\n   */\n  public deleteChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.deleteCells(\n        this._activeBuffer.x,\n        params.params[0] || 1,\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   *\n   * @vt: #Y CSI SU  \"Scroll Up\"   \"CSI Ps S\"  \"Scroll `Ps` lines up (default=1).\"\n   *\n   *\n   * FIXME: scrolled out lines at top = 1 should add to scrollback (xterm)\n   */\n  public scrollUp(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   *\n   * @vt: #Y CSI SD  \"Scroll Down\"   \"CSI Ps T\"  \"Scroll `Ps` lines down (default=1).\"\n   */\n  public scrollDown(params: IParams): boolean {\n    let param = params.params[0] || 1;\n\n    while (param--) {\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1);\n      this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SL  \"Scroll Left\" \"CSI Ps SP @\" \"Scroll viewport `Ps` times to the left.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the left.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollLeft(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   *\n   * @vt: #Y CSI SR  \"Scroll Right\"  \"CSI Ps SP A\"   \"Scroll viewport `Ps` times to the right.\"\n   * SL moves the content of all lines within the scroll margins `Ps` times to the right.\n   * Content at the right margin is lost.\n   * SL has no effect outside of the scroll margins.\n   */\n  public scrollRight(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(0, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   *\n   * @vt: #Y CSI DECIC \"Insert Columns\"  \"CSI Ps ' }\"  \"Insert `Ps` columns at cursor position.\"\n   * DECIC inserts `Ps` times blank columns at the cursor position for all lines with the scroll margins,\n   * moving content to the right. Content at the right margin is lost.\n   * DECIC has no effect outside the scrolling margins.\n   */\n  public insertColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.insertCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   *\n   * @vt: #Y CSI DECDC \"Delete Columns\"  \"CSI Ps ' ~\"  \"Delete `Ps` columns at cursor position.\"\n   * DECDC deletes `Ps` times columns at the cursor position for all lines with the scroll margins,\n   * moving content to the left. Blank columns are added at the right margin.\n   * DECDC has no effect outside the scrolling margins.\n   */\n  public deleteColumns(params: IParams): boolean {\n    if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) {\n      return true;\n    }\n    const param = params.params[0] || 1;\n    for (let y = this._activeBuffer.scrollTop; y <= this._activeBuffer.scrollBottom; ++y) {\n      const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + y)!;\n      line.deleteCells(this._activeBuffer.x, param, this._activeBuffer.getNullCell(this._eraseAttrData()), this._eraseAttrData());\n      line.isWrapped = false;\n    }\n    this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    return true;\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   *\n   * @vt: #Y CSI ECH   \"Erase Character\"   \"CSI Ps X\"  \"Erase `Ps` characters from current cursor position to the right (default=1).\"\n   * ED erases `Ps` characters from current cursor position to the right.\n   * ED works inside or outside the scrolling margins.\n   */\n  public eraseChars(params: IParams): boolean {\n    this._restrictCursor();\n    const line = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);\n    if (line) {\n      line.replaceCells(\n        this._activeBuffer.x,\n        this._activeBuffer.x + (params.params[0] || 1),\n        this._activeBuffer.getNullCell(this._eraseAttrData()),\n        this._eraseAttrData()\n      );\n      this._dirtyRowTracker.markDirty(this._activeBuffer.y);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   *\n   * @vt: #Y CSI REP   \"Repeat Preceding Character\"    \"CSI Ps b\"  \"Repeat preceding character `Ps` times (default=1).\"\n   * REP repeats the previous character `Ps` times advancing the cursor, also wrapping if DECAWM is set.\n   * REP has no effect if the sequence does not follow a printable ASCII character\n   * (NOOP for any other sequence in between or NON ASCII characters).\n   */\n  public repeatPrecedingCharacter(params: IParams): boolean {\n    if (!this._parser.precedingCodepoint) {\n      return true;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n    return true;\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   *\n   * @vt: #Y CSI DA1   \"Primary Device Attributes\"     \"CSI c\"  \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesPrimary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    if (this._is('xterm') || this._is('rxvt-unicode') || this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n    return true;\n  }\n\n  /**\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   *\n   * @vt: #Y CSI DA2   \"Secondary Device Attributes\"   \"CSI > c\" \"Send primary device attributes.\"\n   *\n   *\n   * TODO: fix and cleanup response\n   */\n  public sendDeviceAttributesSecondary(params: IParams): boolean {\n    if (params.params[0] > 0) {\n      return true;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n    return true;\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  private _is(term: string): boolean {\n    return (this._optionsService.rawOptions.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI SM    \"Set Mode\"  \"CSI Pm h\"  \"Set various terminal modes.\"\n   * Supported param values by SM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Insert Mode (IRM).                     | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Automatic Newline (LNM).               | #Y      |\n   */\n  public setMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = true;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECSET  \"DEC Private Set Mode\" \"CSI ? Pm h\"  \"Set various terminal attributes.\"\n   * Supported param values by DECSET:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | --------|\n   * | 1     | Application Cursor Keys (DECCKM).                       | #Y      |\n   * | 2     | Designate US-ASCII for character sets G0-G3 (DECANM).   | #Y      |\n   * | 3     | 132 Column Mode (DECCOLM).                              | #Y      |\n   * | 6     | Origin Mode (DECOM).                                    | #Y      |\n   * | 7     | Auto-wrap Mode (DECAWM).                                | #Y      |\n   * | 8     | Auto-repeat Keys (DECARM). Always on.                   | #N      |\n   * | 9     | X10 xterm mouse protocol.                               | #Y      |\n   * | 12    | Start Blinking Cursor.                                  | #Y      |\n   * | 25    | Show Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | Reverse wrap-around.                                    | #Y      |\n   * | 47    | Use Alternate Screen Buffer.                            | #Y      |\n   * | 66    | Application keypad (DECNKM).                            | #Y      |\n   * | 1000  | X11 xterm mouse protocol.                               | #Y      |\n   * | 1002  | Use Cell Motion Mouse Tracking.                         | #Y      |\n   * | 1003  | Use All Motion Mouse Tracking.                          | #Y      |\n   * | 1004  | Send FocusIn/FocusOut events                            | #Y      |\n   * | 1005  | Enable UTF-8 Mouse Mode.                                | #N      |\n   * | 1006  | Enable SGR Mouse Mode.                                  | #Y      |\n   * | 1015  | Enable urxvt Mouse Mode.                                | #N      |\n   * | 1016  | Enable SGR-Pixels Mouse Mode.                           | #Y      |\n   * | 1047  | Use Alternate Screen Buffer.                            | #Y      |\n   * | 1048  | Save cursor as in DECSC.                                | #Y      |\n   * | 1049  | Save cursor and switch to alternate buffer clearing it. | #P[Does not clear the alternate buffer.] |\n   * | 2004  | Set bracketed paste mode.                               | #Y      |\n   *\n   *\n   * FIXME: implement DECSCNM, 1049 should clear altbuffer\n   */\n  public setModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._charsetService.setgCharset(0, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(1, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(2, DEFAULT_CHARSET);\n          this._charsetService.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3:\n          /**\n           * DECCOLM - 132 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(132, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = true;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = true;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = true;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._coreService.decPrivateModes.sendFocus = true;\n          this._onRequestSendFocus.fire();\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'SGR_PIXELS';\n          break;\n        case 25: // show cursor\n          this._coreService.isCursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n        // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._eraseAttrData());\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = true;\n          break;\n      }\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   *\n   * @vt: #P[Only IRM is supported.]    CSI RM    \"Reset Mode\"  \"CSI Pm l\"  \"Set various terminal attributes.\"\n   * Supported param values by RM:\n   *\n   * | Param | Action                                 | Support |\n   * | ----- | -------------------------------------- | ------- |\n   * | 2     | Keyboard Action Mode (KAM). Always on. | #N      |\n   * | 4     | Replace Mode (IRM). (default)          | #Y      |\n   * | 12    | Send/receive (SRM). Always off.        | #N      |\n   * | 20    | Normal Linefeed (LNM).                 | #Y      |\n   *\n   *\n   * FIXME: why is LNM commented out?\n   */\n  public resetMode(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._coreService.modes.insertMode = false;\n          break;\n        case 20:\n          this._optionsService.options.convertEol = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   *\n   * @vt: #P[See below for supported modes.]    CSI DECRST  \"DEC Private Reset Mode\" \"CSI ? Pm l\"  \"Reset various terminal attributes.\"\n   * Supported param values by DECRST:\n   *\n   * | param | Action                                                  | Support |\n   * | ----- | ------------------------------------------------------- | ------- |\n   * | 1     | Normal Cursor Keys (DECCKM).                            | #Y      |\n   * | 2     | Designate VT52 mode (DECANM).                           | #N      |\n   * | 3     | 80 Column Mode (DECCOLM).                               | #B[Switches to old column width instead of 80.] |\n   * | 6     | Normal Cursor Mode (DECOM).                             | #Y      |\n   * | 7     | No Wraparound Mode (DECAWM).                            | #Y      |\n   * | 8     | No Auto-repeat Keys (DECARM).                           | #N      |\n   * | 9     | Don't send Mouse X & Y on button press.                 | #Y      |\n   * | 12    | Stop Blinking Cursor.                                   | #Y      |\n   * | 25    | Hide Cursor (DECTCEM).                                  | #Y      |\n   * | 45    | No reverse wrap-around.                                 | #Y      |\n   * | 47    | Use Normal Screen Buffer.                               | #Y      |\n   * | 66    | Numeric keypad (DECNKM).                                | #Y      |\n   * | 1000  | Don't send Mouse reports.                               | #Y      |\n   * | 1002  | Don't use Cell Motion Mouse Tracking.                   | #Y      |\n   * | 1003  | Don't use All Motion Mouse Tracking.                    | #Y      |\n   * | 1004  | Don't send FocusIn/FocusOut events.                     | #Y      |\n   * | 1005  | Disable UTF-8 Mouse Mode.                               | #N      |\n   * | 1006  | Disable SGR Mouse Mode.                                 | #Y      |\n   * | 1015  | Disable urxvt Mouse Mode.                               | #N      |\n   * | 1016  | Disable SGR-Pixels Mouse Mode.                          | #Y      |\n   * | 1047  | Use Normal Screen Buffer (clearing screen if in alt).   | #Y      |\n   * | 1048  | Restore cursor as in DECRC.                             | #Y      |\n   * | 1049  | Use Normal Screen Buffer and restore cursor.            | #Y      |\n   * | 2004  | Reset bracketed paste mode.                             | #Y      |\n   *\n   *\n   * FIXME: DECCOLM is currently broken (already fixed in window options PR)\n   */\n  public resetModePrivate(params: IParams): boolean {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          /**\n           * DECCOLM - 80 column mode.\n           * This is only active if 'SetWinLines' (24) is enabled\n           * through `options.windowsOptions`.\n           */\n          if (this._optionsService.rawOptions.windowOptions.setWinLines) {\n            this._bufferService.resize(80, this._bufferService.rows);\n            this._onRequestReset.fire();\n          }\n          break;\n        case 6:\n          this._coreService.decPrivateModes.origin = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._coreService.decPrivateModes.wraparound = false;\n          break;\n        case 12:\n          this._optionsService.options.cursorBlink = false;\n          break;\n        case 45:\n          this._coreService.decPrivateModes.reverseWraparound = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._coreService.decPrivateModes.applicationKeypad = false;\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._coreService.decPrivateModes.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 1016: // sgr pixels mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 25: // hide cursor\n          this._coreService.isCursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n        // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._coreService.isCursorInitialized = true;\n          this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1);\n          this._onRequestSyncScrollBar.fire();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._coreService.decPrivateModes.bracketedPasteMode = false;\n          break;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps $ p Request ANSI Mode (DECRQM).\n   *\n   * Reports CSI Ps; Pm $ y (DECRPM), where Ps is the mode number as in SM/RM,\n   * and Pm is the mode value:\n   *    0 - not recognized\n   *    1 - set\n   *    2 - reset\n   *    3 - permanently set\n   *    4 - permanently reset\n   *\n   * @vt: #Y  CSI   DECRQM  \"Request Mode\"  \"CSI Ps $p\"  \"Request mode state.\"\n   * Returns a report as `CSI Ps; Pm $ y` (DECRPM), where `Ps` is the mode number as in SM/RM\n   * or DECSET/DECRST, and `Pm` is the mode value:\n   * - 0: not recognized\n   * - 1: set\n   * - 2: reset\n   * - 3: permanently set\n   * - 4: permanently reset\n   *\n   * For modes not understood xterm.js always returns `notRecognized`. In general this means,\n   * that a certain operation mode is not implemented and cannot be used.\n   *\n   * Modes changing the active terminal buffer (47, 1047, 1049) are not subqueried\n   * and only report, whether the alternate buffer is set.\n   *\n   * Mouse encodings and mouse protocols are handled mutual exclusive,\n   * thus only one of each of those can be set at a given time.\n   *\n   * There is a chance, that some mode reports are not fully in line with xterm.js' behavior,\n   * e.g. if the default implementation already exposes a certain behavior. If you find\n   * discrepancies in the mode reports, please file a bug.\n   */\n  public requestMode(params: IParams, ansi: boolean): boolean {\n    // return value as in DECRPM\n    const enum V {\n      NOT_RECOGNIZED = 0,\n      SET = 1,\n      RESET = 2,\n      PERMANENTLY_SET = 3,\n      PERMANENTLY_RESET = 4\n    }\n\n    // access helpers\n    const dm = this._coreService.decPrivateModes;\n    const { activeProtocol: mouseProtocol, activeEncoding: mouseEncoding } = this._coreMouseService;\n    const cs = this._coreService;\n    const { buffers, cols } = this._bufferService;\n    const { active, alt } = buffers;\n    const opts = this._optionsService.rawOptions;\n\n    const f = (m: number, v: V): boolean => {\n      cs.triggerDataEvent(`${C0.ESC}[${ansi ? '' : '?'}${m};${v}$y`);\n      return true;\n    };\n    const b2v = (value: boolean): V => value ? V.SET : V.RESET;\n\n    const p = params.params[0];\n\n    if (ansi) {\n      if (p === 2) return f(p, V.PERMANENTLY_SET);\n      if (p === 4) return f(p, b2v(cs.modes.insertMode));\n      if (p === 12) return f(p, V.PERMANENTLY_RESET);\n      if (p === 20) return f(p, b2v(opts.convertEol));\n      return f(p, V.NOT_RECOGNIZED);\n    }\n\n    if (p === 1) return f(p, b2v(dm.applicationCursorKeys));\n    if (p === 3) return f(p, opts.windowOptions.setWinLines ? (cols === 80 ? V.RESET : cols === 132 ? V.SET : V.NOT_RECOGNIZED) : V.NOT_RECOGNIZED);\n    if (p === 6) return f(p, b2v(dm.origin));\n    if (p === 7) return f(p, b2v(dm.wraparound));\n    if (p === 8) return f(p, V.PERMANENTLY_SET);\n    if (p === 9) return f(p, b2v(mouseProtocol === 'X10'));\n    if (p === 12) return f(p, b2v(opts.cursorBlink));\n    if (p === 25) return f(p, b2v(!cs.isCursorHidden));\n    if (p === 45) return f(p, b2v(dm.reverseWraparound));\n    if (p === 66) return f(p, b2v(dm.applicationKeypad));\n    if (p === 1000) return f(p, b2v(mouseProtocol === 'VT200'));\n    if (p === 1002) return f(p, b2v(mouseProtocol === 'DRAG'));\n    if (p === 1003) return f(p, b2v(mouseProtocol === 'ANY'));\n    if (p === 1004) return f(p, b2v(dm.sendFocus));\n    if (p === 1005) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1006) return f(p, b2v(mouseEncoding === 'SGR'));\n    if (p === 1015) return f(p, V.PERMANENTLY_RESET);\n    if (p === 1016) return f(p, b2v(mouseEncoding === 'SGR_PIXELS'));\n    if (p === 1048) return f(p, V.SET); // xterm always returns SET here\n    if (p === 47 || p === 1047 || p === 1049) return f(p, b2v(active === alt));\n    if (p === 2004) return f(p, b2v(dm.bracketedPasteMode));\n    return f(p, V.NOT_RECOGNIZED);\n  }\n\n  /**\n   * Helper to write color information packed with color mode.\n   */\n  private _updateAttrColor(color: number, mode: number, c1: number, c2: number, c3: number): number {\n    if (mode === 2) {\n      color |= Attributes.CM_RGB;\n      color &= ~Attributes.RGB_MASK;\n      color |= AttributeData.fromColorRGB([c1, c2, c3]);\n    } else if (mode === 5) {\n      color &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n      color |= Attributes.CM_P256 | (c1 & 0xff);\n    }\n    return color;\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance)!;\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n        || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    switch (accu[0]) {\n      case 38:\n        attr.fg = this._updateAttrColor(attr.fg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 48:\n        attr.bg = this._updateAttrColor(attr.bg, accu[1], accu[3], accu[4], accu[5]);\n        break;\n      case 58:\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = this._updateAttrColor(attr.extended.underlineColor, accu[1], accu[3], accu[4], accu[5]);\n    }\n\n    return advance;\n  }\n\n  /**\n   * SGR 4 subparams:\n   *    4:0   -   equal to SGR 24 (turn off all underline)\n   *    4:1   -   equal to SGR 4 (single underline)\n   *    4:2   -   equal to SGR 21 (double underline)\n   *    4:3   -   curly underline\n   *    4:4   -   dotted underline\n   *    4:5   -   dashed underline\n   */\n  private _processUnderline(style: number, attr: IAttributeData): void {\n    // treat extended attrs as immutable, thus always clone from old one\n    // this is needed since the buffer only holds references to it\n    attr.extended = attr.extended.clone();\n\n    // default to 1 == single underline\n    if (!~style || style > 5) {\n      style = 1;\n    }\n    attr.extended.underlineStyle = style;\n    attr.fg |= FgFlags.UNDERLINE;\n\n    // 0 deactivates underline\n    if (style === 0) {\n      attr.fg &= ~FgFlags.UNDERLINE;\n    }\n\n    // update HAS_EXTENDED in BG\n    attr.updateExtended();\n  }\n\n  private _processSGR0(attr: IAttributeData): void {\n    attr.fg = DEFAULT_ATTR_DATA.fg;\n    attr.bg = DEFAULT_ATTR_DATA.bg;\n    attr.extended = attr.extended.clone();\n    // Reset underline style and color. Note that we don't want to reset other\n    // fields such as the url id.\n    attr.extended.underlineStyle = UnderlineStyle.NONE;\n    attr.extended.underlineColor &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    attr.updateExtended();\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *\n   * @vt: #P[See below for supported attributes.]    CSI SGR   \"Select Graphic Rendition\"  \"CSI Pm m\"  \"Set/Reset various text attributes.\"\n   * SGR selects one or more character attributes at the same time. Multiple params (up to 32)\n   * are applied in order from left to right. The changed attributes are applied to all new\n   * characters received. If you move characters in the viewport by scrolling or any other means,\n   * then the attributes move with the characters.\n   *\n   * Supported param values by SGR:\n   *\n   * | Param     | Meaning                                                  | Support |\n   * | --------- | -------------------------------------------------------- | ------- |\n   * | 0         | Normal (default). Resets any other preceding SGR.        | #Y      |\n   * | 1         | Bold. (also see `options.drawBoldTextInBrightColors`)    | #Y      |\n   * | 2         | Faint, decreased intensity.                              | #Y      |\n   * | 3         | Italic.                                                  | #Y      |\n   * | 4         | Underlined (see below for style support).                | #Y      |\n   * | 5         | Slowly blinking.                                         | #N      |\n   * | 6         | Rapidly blinking.                                        | #N      |\n   * | 7         | Inverse. Flips foreground and background color.          | #Y      |\n   * | 8         | Invisible (hidden).                                      | #Y      |\n   * | 9         | Crossed-out characters (strikethrough).                  | #Y      |\n   * | 21        | Doubly underlined.                                       | #Y      |\n   * | 22        | Normal (neither bold nor faint).                         | #Y      |\n   * | 23        | No italic.                                               | #Y      |\n   * | 24        | Not underlined.                                          | #Y      |\n   * | 25        | Steady (not blinking).                                   | #Y      |\n   * | 27        | Positive (not inverse).                                  | #Y      |\n   * | 28        | Visible (not hidden).                                    | #Y      |\n   * | 29        | Not Crossed-out (strikethrough).                         | #Y      |\n   * | 30        | Foreground color: Black.                                 | #Y      |\n   * | 31        | Foreground color: Red.                                   | #Y      |\n   * | 32        | Foreground color: Green.                                 | #Y      |\n   * | 33        | Foreground color: Yellow.                                | #Y      |\n   * | 34        | Foreground color: Blue.                                  | #Y      |\n   * | 35        | Foreground color: Magenta.                               | #Y      |\n   * | 36        | Foreground color: Cyan.                                  | #Y      |\n   * | 37        | Foreground color: White.                                 | #Y      |\n   * | 38        | Foreground color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 39        | Foreground color: Default (original).                    | #Y      |\n   * | 40        | Background color: Black.                                 | #Y      |\n   * | 41        | Background color: Red.                                   | #Y      |\n   * | 42        | Background color: Green.                                 | #Y      |\n   * | 43        | Background color: Yellow.                                | #Y      |\n   * | 44        | Background color: Blue.                                  | #Y      |\n   * | 45        | Background color: Magenta.                               | #Y      |\n   * | 46        | Background color: Cyan.                                  | #Y      |\n   * | 47        | Background color: White.                                 | #Y      |\n   * | 48        | Background color: Extended color.                        | #P[Support for RGB and indexed colors, see below.] |\n   * | 49        | Background color: Default (original).                    | #Y      |\n   * | 58        | Underline color: Extended color.                         | #P[Support for RGB and indexed colors, see below.] |\n   * | 90 - 97   | Bright foreground color (analogous to 30 - 37).          | #Y      |\n   * | 100 - 107 | Bright background color (analogous to 40 - 47).          | #Y      |\n   *\n   * Underline supports subparams to denote the style in the form `4 : x`:\n   *\n   * | x      | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | No underline. Same as `SGR 24 m`.                             | #Y      |\n   * | 1      | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   * | 2      | Double underline.                                             | #Y      |\n   * | 3      | Curly underline.                                              | #Y      |\n   * | 4      | Dotted underline.                                             | #Y      |\n   * | 5      | Dashed underline.                                             | #Y      |\n   * | other  | Single underline. Same as `SGR 4 m`.                          | #Y      |\n   *\n   * Extended colors are supported for foreground (Ps=38), background (Ps=48) and underline (Ps=58) as follows:\n   *\n   * | Ps + 1 | Meaning                                                       | Support |\n   * | ------ | ------------------------------------------------------------- | ------- |\n   * | 0      | Implementation defined.                                       | #N      |\n   * | 1      | Transparent.                                                  | #N      |\n   * | 2      | RGB color as `Ps ; 2 ; R ; G ; B` or `Ps : 2 : : R : G : B`.  | #Y      |\n   * | 3      | CMY color.                                                    | #N      |\n   * | 4      | CMYK color.                                                   | #N      |\n   * | 5      | Indexed (256 colors) as `Ps ; 5 ; INDEX` or `Ps : 5 : INDEX`. | #Y      |\n   *\n   *\n   * FIXME: blinking is implemented in attrs, but not working in renderers?\n   * FIXME: remove dead branch for p=100\n   */\n  public charAttributes(params: IParams): boolean {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._processSGR0(this._curAttrData);\n      return true;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        this._processSGR0(attr);\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n        this._processUnderline(params.hasSubParams(i) ? params.getSubParams(i)![0] : UnderlineStyle.SINGLE, attr);\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 9) {\n        // strikethrough\n        attr.fg |= FgFlags.STRIKETHROUGH;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 21) {\n        // double underline\n        this._processUnderline(UnderlineStyle.DOUBLE, attr);\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n        this._processUnderline(UnderlineStyle.NONE, attr);\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 29) {\n        // not strikethrough\n        attr.fg &= ~FgFlags.STRIKETHROUGH;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48 || p === 58) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 59) {\n        attr.extended = attr.extended.clone();\n        attr.extended.underlineColor = -1;\n        attr.updateExtended();\n      } else if (p === 100) { // FIXME: dead branch, p=100 already handled above!\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   *\n   * @vt: #Y CSI DSR   \"Device Status Report\"  \"CSI Ps n\"  \"Request cursor position (CPR) with `Ps` = 6.\"\n   */\n  public deviceStatus(params: IParams): boolean {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n    return true;\n  }\n\n  // @vt: #P[Only CPR is supported.]  CSI DECDSR  \"DEC Device Status Report\"  \"CSI ? Ps n\"  \"Only CPR is supported (same as DSR).\"\n  public deviceStatusPrivate(params: IParams): boolean {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._activeBuffer.y + 1;\n        const x = this._activeBuffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n    return true;\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   *\n   * @vt: #Y CSI DECSTR  \"Soft Terminal Reset\"   \"CSI ! p\"   \"Reset several terminal attributes to initial state.\"\n   * There are two terminal reset sequences - RIS and DECSTR. While RIS performs almost a full terminal bootstrap,\n   * DECSTR only resets certain attributes. For most needs DECSTR should be sufficient.\n   *\n   * The following terminal attributes are reset to default values:\n   * - IRM is reset (dafault = false)\n   * - scroll margins are reset (default = viewport size)\n   * - erase attributes are reset to default\n   * - charsets are reset\n   * - DECSC data is reset to initial values\n   * - DECOM is reset to absolute mode\n   *\n   *\n   * FIXME: there are several more attributes missing (see VT520 manual)\n   */\n  public softReset(params: IParams): boolean {\n    this._coreService.isCursorHidden = false;\n    this._onRequestSyncScrollBar.fire();\n    this._activeBuffer.scrollTop = 0;\n    this._activeBuffer.scrollBottom = this._bufferService.rows - 1;\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._coreService.reset();\n    this._charsetService.reset();\n\n    // reset DECSC data\n    this._activeBuffer.savedX = 0;\n    this._activeBuffer.savedY = this._activeBuffer.ybase;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n\n    // reset DECOM\n    this._coreService.decPrivateModes.origin = false;\n    return true;\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   *\n   * @vt: #Y CSI DECSCUSR  \"Set Cursor Style\"  \"CSI Ps SP q\"   \"Set cursor style.\"\n   * Supported cursor styles:\n   *  - empty, 0 or 1: steady block\n   *  - 2: blink block\n   *  - 3: steady underline\n   *  - 4: blink underline\n   *  - 5: steady bar\n   *  - 6: blink bar\n   */\n  public setCursorStyle(params: IParams): boolean {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   *\n   * @vt: #Y CSI DECSTBM \"Set Top and Bottom Margin\" \"CSI Ps ; Ps r\" \"Set top and bottom margins of the viewport [top;bottom] (default = viewport size).\"\n   */\n  public setScrollRegion(params: IParams): boolean {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) > this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._activeBuffer.scrollTop = top - 1;\n      this._activeBuffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n    return true;\n  }\n\n  /**\n   * CSI Ps ; Ps ; Ps t - Various window manipulations and reports (xterm)\n   *\n   * Note: Only those listed below are supported. All others are left to integrators and\n   * need special treatment based on the embedding environment.\n   *\n   *    Ps = 1 4                                                          supported\n   *      Report xterm text area size in pixels.\n   *      Result is CSI 4 ; height ; width t\n   *    Ps = 14 ; 2                                                       not implemented\n   *    Ps = 16                                                           supported\n   *      Report xterm character cell size in pixels.\n   *      Result is CSI 6 ; height ; width t\n   *    Ps = 18                                                           supported\n   *      Report the size of the text area in characters.\n   *      Result is CSI 8 ; height ; width t\n   *    Ps = 20                                                           supported\n   *      Report xterm window's icon label.\n   *      Result is OSC L label ST\n   *    Ps = 21                                                           supported\n   *      Report xterm window's title.\n   *      Result is OSC l label ST\n   *    Ps = 22 ; 0  -> Save xterm icon and window title on stack.        supported\n   *    Ps = 22 ; 1  -> Save xterm icon title on stack.                   supported\n   *    Ps = 22 ; 2  -> Save xterm window title on stack.                 supported\n   *    Ps = 23 ; 0  -> Restore xterm icon and window title from stack.   supported\n   *    Ps = 23 ; 1  -> Restore xterm icon title from stack.              supported\n   *    Ps = 23 ; 2  -> Restore xterm window title from stack.            supported\n   *    Ps >= 24                                                          not implemented\n   */\n  public windowOptions(params: IParams): boolean {\n    if (!paramToWindowOption(params.params[0], this._optionsService.rawOptions.windowOptions)) {\n      return true;\n    }\n    const second = (params.length > 1) ? params.params[1] : 0;\n    switch (params.params[0]) {\n      case 14:  // GetWinSizePixels, returns CSI 4 ; height ; width t\n        if (second !== 2) {\n          this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_WIN_SIZE_PIXELS);\n        }\n        break;\n      case 16:  // GetCellSizePixels, returns CSI 6 ; height ; width t\n        this._onRequestWindowsOptionsReport.fire(WindowsOptionsReportType.GET_CELL_SIZE_PIXELS);\n        break;\n      case 18:  // GetWinSizeChars, returns CSI 8 ; height ; width t\n        if (this._bufferService) {\n          this._coreService.triggerDataEvent(`${C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);\n        }\n        break;\n      case 22:  // PushTitle\n        if (second === 0 || second === 2) {\n          this._windowTitleStack.push(this._windowTitle);\n          if (this._windowTitleStack.length > STACK_LIMIT) {\n            this._windowTitleStack.shift();\n          }\n        }\n        if (second === 0 || second === 1) {\n          this._iconNameStack.push(this._iconName);\n          if (this._iconNameStack.length > STACK_LIMIT) {\n            this._iconNameStack.shift();\n          }\n        }\n        break;\n      case 23:  // PopTitle\n        if (second === 0 || second === 2) {\n          if (this._windowTitleStack.length) {\n            this.setTitle(this._windowTitleStack.pop()!);\n          }\n        }\n        if (second === 0 || second === 1) {\n          if (this._iconNameStack.length) {\n            this.setIconName(this._iconNameStack.pop()!);\n          }\n        }\n        break;\n    }\n    return true;\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCOSC   \"Save Cursor\"   \"CSI s\"   \"Save cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  SC   \"Save Cursor\"   \"ESC 7\"   \"Save cursor position, charmap and text attributes.\"\n   */\n  public saveCursor(params?: IParams): boolean {\n    this._activeBuffer.savedX = this._activeBuffer.x;\n    this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y;\n    this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg;\n    this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg;\n    this._activeBuffer.savedCharset = this._charsetService.charset;\n    return true;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   *\n   * @vt: #P[TODO...]  CSI SCORC \"Restore Cursor\"  \"CSI u\"   \"Restore cursor position, charmap and text attributes.\"\n   * @vt: #Y ESC  RC \"Restore Cursor\"  \"ESC 8\"   \"Restore cursor position, charmap and text attributes.\"\n   */\n  public restoreCursor(params?: IParams): boolean {\n    this._activeBuffer.x = this._activeBuffer.savedX || 0;\n    this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0);\n    this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg;\n    this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg;\n    this._charsetService.charset = (this as any)._savedCharset;\n    if (this._activeBuffer.savedCharset) {\n      this._charsetService.charset = this._activeBuffer.savedCharset;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n\n  /**\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title.\n   *\n   * @vt: #P[Icon name is not exposed.]   OSC    0   \"Set Windows Title and Icon Name\"  \"OSC 0 ; Pt BEL\"  \"Set window title and icon name.\"\n   * Icon name is not supported. For Window Title see below.\n   *\n   * @vt: #Y     OSC    2   \"Set Windows Title\"  \"OSC 2 ; Pt BEL\"  \"Set window title.\"\n   * xterm.js does not manipulate the title directly, instead exposes changes via the event `Terminal.onTitleChange`.\n   */\n  public setTitle(data: string): boolean {\n    this._windowTitle = data;\n    this._onTitleChange.fire(data);\n    return true;\n  }\n\n  /**\n   * OSC 1; <data> ST\n   * Note: Icon name is not exposed.\n   */\n  public setIconName(data: string): boolean {\n    this._iconName = data;\n    return true;\n  }\n\n  /**\n   * OSC 4; <num> ; <text> ST (set ANSI color <num> to <text>)\n   *\n   * @vt: #Y    OSC    4    \"Set ANSI color\"   \"OSC 4 ; c ; spec BEL\" \"Change color number `c` to the color specified by `spec`.\"\n   * `c` is the color index between 0 and 255. The color format of `spec` is derived from `XParseColor` (see OSC 10 for supported formats).\n   * There may be multipe `c ; spec` pairs present in the same instruction.\n   * If `spec` contains `?` the terminal returns a sequence with the currently set color.\n   */\n  public setOrReportIndexedColor(data: string): boolean {\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    while (slots.length > 1) {\n      const idx = slots.shift() as string;\n      const spec = slots.shift() as string;\n      if (/^\\d+$/.exec(idx)) {\n        const index = parseInt(idx);\n        if (0 <= index && index < 256) {\n          if (spec === '?') {\n            event.push({ type: ColorRequestType.REPORT, index });\n          } else {\n            const color = parseColor(spec);\n            if (color) {\n              event.push({ type: ColorRequestType.SET, index, color });\n            }\n          }\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 8 ; <params> ; <uri> ST - create hyperlink\n   * OSC 8 ; ; ST - finish hyperlink\n   *\n   * Test case:\n   *\n   * ```sh\n   * printf '\\e]8;;http://example.com\\e\\\\This is a link\\e]8;;\\e\\\\\\n'\n   * ```\n   *\n   * @vt: #Y    OSC    8    \"Create hyperlink\"   \"OSC 8 ; params ; uri BEL\" \"Create a hyperlink to `uri` using `params`.\"\n   * `uri` is a hyperlink starting with `http://`, `https://`, `ftp://`, `file://` or `mailto://`. `params` is an\n   * optional list of key=value assignments, separated by the : character. Example: `id=xyz123:foo=bar:baz=quux`.\n   * Currently only the id key is defined. Cells that share the same ID and URI share hover feedback.\n   * Use `OSC 8 ; ; BEL` to finish the current hyperlink.\n   */\n  public setHyperlink(data: string): boolean {\n    const args = data.split(';');\n    if (args.length < 2) {\n      return false;\n    }\n    if (args[1]) {\n      return this._createHyperlink(args[0], args[1]);\n    }\n    if (args[0]) {\n      return false;\n    }\n    return this._finishHyperlink();\n  }\n\n  private _createHyperlink(params: string, uri: string): boolean {\n    // It's legal to open a new hyperlink without explicitly finishing the previous one\n    if (this._getCurrentLinkId()) {\n      this._finishHyperlink();\n    }\n    const parsedParams = params.split(':');\n    let id: string | undefined;\n    const idParamIndex = parsedParams.findIndex(e => e.startsWith('id='));\n    if (idParamIndex !== -1) {\n      id = parsedParams[idParamIndex].slice(3) || undefined;\n    }\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = this._oscLinkService.registerLink({ id, uri });\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  private _finishHyperlink(): boolean {\n    this._curAttrData.extended = this._curAttrData.extended.clone();\n    this._curAttrData.extended.urlId = 0;\n    this._curAttrData.updateExtended();\n    return true;\n  }\n\n  // special colors - OSC 10 | 11 | 12\n  private _specialColors = [ColorIndex.FOREGROUND, ColorIndex.BACKGROUND, ColorIndex.CURSOR];\n\n  /**\n   * Apply colors requests for special colors in OSC 10 | 11 | 12.\n   * Since these commands are stacking from multiple parameters,\n   * we handle them in a loop with an entry offset to `_specialColors`.\n   */\n  private _setOrReportSpecialColor(data: string, offset: number): boolean {\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i, ++offset) {\n      if (offset >= this._specialColors.length) break;\n      if (slots[i] === '?') {\n        this._onColor.fire([{ type: ColorRequestType.REPORT, index: this._specialColors[offset] }]);\n      } else {\n        const color = parseColor(slots[i]);\n        if (color) {\n          this._onColor.fire([{ type: ColorRequestType.SET, index: this._specialColors[offset], color }]);\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * OSC 10 ; <xcolor name>|<?> ST - set or query default foreground color\n   *\n   * @vt: #Y  OSC   10    \"Set or query default foreground color\"   \"OSC 10 ; Pt BEL\"  \"Set or query default foreground color.\"\n   * To set the color, the following color specification formats are supported:\n   * - `rgb:<red>/<green>/<blue>` for  `<red>, <green>, <blue>` in `h | hh | hhh | hhhh`, where\n   *   `h` is a single hexadecimal digit (case insignificant). The different widths scale\n   *   from 4 bit (`h`) to 16 bit (`hhhh`) and get converted to 8 bit (`hh`).\n   * - `#RGB` - 4 bits per channel, expanded to `#R0G0B0`\n   * - `#RRGGBB` - 8 bits per channel\n   * - `#RRRGGGBBB` - 12 bits per channel, truncated to `#RRGGBB`\n   * - `#RRRRGGGGBBBB` - 16 bits per channel, truncated to `#RRGGBB`\n   *\n   * **Note:** X11 named colors are currently unsupported.\n   *\n   * If `Pt` contains `?` instead of a color specification, the terminal\n   * returns a sequence with the current default foreground color\n   * (use that sequence to restore the color after changes).\n   *\n   * **Note:** Other than xterm, xterm.js does not support OSC 12 - 19.\n   * Therefore stacking multiple `Pt` separated by `;` only works for the first two entries.\n   */\n  public setOrReportFgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 0);\n  }\n\n  /**\n   * OSC 11 ; <xcolor name>|<?> ST - set or query default background color\n   *\n   * @vt: #Y  OSC   11    \"Set or query default background color\"   \"OSC 11 ; Pt BEL\"  \"Same as OSC 10, but for default background.\"\n   */\n  public setOrReportBgColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 1);\n  }\n\n  /**\n   * OSC 12 ; <xcolor name>|<?> ST - set or query default cursor color\n   *\n   * @vt: #Y  OSC   12    \"Set or query default cursor color\"   \"OSC 12 ; Pt BEL\"  \"Same as OSC 10, but for default cursor color.\"\n   */\n  public setOrReportCursorColor(data: string): boolean {\n    return this._setOrReportSpecialColor(data, 2);\n  }\n\n  /**\n   * OSC 104 ; <num> ST - restore ANSI color <num>\n   *\n   * @vt: #Y  OSC   104    \"Reset ANSI color\"   \"OSC 104 ; c BEL\" \"Reset color number `c` to themed color.\"\n   * `c` is the color index between 0 and 255. This function restores the default color for `c` as\n   * specified by the loaded theme. Any number of `c` parameters may be given.\n   * If no parameters are given, the entire indexed color table will be reset.\n   */\n  public restoreIndexedColor(data: string): boolean {\n    if (!data) {\n      this._onColor.fire([{ type: ColorRequestType.RESTORE }]);\n      return true;\n    }\n    const event: IColorEvent = [];\n    const slots = data.split(';');\n    for (let i = 0; i < slots.length; ++i) {\n      if (/^\\d+$/.exec(slots[i])) {\n        const index = parseInt(slots[i]);\n        if (0 <= index && index < 256) {\n          event.push({ type: ColorRequestType.RESTORE, index });\n        }\n      }\n    }\n    if (event.length) {\n      this._onColor.fire(event);\n    }\n    return true;\n  }\n\n  /**\n   * OSC 110 ST - restore default foreground color\n   *\n   * @vt: #Y  OSC   110    \"Restore default foreground color\"   \"OSC 110 BEL\"  \"Restore default foreground to themed color.\"\n   */\n  public restoreFgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.FOREGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 111 ST - restore default background color\n   *\n   * @vt: #Y  OSC   111    \"Restore default background color\"   \"OSC 111 BEL\"  \"Restore default background to themed color.\"\n   */\n  public restoreBgColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.BACKGROUND }]);\n    return true;\n  }\n\n  /**\n   * OSC 112 ST - restore default cursor color\n   *\n   * @vt: #Y  OSC   112    \"Restore default cursor color\"   \"OSC 112 BEL\"  \"Restore default cursor to themed color.\"\n   */\n  public restoreCursorColor(data: string): boolean {\n    this._onColor.fire([{ type: ColorRequestType.RESTORE, index: ColorIndex.CURSOR }]);\n    return true;\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   *\n   * @vt: #Y   C1    NEL   \"Next Line\"   \"\\x85\"    \"Move the cursor to the beginning of the next row.\"\n   * @vt: #Y   ESC   NEL   \"Next Line\"   \"ESC E\"   \"Move the cursor to the beginning of the next row.\"\n   */\n  public nextLine(): boolean {\n    this._activeBuffer.x = 0;\n    this.index();\n    return true;\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): boolean {\n    this._logService.debug('Serial port requested application keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = true;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): boolean {\n    this._logService.debug('Switching back to normal keypad.');\n    this._coreService.decPrivateModes.applicationKeypad = false;\n    this._onRequestSyncScrollBar.fire();\n    return true;\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): boolean {\n    this._charsetService.setgLevel(0);\n    this._charsetService.setgCharset(0, DEFAULT_CHARSET); // US (default)\n    return true;\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): boolean {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return true;\n    }\n    if (collectAndFlag[0] === '/') {\n      return true;  // TODO: Is this supported?\n    }\n    this._charsetService.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return true;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   *\n   * @vt: #Y   C1    IND   \"Index\"   \"\\x84\"    \"Move the cursor one line down scrolling if needed.\"\n   * @vt: #Y   ESC   IND   \"Index\"   \"ESC D\"   \"Move the cursor one line down scrolling if needed.\"\n   */\n  public index(): boolean {\n    this._restrictCursor();\n    this._activeBuffer.y++;\n    if (this._activeBuffer.y === this._activeBuffer.scrollBottom + 1) {\n      this._activeBuffer.y--;\n      this._bufferService.scroll(this._eraseAttrData());\n    } else if (this._activeBuffer.y >= this._bufferService.rows) {\n      this._activeBuffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n    return true;\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   *\n   * @vt: #Y   C1    HTS   \"Horizontal Tabulation Set\" \"\\x88\"    \"Places a tab stop at the current cursor position.\"\n   * @vt: #Y   ESC   HTS   \"Horizontal Tabulation Set\" \"ESC H\"   \"Places a tab stop at the current cursor position.\"\n   */\n  public tabSet(): boolean {\n    this._activeBuffer.tabs[this._activeBuffer.x] = true;\n    return true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   *\n   * @vt: #Y ESC  IR \"Reverse Index\" \"ESC M\"  \"Move the cursor one line up scrolling if needed.\"\n   */\n  public reverseIndex(): boolean {\n    this._restrictCursor();\n    if (this._activeBuffer.y === this._activeBuffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;\n      this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, scrollRegionHeight, 1);\n      this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData()));\n      this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom);\n    } else {\n      this._activeBuffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n    return true;\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public fullReset(): boolean {\n    this._parser.reset();\n    this._onRequestReset.fire();\n    return true;\n  }\n\n  public reset(): void {\n    this._curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrDataInternal = DEFAULT_ATTR_DATA.clone();\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  private _eraseAttrData(): IAttributeData {\n    this._eraseAttrDataInternal.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrDataInternal.bg |= this._curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrDataInternal;\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): boolean {\n    this._charsetService.setgLevel(level);\n    return true;\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * @vt: #Y   ESC   DECALN   \"Screen Alignment Pattern\"  \"ESC # 8\"  \"Fill viewport with a test pattern (E).\"\n   */\n  public screenAlignmentPattern(): boolean {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._curAttrData.fg;\n    cell.bg = this._curAttrData.bg;\n\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = this._activeBuffer.ybase + this._activeBuffer.y + yOffset;\n      const line = this._activeBuffer.lines.get(row);\n      if (line) {\n        line.fill(cell);\n        line.isWrapped = false;\n      }\n    }\n    this._dirtyRowTracker.markAllDirty();\n    this._setCursor(0, 0);\n    return true;\n  }\n\n\n  /**\n   * DCS $ q Pt ST\n   *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n   *   Request Status String (DECRQSS), VT420 and up.\n   *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n   *\n   * @vt: #P[Limited support, see below.]  DCS   DECRQSS   \"Request Selection or Setting\"  \"DCS $ q Pt ST\"   \"Request several terminal settings.\"\n   * Response is in the form `ESC P 1 $ r Pt ST` for valid requests, where `Pt` contains the corresponding CSI string,\n   * `ESC P 0 ST` for invalid requests.\n   *\n   * Supported requests and responses:\n   *\n   * | Type                             | Request           | Response (`Pt`)                                       |\n   * | -------------------------------- | ----------------- | ----------------------------------------------------- |\n   * | Graphic Rendition (SGR)          | `DCS $ q m ST`    | always reporting `0m` (currently broken)              |\n   * | Top and Bottom Margins (DECSTBM) | `DCS $ q r ST`    | `Ps ; Ps r`                                           |\n   * | Cursor Style (DECSCUSR)          | `DCS $ q SP q ST` | `Ps SP q`                                             |\n   * | Protection Attribute (DECSCA)    | `DCS $ q \" q ST`  | `Ps \" q` (DECSCA 2 is reported as Ps = 0)             |\n   * | Conformance Level (DECSCL)       | `DCS $ q \" p ST`  | always reporting `61 ; 1 \" p` (DECSCL is unsupported) |\n   *\n   *\n   * TODO:\n   * - fix SGR report\n   * - either check which conformance is better suited or remove the report completely\n   *   --> we are currently a mixture of all up to VT400 but dont follow anyone strictly\n   */\n  public requestStatusString(data: string, params: IParams): boolean {\n    const f = (s: string): boolean => {\n      this._coreService.triggerDataEvent(`${C0.ESC}${s}${C0.ESC}\\\\`);\n      return true;\n    };\n\n    // access helpers\n    const b = this._bufferService.buffer;\n    const opts = this._optionsService.rawOptions;\n    const STYLES: { [key: string]: number } = { 'block': 2, 'underline': 4, 'bar': 6 };\n\n    if (data === '\"q') return f(`P1$r${this._curAttrData.isProtected() ? 1 : 0}\"q`);\n    if (data === '\"p') return f(`P1$r61;1\"p`);\n    if (data === 'r') return f(`P1$r${b.scrollTop + 1};${b.scrollBottom + 1}r`);\n    // FIXME: report real SGR settings instead of 0m\n    if (data === 'm') return f(`P1$r0m`);\n    if (data === ' q') return f(`P1$r${STYLES[opts.cursorStyle] - (opts.cursorBlink ? 1 : 0)} q`);\n    return f(`P0$r`);\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    this._dirtyRowTracker.markRangeDirty(y1, y2);\n  }\n}\n\nexport interface IDirtyRowTracker {\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nclass DirtyRowTracker implements IDirtyRowTracker {\n  public start!: number;\n  public end!: number;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this.start = this._bufferService.buffer.y;\n    this.end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this.start) {\n      this.start = y;\n    } else if (y > this.end) {\n      this.end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      $temp = y1;\n      y1 = y2;\n      y2 = $temp;\n    }\n    if (y1 < this.start) {\n      this.start = y1;\n    }\n    if (y2 > this.end) {\n      this.end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    for (const d of this._disposables) {\n      d.dispose();\n    }\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   * @returns The disposable.\n   */\n  public register<T extends IDisposable>(d: T): T {\n    this._disposables.push(d);\n    return d;\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n\n/**\n * Wrap a function in a disposable.\n */\nexport function toDisposable(f: () => void): IDisposable {\n  return { dispose: f };\n}\n\n/**\n * Dispose of all disposables in an array and set its length to 0.\n */\nexport function disposeArray(disposables: IDisposable[]): void {\n  for (const d of disposables) {\n    d.dispose();\n  }\n  disposables.length = 0;\n}\n\n/**\n * Creates a disposable that will dispose of an array of disposables when disposed.\n */\nexport function getDisposeArrayDisposable(array: IDisposable[]): IDisposable {\n  return { dispose: () => disposeArray(array) };\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class TwoKeyMap<TFirst extends string | number, TSecond extends string | number, TValue> {\n  private _data: { [bg: string | number]: { [fg: string | number]: TValue | undefined } | undefined } = {};\n\n  public set(first: TFirst, second: TSecond, value: TValue): void {\n    if (!this._data[first]) {\n      this._data[first] = {};\n    }\n    this._data[first as string | number]![second] = value;\n  }\n\n  public get(first: TFirst, second: TSecond): TValue | undefined {\n    return this._data[first as string | number] ? this._data[first as string | number]![second] : undefined;\n  }\n\n  public clear(): void {\n    this._data = {};\n  }\n}\n\nexport class FourKeyMap<TFirst extends string | number, TSecond extends string | number, TThird extends string | number, TFourth extends string | number, TValue> {\n  private _data: TwoKeyMap<TFirst, TSecond, TwoKeyMap<TThird, TFourth, TValue>> = new TwoKeyMap();\n\n  public set(first: TFirst, second: TSecond, third: TThird, fourth: TFourth, value: TValue): void {\n    if (!this._data.get(first, second)) {\n      this._data.set(first, second, new TwoKeyMap());\n    }\n    this._data.get(first, second)!.set(third, fourth, value);\n  }\n\n  public get(first: TFirst, second: TSecond, third: TThird, fourth: TFourth): TValue | undefined {\n    return this._data.get(first, second)?.get(third, fourth);\n  }\n\n  public clear(): void {\n    this._data.clear();\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nexport const isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = userAgent.includes('Firefox');\nexport const isLegacyEdge = userAgent.includes('Edge');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\nexport function getSafariVersion(): number {\n  if (!isSafari) {\n    return 0;\n  }\n  const majorVersion = userAgent.match(/Version\\/(\\d+)/);\n  if (majorVersion === null || majorVersion.length < 2) {\n    return 0;\n  }\n  return parseInt(majorVersion[1]);\n}\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = ['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'].includes(platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = ['Windows', 'Win16', 'Win32', 'WinCE'].includes(platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n// Note that when this is true, isLinux will also be true.\nexport const isChromeOS = /\\bCrOS\\b/.test(userAgent);\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n// Work variables to avoid garbage collection.\nlet i = 0;\n\n/**\n * A generic list that is maintained in sorted order and allows values with duplicate keys. This\n * list is based on binary search and as such locating a key will take O(log n) amortized, this\n * includes the by key iterator.\n */\nexport class SortedList<T> {\n  private readonly _array: T[] = [];\n\n  constructor(\n    private readonly _getKey: (value: T) => number\n  ) {\n  }\n\n  public clear(): void {\n    this._array.length = 0;\n  }\n\n  public insert(value: T): void {\n    if (this._array.length === 0) {\n      this._array.push(value);\n      return;\n    }\n    i = this._search(this._getKey(value), 0, this._array.length - 1);\n    this._array.splice(i, 0, value);\n  }\n\n  public delete(value: T): boolean {\n    if (this._array.length === 0) {\n      return false;\n    }\n    const key = this._getKey(value);\n    if (key === undefined) {\n      return false;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i === -1) {\n      return false;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return false;\n    }\n    do {\n      if (this._array[i] === value) {\n        this._array.splice(i, 1);\n        return true;\n      }\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n    return false;\n  }\n\n  public *getKeyIterator(key: number): IterableIterator<T> {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      yield this._array[i];\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public forEachByKey(key: number, callback: (value: T) => void): void {\n    if (this._array.length === 0) {\n      return;\n    }\n    i = this._search(key, 0, this._array.length - 1);\n    if (i < 0 || i >= this._array.length) {\n      return;\n    }\n    if (this._getKey(this._array[i]) !== key) {\n      return;\n    }\n    do {\n      callback(this._array[i]);\n    } while (++i < this._array.length && this._getKey(this._array[i]) === key);\n  }\n\n  public values(): IterableIterator<T> {\n    return this._array.values();\n  }\n\n  private _search(key: number, min: number, max: number): number {\n    if (max < min) {\n      return min;\n    }\n    let mid = Math.floor((min + max) / 2);\n    const midKey = this._getKey(this._array[mid]);\n    if (midKey > key) {\n      return this._search(key, min, mid - 1);\n    }\n    if (midKey < key) {\n      return this._search(key, mid + 1, max);\n    }\n    // Value found! Since keys can be duplicates, move the result index back to the lowest index\n    // that matches the key.\n    while (mid > 0 && this._getKey(this._array[mid - 1]) === key) {\n      mid--;\n    }\n    return mid;\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { isNode } from 'common/Platform';\n\ninterface ITaskQueue {\n  /**\n   * Adds a task to the queue which will run in a future idle callback.\n   * To avoid perceivable stalls on the mainthread, tasks with heavy workload\n   * should split their work into smaller pieces and return `true` to get\n   * called again until the work is done (on falsy return value).\n   */\n  enqueue(task: () => boolean | void): void;\n\n  /**\n   * Flushes the queue, running all remaining tasks synchronously.\n   */\n  flush(): void;\n\n  /**\n   * Clears any remaining tasks from the queue, these will not be run.\n   */\n  clear(): void;\n}\n\ninterface ITaskDeadline {\n  timeRemaining(): number;\n}\ntype CallbackWithDeadline = (deadline: ITaskDeadline) => void;\n\nabstract class TaskQueue implements ITaskQueue {\n  private _tasks: (() => boolean | void)[] = [];\n  private _idleCallback?: number;\n  private _i = 0;\n\n  protected abstract _requestCallback(callback: CallbackWithDeadline): number;\n  protected abstract _cancelCallback(identifier: number): void;\n\n  public enqueue(task: () => boolean | void): void {\n    this._tasks.push(task);\n    this._start();\n  }\n\n  public flush(): void {\n    while (this._i < this._tasks.length) {\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n    }\n    this.clear();\n  }\n\n  public clear(): void {\n    if (this._idleCallback) {\n      this._cancelCallback(this._idleCallback);\n      this._idleCallback = undefined;\n    }\n    this._i = 0;\n    this._tasks.length = 0;\n  }\n\n  private _start(): void {\n    if (!this._idleCallback) {\n      this._idleCallback = this._requestCallback(this._process.bind(this));\n    }\n  }\n\n  private _process(deadline: ITaskDeadline): void {\n    this._idleCallback = undefined;\n    let taskDuration = 0;\n    let longestTask = 0;\n    let lastDeadlineRemaining = deadline.timeRemaining();\n    let deadlineRemaining = 0;\n    while (this._i < this._tasks.length) {\n      taskDuration = Date.now();\n      if (!this._tasks[this._i]()) {\n        this._i++;\n      }\n      // other than performance.now, Date.now might not be stable (changes on wall clock changes),\n      // this is not an issue here as a clock change during a short running task is very unlikely\n      // in case it still happened and leads to negative duration, simply assume 1 msec\n      taskDuration = Math.max(1, Date.now() - taskDuration);\n      longestTask = Math.max(taskDuration, longestTask);\n      // Guess the following task will take a similar time to the longest task in this batch, allow\n      // additional room to try avoid exceeding the deadline\n      deadlineRemaining = deadline.timeRemaining();\n      if (longestTask * 1.5 > deadlineRemaining) {\n        // Warn when the time exceeding the deadline is over 20ms, if this happens in practice the\n        // task should be split into sub-tasks to ensure the UI remains responsive.\n        if (lastDeadlineRemaining - taskDuration < -20) {\n          console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(lastDeadlineRemaining - taskDuration))}ms`);\n        }\n        this._start();\n        return;\n      }\n      lastDeadlineRemaining = deadlineRemaining;\n    }\n    this.clear();\n  }\n}\n\n/**\n * A queue of that runs tasks over several tasks via setTimeout, trying to maintain above 60 frames\n * per second. The tasks will run in the order they are enqueued, but they will run some time later,\n * and care should be taken to ensure they're non-urgent and will not introduce race conditions.\n */\nexport class PriorityTaskQueue extends TaskQueue {\n  protected _requestCallback(callback: CallbackWithDeadline): number {\n    return setTimeout(() => callback(this._createDeadline(16)));\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    clearTimeout(identifier);\n  }\n\n  private _createDeadline(duration: number): ITaskDeadline {\n    const end = Date.now() + duration;\n    return {\n      timeRemaining: () => Math.max(0, end - Date.now())\n    };\n  }\n}\n\nclass IdleTaskQueueInternal extends TaskQueue {\n  protected _requestCallback(callback: IdleRequestCallback): number {\n    return requestIdleCallback(callback);\n  }\n\n  protected _cancelCallback(identifier: number): void {\n    cancelIdleCallback(identifier);\n  }\n}\n\n/**\n * A queue of that runs tasks over several idle callbacks, trying to respect the idle callback's\n * deadline given by the environment. The tasks will run in the order they are enqueued, but they\n * will run some time later, and care should be taken to ensure they're non-urgent and will not\n * introduce race conditions.\n *\n * This reverts to a {@link PriorityTaskQueue} if the environment does not support idle callbacks.\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const IdleTaskQueue = (!isNode && 'requestIdleCallback' in window) ? IdleTaskQueueInternal : PriorityTaskQueue;\n\n/**\n * An object that tracks a single debounced task that will run on the next idle frame. When called\n * multiple times, only the last set task will run.\n */\nexport class DebouncedIdleTask {\n  private _queue: ITaskQueue;\n\n  constructor() {\n    this._queue = new IdleTaskQueue();\n  }\n\n  public set(task: () => boolean | void): void {\n    this._queue.clear();\n    this._queue.enqueue(task);\n  }\n\n  public flush(): void {\n    this._queue.flush();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IBufferService } from 'common/services/Services';\n\nexport function updateWindowsModeWrappedState(bufferService: IBufferService): void {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  const line = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y - 1);\n  const lastChar = line?.get(bufferService.cols - 1);\n\n  const nextLine = bufferService.buffer.lines.get(bufferService.buffer.ybase + bufferService.buffer.y);\n  if (nextLine && lastChar) {\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB, IExtendedAttrs } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags, UnderlineStyle, ExtFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  public static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n\n  public static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    newObj.extended = this.extended.clone();\n    return newObj;\n  }\n\n  // data\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n\n  // flags\n  public isInverse(): number       { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number          { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number     {\n    if (this.hasExtendedAttrs() && this.extended.underlineStyle !== UnderlineStyle.NONE) {\n      return 1;\n    }\n    return this.fg & FgFlags.UNDERLINE;\n  }\n  public isBlink(): number         { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number     { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number        { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number           { return this.bg & BgFlags.DIM; }\n  public isStrikethrough(): number { return this.fg & FgFlags.STRIKETHROUGH; }\n  public isProtected(): number     { return this.bg & BgFlags.PROTECTED; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n  public isAttributeDefault(): boolean { return this.fg === 0 && this.bg === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n\n  // extended attrs\n  public hasExtendedAttrs(): number {\n    return this.bg & BgFlags.HAS_EXTENDED;\n  }\n  public updateExtended(): void {\n    if (this.extended.isEmpty()) {\n      this.bg &= ~BgFlags.HAS_EXTENDED;\n    } else {\n      this.bg |= BgFlags.HAS_EXTENDED;\n    }\n  }\n  public getUnderlineColor(): number {\n    if ((this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor) {\n      switch (this.extended.underlineColor & Attributes.CM_MASK) {\n        case Attributes.CM_P16:\n        case Attributes.CM_P256:  return this.extended.underlineColor & Attributes.PCOLOR_MASK;\n        case Attributes.CM_RGB:   return this.extended.underlineColor & Attributes.RGB_MASK;\n        default:                  return this.getFgColor();\n      }\n    }\n    return this.getFgColor();\n  }\n  public getUnderlineColorMode(): number {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? this.extended.underlineColor & Attributes.CM_MASK\n      : this.getFgColorMode();\n  }\n  public isUnderlineColorRGB(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_RGB\n      : this.isFgRGB();\n  }\n  public isUnderlineColorPalette(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P16\n          || (this.extended.underlineColor & Attributes.CM_MASK) === Attributes.CM_P256\n      : this.isFgPalette();\n  }\n  public isUnderlineColorDefault(): boolean {\n    return (this.bg & BgFlags.HAS_EXTENDED) && ~this.extended.underlineColor\n      ? (this.extended.underlineColor & Attributes.CM_MASK) === 0\n      : this.isFgDefault();\n  }\n  public getUnderlineStyle(): UnderlineStyle {\n    return this.fg & FgFlags.UNDERLINE\n      ? (this.bg & BgFlags.HAS_EXTENDED ? this.extended.underlineStyle : UnderlineStyle.SINGLE)\n      : UnderlineStyle.NONE;\n  }\n}\n\n\n/**\n * Extended attributes for a cell.\n * Holds information about different underline styles and color.\n */\nexport class ExtendedAttrs implements IExtendedAttrs {\n  private _ext: number = 0;\n  public get ext(): number {\n    if (this._urlId) {\n      return (\n        (this._ext & ~ExtFlags.UNDERLINE_STYLE) |\n        (this.underlineStyle << 26)\n      );\n    }\n    return this._ext;\n  }\n  public set ext(value: number) { this._ext = value; }\n\n  public get underlineStyle(): UnderlineStyle {\n    // Always return the URL style if it has one\n    if (this._urlId) {\n      return UnderlineStyle.DASHED;\n    }\n    return (this._ext & ExtFlags.UNDERLINE_STYLE) >> 26;\n  }\n  public set underlineStyle(value: UnderlineStyle) {\n    this._ext &= ~ExtFlags.UNDERLINE_STYLE;\n    this._ext |= (value << 26) & ExtFlags.UNDERLINE_STYLE;\n  }\n\n  public get underlineColor(): number {\n    return this._ext & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n  public set underlineColor(value: number) {\n    this._ext &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n    this._ext |= value & (Attributes.CM_MASK | Attributes.RGB_MASK);\n  }\n\n  private _urlId: number = 0;\n  public get urlId(): number {\n    return this._urlId;\n  }\n  public set urlId(value: number) {\n    this._urlId = value;\n  }\n\n  constructor(\n    ext: number = 0,\n    urlId: number = 0\n  ) {\n    this._ext = ext;\n    this._urlId = urlId;\n  }\n\n  public clone(): IExtendedAttrs {\n    return new ExtendedAttrs(this._ext, this._urlId);\n  }\n\n  /**\n   * Convenient method to indicate whether the object holds no additional information,\n   * that needs to be persistant in the buffer.\n   */\n  public isEmpty(): boolean {\n    return this.underlineStyle === UnderlineStyle.NONE && this._urlId === 0;\n  }\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { ExtendedAttrs } from 'common/buffer/AttributeData';\nimport { DebouncedIdleTask, IdleTaskQueue } from 'common/TaskQueue';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  public tabs: { [column: number]: boolean | undefined } = {};\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | undefined = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n  private _isClearing: boolean = false;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n      this._nullCell.extended = attr.extended;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n      this._nullCell.extended = new ExtendedAttrs();\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n      this._whitespaceCell.extended = attr.extended;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n      this._whitespaceCell.extended = new ExtendedAttrs();\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.rawOptions.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // count bufferlines with overly big memory to be cleaned afterwards\n    let dirtyMemoryLines = 0;\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.rawOptions.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          // +boolean for fast 0 or 1 conversion\n          dirtyMemoryLines += +this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n\n    this._memoryCleanupQueue.clear();\n    // schedule memory cleanup only, if more than 10% of the lines are affected\n    if (dirtyMemoryLines > 0.1 * this.lines.length) {\n      this._memoryCleanupPosition = 0;\n      this._memoryCleanupQueue.enqueue(() => this._batchedMemoryCleanup());\n    }\n  }\n\n  private _memoryCleanupQueue = new IdleTaskQueue();\n  private _memoryCleanupPosition = 0;\n\n  private _batchedMemoryCleanup(): boolean {\n    let normalRun = true;\n    if (this._memoryCleanupPosition >= this.lines.length) {\n      // cleanup made it once through all lines, thus rescan in loop below to also catch shifted lines,\n      // which should finish rather quick if there are no more cleanups pending\n      this._memoryCleanupPosition = 0;\n      normalRun = false;\n    }\n    let counted = 0;\n    while (this._memoryCleanupPosition < this.lines.length) {\n      counted += this.lines.get(this._memoryCleanupPosition++)!.cleanupMemory();\n      // cleanup max 100 lines per batch\n      if (counted > 100) {\n        return true;\n      }\n    }\n    // normal runs always need another rescan afterwards\n    // if we made it here with normalRun=false, we are in a final run\n    // and can end the cleanup task for sure\n    return normalRun;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.rawOptions.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        if (wrappedLines[destLineIndex] === undefined) {\n          // Sanity check that the line exists, this has been known to fail for an unknown reason\n          // which would stop the reflow from happening if an exception would throw.\n          break;\n        }\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param trimRight Whether to trim whitespace to the right.\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param lineIndex The absolute index of the line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.rawOptions.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Clears markers on single line.\n   * @param y The line to clear.\n   */\n  public clearMarkers(y: number): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      if (this.markers[i].line === y) {\n        this.markers[i].dispose();\n        this.markers.splice(i--, 1);\n      }\n    }\n    this._isClearing = false;\n  }\n\n  /**\n   * Clears markers on all lines\n   */\n  public clearAllMarkers(): void {\n    this._isClearing = true;\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].dispose();\n      this.markers.splice(i--, 1);\n    }\n    this._isClearing = false;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    if (!this._isClearing) {\n      this.markers.splice(this.markers.indexOf(marker), 1);\n    }\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor(\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let content = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      content += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return { range, content };\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData, IAttributeData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content, BgFlags, FgFlags } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n// Work variables to avoid garbage collection\nlet $startIndex = 0;\n\n/** Factor when to cleanup underlying array buffer after shrinking. */\nconst CLEANUP_THRESHOLD = 2;\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  protected _extendedAttrs: {[index: number]: IExtendedAttrs | undefined} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /** Get state of protected flag. */\n  public isProtected(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG] & BgFlags.PROTECTED;\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    $startIndex = index * CELL_SIZE;\n    cell.content = this._data[$startIndex + Cell.CONTENT];\n    cell.fg = this._data[$startIndex + Cell.FG];\n    cell.bg = this._data[$startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      cell.extended = this._extendedAttrs[index]!;\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    if (cell.bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = cell.extended;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number, eAttrs: IExtendedAttrs): void {\n    if (bg & BgFlags.HAS_EXTENDED) {\n      this._extendedAttrs[index] = eAttrs;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n\n    // handle fullwidth at pos: reset cell one to the left if pos is second cell of a wide char\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at line end: reset last cell if it is first cell of a wide char\n    if (this.getWidth(this.length - 1) === 2) {\n      this.setCellFromCodePoint(this.length - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData, eraseAttr?: IAttributeData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n\n    // handle fullwidth at pos:\n    // - reset pos-1 if wide char\n    // - reset pos if width==0 (previous second cell of a wide char)\n    if (pos && this.getWidth(pos - 1) === 2) {\n      this.setCellFromCodePoint(pos - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    if (this.getWidth(pos) === 0 && !this.hasContent(pos)) {\n      this.setCellFromCodePoint(pos, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData, eraseAttr?: IAttributeData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      if (start && this.getWidth(start - 1) === 2 && !this.isProtected(start - 1)) {\n        this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      if (end < this.length && this.getWidth(end - 1) === 2 && !this.isProtected(end)) {\n        this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n      }\n      while (start < end  && start < this.length) {\n        if (!this.isProtected(start)) {\n          this.setCell(start, fillCellData);\n        }\n        start++;\n      }\n      return;\n    }\n\n    // handle fullwidth at start: reset cell one to the left if start is second cell of a wide char\n    if (start && this.getWidth(start - 1) === 2) {\n      this.setCellFromCodePoint(start - 1, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n    // handle fullwidth at last cell + 1: reset to empty cell if it is second part of a wide char\n    if (end < this.length && this.getWidth(end - 1) === 2) {\n      this.setCellFromCodePoint(end, 0, 1, eraseAttr?.fg || 0, eraseAttr?.bg || 0, eraseAttr?.extended || new ExtendedAttrs());\n    }\n\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  /**\n   * Resize BufferLine to `cols` filling excess cells with `fillCellData`.\n   * The underlying array buffer will not change if there is still enough space\n   * to hold the new buffer line data.\n   * Returns a boolean indicating, whether a `cleanupMemory` call would free\n   * excess memory (true after shrinking > CLEANUP_THRESHOLD).\n   */\n  public resize(cols: number, fillCellData: ICellData): boolean {\n    if (cols === this.length) {\n      return this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n    }\n    const uint32Cells = cols * CELL_SIZE;\n    if (cols > this.length) {\n      if (this._data.buffer.byteLength >= uint32Cells * 4) {\n        // optimization: avoid alloc and data copy if buffer has enough room\n        this._data = new Uint32Array(this._data.buffer, 0, uint32Cells);\n      } else {\n        // slow path: new alloc and full data copy\n        const data = new Uint32Array(uint32Cells);\n        data.set(this._data);\n        this._data = data;\n      }\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      // optimization: just shrink the view on existing buffer\n      this._data = this._data.subarray(0, uint32Cells);\n      // Remove any cut off combined data\n      const keys = Object.keys(this._combined);\n      for (let i = 0; i < keys.length; i++) {\n        const key = parseInt(keys[i], 10);\n        if (key >= cols) {\n          delete this._combined[key];\n        }\n      }\n      // remove any cut off extended attributes\n      const extKeys = Object.keys(this._extendedAttrs);\n      for (let i = 0; i < extKeys.length; i++) {\n        const key = parseInt(extKeys[i], 10);\n        if (key >= cols) {\n          delete this._extendedAttrs[key];\n        }\n      }\n    }\n    this.length = cols;\n    return uint32Cells * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength;\n  }\n\n  /**\n   * Cleanup underlying array buffer.\n   * A cleanup will be triggered if the array buffer exceeds the actual used\n   * memory by a factor of CLEANUP_THRESHOLD.\n   * Returns 0 or 1 indicating whether a cleanup happened.\n   */\n  public cleanupMemory(): number {\n    if (this._data.length * 4 * CLEANUP_THRESHOLD < this._data.buffer.byteLength) {\n      const data = new Uint32Array(this._data.length);\n      data.set(this._data);\n      this._data = data;\n      return 1;\n    }\n    return 0;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData, respectProtect: boolean = false): void {\n    // full branching on respectProtect==true, hopefully getting fast JIT for standard case\n    if (respectProtect) {\n      for (let i = 0; i < this.length; ++i) {\n        if (!this.isProtected(i)) {\n          this.setCell(i, fillCellData);\n        }\n      }\n      return;\n    }\n    this._combined = {};\n    this._extendedAttrs = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this._extendedAttrs = {};\n    for (const el in line._extendedAttrs) {\n      this._extendedAttrs[el] = line._extendedAttrs[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    for (const el in this._extendedAttrs) {\n      newLine._extendedAttrs[el] = this._extendedAttrs[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n        if (srcData[(srcCol + cell) * CELL_SIZE + Cell.BG] & BgFlags.HAS_EXTENDED) {\n          this._extendedAttrs[destCol + cell] = src._extendedAttrs[srcCol + cell];\n        }\n      }\n    }\n\n    // Move any combined data over as needed, FIXME: repeat for extended attrs\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferRange } from 'xterm';\n\nexport function getRangeLength(range: IBufferRange, bufferCols: number): number {\n  if (range.start.y > range.end.y) {\n    throw new Error(`Buffer range end (${range.end.x}, ${range.end.y}) cannot be before start (${range.start.x}, ${range.start.y})`);\n  }\n  return bufferCols * (range.end.y - range.start.y) + (range.end.x - range.start.x + 1);\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param oldCols The columns before resize\n * @param newCols The columns after resize.\n * @param bufferAbsoluteY The absolute y position of the cursor (baseY + cursorY).\n * @param nullCell The cell data to use when filling in empty cells.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet extends Disposable implements IBufferSet {\n  private _normal!: Buffer;\n  private _alt!: Buffer;\n  private _activeBuffer!: Buffer;\n\n  private readonly _onBufferActivate = this.register(new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>());\n  public readonly onBufferActivate = this._onBufferActivate.event;\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   */\n  constructor(\n    private readonly _optionsService: IOptionsService,\n    private readonly _bufferService: IBufferService\n  ) {\n    super();\n    this.reset();\n    this.register(this._optionsService.onSpecificOptionChange('scrollback', () => this.resize(this._bufferService.cols, this._bufferService.rows)));\n    this.register(this._optionsService.onSpecificOptionChange('tabStopWidth', () => this.setupTabStops()));\n  }\n\n  public reset(): void {\n    this._normal = new Buffer(true, this._optionsService, this._bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, this._optionsService, this._bufferService);\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clearAllMarkers();\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n    this.setupTabStops(newCols);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData, IExtendedAttrs } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData, ExtendedAttrs } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content = 0;\n  public fg = 0;\n  public bg = 0;\n  public extended: IExtendedAttrs = new ExtendedAttrs();\n  public combinedData = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 0;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\nexport const DEFAULT_EXT = 0;\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..32\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000,\n  STRIKETHROUGH = 0x80000000,\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 2 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000,\n  HAS_EXTENDED = 0x10000000,\n  PROTECTED = 0x20000000\n}\n\nexport const enum ExtFlags {\n  /**\n   * bit 27..32 (upper 3 unused)\n   */\n  UNDERLINE_STYLE = 0x1C000000\n}\n\nexport const enum UnderlineStyle {\n  NONE = 0,\n  SINGLE = 1,\n  DOUBLE = 2,\n  CURLY = 3,\n  DOTTED = 4,\n  DASHED = 5\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter } from 'common/EventEmitter';\nimport { disposeArray } from 'common/Lifecycle';\nimport { IDisposable, IMarker } from 'common/Types';\n\nexport class Marker implements IMarker {\n  private static _nextId = 1;\n\n  public isDisposed: boolean = false;\n  private _disposables: IDisposable[] = [];\n\n  private _id: number = Marker._nextId++;\n  public get id(): number { return this._id; }\n\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  constructor(\n    public line: number\n  ) {\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n    disposeArray(this._disposables);\n    this._disposables.length = 0;\n  }\n\n  public register<T extends IDisposable>(disposable: T): T {\n    this._disposables.push(disposable);\n    return disposable;\n  }\n}\n", "/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | undefined } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | undefined = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u2409', // '␉' (HT)\n  'c': '\\u240c', // '␌' (FF)\n  'd': '\\u240d', // '␍' (CR)\n  'e': '\\u240a', // '␊' (LF)\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '␤' (NL)\n  'i': '\\u240b', // '␋' (VT)\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = undefined;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\nexport namespace C1_ESCAPED {\n  export const ST = `${C0.ESC}\\\\`;\n}\n", "/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = ev.altKey ? C0.ESC + C0.CR : C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      if (ev.altKey) {\n        result.key = C0.ESC + C0.ESC;\n      }\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[5;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else if (ev.ctrlKey) {\n        result.key = C0.ESC + '[6;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping?.[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          let keyString = String.fromCharCode(keyCode);\n          if (ev.shiftKey) {\n            keyString = keyString.toUpperCase();\n          }\n          result.key = C0.ESC + keyString;\n        } else if (ev.keyCode === 32) {\n          result.key = C0.ESC + (ev.ctrlKey ? C0.NUL : ' ');\n        } else if (ev.key === 'Dead' && ev.code.startsWith('Key')) {\n          // Reference: https://github.com/xtermjs/xterm.js/issues/3725\n          // Alt will produce a \"dead key\" (initate composition) with some\n          // of the letters in US layout (e.g. N/E/U).\n          // It's safe to match against Key* since no other `code` values begin with \"Key\".\n          // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code/code_values#code_values_on_mac\n          let keyString = ev.code.slice(3, 4);\n          if (!ev.shiftKey) {\n            keyString = keyString.toLowerCase();\n          }\n          result.key = C0.ESC + keyString;\n          result.cancel = true;\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && !ev.shiftKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n        if (ev.key === '@') { // ^ + shift + 2 = ^ + @\n          result.key = C0.NUL;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      if (code === 0xFEFF) {\n        // BOM\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  public decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF) || cp === 0xFEFF) {\n            // illegal codepoint or BOM\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF) || codepoint === 0xFEFF) {\n          // illegal codepoint or BOM, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeVersionProvider } from 'common/services/Services';\n\ntype CharWidth = 0 | 1 | 2;\n\nconst BMP_COMBINING = [\n  [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n  [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n  [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n  [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n  [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n  [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n  [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n  [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n  [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n  [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n  [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n  [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n  [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n  [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n  [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n  [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n  [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n  [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n  [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n  [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n  [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n  [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n  [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n  [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n  [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n  [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n  [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n  [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n  [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n  [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n  [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n  [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n  [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n  [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n  [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n  [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n  [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n  [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n  [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n  [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n  [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n  [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n  [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n];\nconst HIGH_COMBINING = [\n  [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n  [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n  [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n  [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n  [0xE0100, 0xE01EF]\n];\n\n// BMP lookup table, lazy initialized during first addon loading\nlet table: Uint8Array;\n\nfunction bisearch(ucs: number, data: number[][]): boolean {\n  let min = 0;\n  let max = data.length - 1;\n  let mid;\n  if (ucs < data[0][0] || ucs > data[max][1]) {\n    return false;\n  }\n  while (max >= min) {\n    mid = (min + max) >> 1;\n    if (ucs > data[mid][1]) {\n      min = mid + 1;\n    } else if (ucs < data[mid][0]) {\n      max = mid - 1;\n    } else {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport class UnicodeV6 implements IUnicodeVersionProvider {\n  public readonly version = '6';\n\n  constructor() {\n    // init lookup table once\n    if (!table) {\n      table = new Uint8Array(65536);\n      table.fill(1);\n      table[0] = 0;\n      // control chars\n      table.fill(0, 1, 32);\n      table.fill(0, 0x7f, 0xa0);\n\n      // apply wide char rules first\n      // wide chars\n      table.fill(2, 0x1100, 0x1160);\n      table[0x2329] = 2;\n      table[0x232a] = 2;\n      table.fill(2, 0x2e80, 0xa4d0);\n      table[0x303f] = 1;  // wrongly in last line\n\n      table.fill(2, 0xac00, 0xd7a4);\n      table.fill(2, 0xf900, 0xfb00);\n      table.fill(2, 0xfe10, 0xfe1a);\n      table.fill(2, 0xfe30, 0xfe70);\n      table.fill(2, 0xff00, 0xff61);\n      table.fill(2, 0xffe0, 0xffe7);\n\n      // apply combining last to ensure we overwrite\n      // wrongly wide set chars:\n      //    the original algo evals combining first and falls\n      //    through to wide check so we simply do here the opposite\n      // combining 0\n      for (let r = 0; r < BMP_COMBINING.length; ++r) {\n        table.fill(0, BMP_COMBINING[r][0], BMP_COMBINING[r][1] + 1);\n      }\n    }\n  }\n\n  public wcwidth(num: number): CharWidth {\n    if (num < 32) return 0;\n    if (num < 127) return 1;\n    if (num < 65536) return table[num] as CharWidth;\n    if (bisearch(num, HIGH_COMBINING)) return 0;\n    if ((num >= 0x20000 && num <= 0x2fffd) || (num >= 0x30000 && num <= 0x3fffd)) return 2;\n    return 1;\n  }\n}\n", "\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer extends Disposable {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n  private _isSyncWriting = false;\n  private _syncCalls = 0;\n  private _didUserInput = false;\n\n  private readonly _onWriteParsed = this.register(new EventEmitter<void>());\n  public readonly onWriteParsed = this._onWriteParsed.event;\n\n  constructor(private _action: (data: string | Uint8Array, promiseResult?: boolean) => void | Promise<boolean>) {\n    super();\n  }\n\n  public handleUserInput(): void {\n    this._didUserInput = true;\n  }\n\n  /**\n   * @deprecated Unreliable, to be removed soon.\n   */\n  public writeSync(data: string | Uint8Array, maxSubsequentCalls?: number): void {\n    // stop writeSync recursions with maxSubsequentCalls argument\n    // This is dangerous to use as it will lose the current data chunk\n    // and return immediately.\n    if (maxSubsequentCalls !== undefined && this._syncCalls > maxSubsequentCalls) {\n      // comment next line if a whole loop block should only contain x `writeSync` calls\n      // (total flat vs. deep nested limit)\n      this._syncCalls = 0;\n      return;\n    }\n    // append chunk to buffer\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(undefined);\n\n    // increase recursion counter\n    this._syncCalls++;\n    // exit early if another writeSync loop is active\n    if (this._isSyncWriting) {\n      return;\n    }\n    this._isSyncWriting = true;\n\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    // we have to do it here as single loop steps to not corrupt loop subject\n    // by another writeSync call triggered from _action\n    let chunk: string | Uint8Array | undefined;\n    while (chunk = this._writeBuffer.shift()) {\n      this._action(chunk);\n      const cb = this._callbacks.shift();\n      if (cb) cb();\n    }\n    // reset to avoid reprocessing of chunks with scheduled innerWrite call\n    // stopping scheduled innerWrite by offset > length condition\n    this._pendingData = 0;\n    this._bufferOffset = 0x7FFFFFFF;\n\n    // allow another writeSync to loop\n    this._isSyncWriting = false;\n    this._syncCalls = 0;\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n\n      // If this is the first write call after the user has done some input,\n      // parse it immediately to minimize input latency,\n      // otherwise schedule for the next event\n      if (this._didUserInput) {\n        this._didUserInput = false;\n        this._pendingData += data.length;\n        this._writeBuffer.push(data);\n        this._callbacks.push(callback);\n        this._innerWrite();\n        return;\n      }\n\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  /**\n   * Inner write call, that enters the sliced chunk processing by timing.\n   *\n   * `lastTime` indicates, when the last _innerWrite call had started.\n   * It is used to aggregate async handler execution under a timeout constraint\n   * effectively lowering the redrawing needs, schematically:\n   *\n   *   macroTask _innerWrite:\n   *     if (Date.now() - (lastTime | 0) < WRITE_TIMEOUT_MS):\n   *        schedule microTask _innerWrite(lastTime)\n   *     else:\n   *        schedule macroTask _innerWrite(0)\n   *\n   *   overall execution order on task queues:\n   *\n   *   macrotasks:  [...]  -->  _innerWrite(0)  -->  [...]  -->  screenUpdate  -->  [...]\n   *         m  t:                    |\n   *         i  a:                  [...]\n   *         c  s:                    |\n   *         r  k:              while < timeout:\n   *         o  s:                _innerWrite(timeout)\n   *\n   * `promiseResult` depicts the promise resolve value of an async handler.\n   * This value gets carried forward through all saved stack states of the\n   * paused parser for proper continuation.\n   *\n   * Note, for pure sync code `lastTime` and `promiseResult` have no meaning.\n   */\n  protected _innerWrite(lastTime: number = 0, promiseResult: boolean = true): void {\n    const startTime = lastTime || Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const result = this._action(data, promiseResult);\n      if (result) {\n        /**\n         * If we get a promise as return value, we re-schedule the continuation\n         * as thenable on the promise and exit right away.\n         *\n         * The exit here means, that we block input processing at the current active chunk,\n         * the exact execution position within the chunk is preserved by the saved\n         * stack content in InputHandler and EscapeSequenceParser.\n         *\n         * Resuming happens automatically from that saved stack state.\n         * Also the resolved promise value is passed along the callstack to\n         * `EscapeSequenceParser.parse` to correctly resume the stopped handler loop.\n         *\n         * Exceptions on async handlers will be logged to console async, but do not interrupt\n         * the input processing (continues with next handler at the current input position).\n         */\n\n        /**\n         * If a promise takes long to resolve, we should schedule continuation behind setTimeout.\n         * This might already be too late, if our .then enters really late (executor + prev thens took very long).\n         * This cannot be solved here for the handler itself (it is the handlers responsibility to slice hard work),\n         * but we can at least schedule a screen update as we gain control.\n         */\n        const continuation: (r: boolean) => void = (r: boolean) => Date.now() - startTime >= WRITE_TIMEOUT_MS\n          ? setTimeout(() => this._innerWrite(0, r))\n          : this._innerWrite(startTime, r);\n\n        /**\n         * Optimization considerations:\n         * The continuation above favors FPS over throughput by eval'ing `startTime` on resolve.\n         * This might schedule too many screen updates with bad throughput drops (in case a slow\n         * resolving handler sliced its work properly behind setTimeout calls). We cannot spot\n         * this condition here, also the renderer has no way to spot nonsense updates either.\n         * FIXME: A proper fix for this would track the FPS at the renderer entry level separately.\n         *\n         * If favoring of FPS shows bad throughtput impact, use the following instead. It favors\n         * throughput by eval'ing `startTime` upfront pulling at least one more chunk into the\n         * current microtask queue (executed before setTimeout).\n         */\n        // const continuation: (r: boolean) => void = Date.now() - startTime >= WRITE_TIMEOUT_MS\n        //   ? r => setTimeout(() => this._innerWrite(0, r))\n        //   : r => this._innerWrite(startTime, r);\n\n        // Handle exceptions synchronously to current band position, idea:\n        // 1. spawn a single microtask which we allow to throw hard\n        // 2. spawn a promise immediately resolving to `true`\n        // (executed on the same queue, thus properly aligned before continuation happens)\n        result.catch(err => {\n          queueMicrotask(() => {throw err;});\n          return Promise.resolve(false);\n        }).then(continuation);\n        return;\n      }\n\n      const cb = this._callbacks[this._bufferOffset];\n      if (cb) cb();\n      this._bufferOffset++;\n      this._pendingData -= data.length;\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite());\n    } else {\n      this._writeBuffer.length = 0;\n      this._callbacks.length = 0;\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n    this._onWriteParsed.fire();\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n\n// 'rgb:' rule - matching: r/g/b | rr/gg/bb | rrr/ggg/bbb | rrrr/gggg/bbbb (hex digits)\nconst RGB_REX = /^([\\da-f])\\/([\\da-f])\\/([\\da-f])$|^([\\da-f]{2})\\/([\\da-f]{2})\\/([\\da-f]{2})$|^([\\da-f]{3})\\/([\\da-f]{3})\\/([\\da-f]{3})$|^([\\da-f]{4})\\/([\\da-f]{4})\\/([\\da-f]{4})$/;\n// '#...' rule - matching any hex digits\nconst HASH_REX = /^[\\da-f]+$/;\n\n/**\n * Parse color spec to RGB values (8 bit per channel).\n * See `man xparsecolor` for details about certain format specifications.\n *\n * Supported formats:\n * - rgb:<red>/<green>/<blue> with <red>, <green>, <blue> in h | hh | hhh | hhhh\n * - #RGB, #RRGGBB, #RRRGGGBBB, #RRRRGGGGBBBB\n *\n * All other formats like rgbi: or device-independent string specifications\n * with float numbering are not supported.\n */\nexport function parseColor(data: string): [number, number, number] | undefined {\n  if (!data) return;\n  // also handle uppercases\n  let low = data.toLowerCase();\n  if (low.indexOf('rgb:') === 0) {\n    // 'rgb:' specifier\n    low = low.slice(4);\n    const m = RGB_REX.exec(low);\n    if (m) {\n      const base = m[1] ? 15 : m[4] ? 255 : m[7] ? 4095 : 65535;\n      return [\n        Math.round(parseInt(m[1] || m[4] || m[7] || m[10], 16) / base * 255),\n        Math.round(parseInt(m[2] || m[5] || m[8] || m[11], 16) / base * 255),\n        Math.round(parseInt(m[3] || m[6] || m[9] || m[12], 16) / base * 255)\n      ];\n    }\n  } else if (low.indexOf('#') === 0) {\n    // '#' specifier\n    low = low.slice(1);\n    if (HASH_REX.exec(low) && [3, 6, 9, 12].includes(low.length)) {\n      const adv = low.length / 3;\n      const result: [number, number, number] = [0, 0, 0];\n      for (let i = 0; i < 3; ++i) {\n        const c = parseInt(low.slice(adv * i, adv * i + adv), 16);\n        result[i] = adv === 1 ? c << 4 : adv === 2 ? c : adv === 3 ? c >> 4 : c >> 8;\n      }\n      return result;\n    }\n  }\n\n  // Named colors are currently not supported due to the large addition to the xterm.js bundle size\n  // they would add. In order to support named colors, we would need some way of optionally loading\n  // additional payloads so startup/download time is not bloated (see #3530).\n}\n\n// pad hex output to requested bit width\nfunction pad(n: number, bits: number): string {\n  const s = n.toString(16);\n  const s2 = s.length < 2 ? '0' + s : s;\n  switch (bits) {\n    case 4:\n      return s[0];\n    case 8:\n      return s2;\n    case 12:\n      return (s2 + s2).slice(0, 3);\n    default:\n      return s2 + s2;\n  }\n}\n\n/**\n * Convert a given color to rgb:../../.. string of `bits` depth.\n */\nexport function toRgbString(color: [number, number, number], bits: number = 16): string {\n  const [r, g, b] = color;\n  return `rgb:${pad(r, bits)}/${pad(g, bits)}/${pad(b, bits)}`;\n}\n", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n * Internal actions of EscapeSequenceParser.\n */\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType, ISubParserStackState } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public registerHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    // force cleanup leftover handlers\n    if (this._active.length) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let handlerResult: boolean | Promise<boolean> = false;\n      let j = this._active.length - 1;\n      let fallThrough = false;\n      if (this._stack.paused) {\n        j = this._stack.loopPosition - 1;\n        handlerResult = promiseResult;\n        fallThrough = this._stack.fallThrough;\n        this._stack.paused = false;\n      }\n      if (!fallThrough && handlerResult === false) {\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].unhook(success);\n          if (handlerResult === true) {\n            break;\n          } else if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = false;\n            return handlerResult;\n          }\n        }\n        j--;\n      }\n      // cleanup left over handlers (fallThrough for async)\n      for (; j >= 0; j--) {\n        handlerResult = this._active[j].unhook(false);\n        if (handlerResult instanceof Promise) {\n          this._stack.paused = true;\n          this._stack.loopPosition = j;\n          this._stack.fallThrough = true;\n          return handlerResult;\n        }\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n// predefine empty params as [0] (ZDM)\nconst EMPTY_PARAMS = new Params();\nEMPTY_PARAMS.addParam(0);\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams = EMPTY_PARAMS;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => boolean | Promise<boolean>) { }\n\n  public hook(params: IParams): void {\n    // since we need to preserve params until `unhook`, we have to clone it\n    // (only borrowed from parser and spans multiple parser states)\n    // perf optimization:\n    // clone only, if we have non empty params, otherwise stick with default\n    this._params = (params.length > 1 || params.params[0]) ? params.clone() : EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params);\n      if (ret instanceof Promise) {\n        // need to hold data and params until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._params = EMPTY_PARAMS;\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._params = EMPTY_PARAMS;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType, IParserStackState, ParserStackType, ResumableHandlersType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    this.table.fill(action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number): number[] => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: { [flag: number]: ExecuteHandlerType };\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected readonly _oscParser: IOscParser;\n  protected readonly _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  // parser stack save for async handler support\n  protected _parseStack: IParserStackState = {\n    state: ParserStackType.NONE,\n    handlers: [],\n    handlerPos: 0,\n    transition: 0,\n    chunkPos: 0\n  };\n\n  constructor(\n    protected readonly _transitions: TransitionTable = VT500_TRANSITION_TABLE\n  ) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this.register(toDisposable(() => {\n      this._csiHandlers = Object.create(null);\n      this._executeHandlers = Object.create(null);\n      this._escHandlers = Object.create(null);\n    }));\n    this._oscParser = this.register(new OscParser());\n    this._dcsParser = this.register(new DcsParser());\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.registerEscHandler({ final: '\\\\' }, () => true);\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public registerEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public registerCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public registerDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.registerHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public registerOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.registerHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  /**\n   * Reset parser to initial values.\n   *\n   * This can also be used to lift the improper continuation error condition\n   * when dealing with async handlers. Use this only as a last resort to silence\n   * that error when the terminal has no pending data to be processed. Note that\n   * the interrupted async handler might continue its work in the future messing\n   * up the terminal state even further.\n   */\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n    // abort pending continuation from async handler\n    // Here the RESET type indicates, that the next parse call will\n    // ignore any saved stack, instead continues sync with next codepoint from GROUND\n    if (this._parseStack.state !== ParserStackType.NONE) {\n      this._parseStack.state = ParserStackType.RESET;\n      this._parseStack.handlers = []; // also release handlers ref\n    }\n  }\n\n  /**\n   * Async parse support.\n   */\n  protected _preserveStack(\n    state: ParserStackType,\n    handlers: ResumableHandlersType,\n    handlerPos: number,\n    transition: number,\n    chunkPos: number\n  ): void {\n    this._parseStack.state = state;\n    this._parseStack.handlers = handlers;\n    this._parseStack.handlerPos = handlerPos;\n    this._parseStack.transition = transition;\n    this._parseStack.chunkPos = chunkPos;\n  }\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   *\n   * Note on asynchronous handler support:\n   * Any handler returning a promise will be treated as asynchronous.\n   * To keep the in-band blocking working for async handlers, `parse` pauses execution,\n   * creates a stack save and returns the promise to the caller.\n   * For proper continuation of the paused state it is important\n   * to await the promise resolving. On resolve the parse must be repeated\n   * with the same chunk of data and the resolved value in `promiseResult`\n   * until no promise is returned.\n   *\n   * Important: With only sync handlers defined, parsing is completely synchronous as well.\n   * As soon as an async handler is involved, synchronous parsing is not possible anymore.\n   *\n   * Boilerplate for proper parsing of multiple chunks with async handlers:\n   *\n   * ```typescript\n   * async function parseMultipleChunks(chunks: Uint32Array[]): Promise<void> {\n   *   for (const chunk of chunks) {\n   *     let result: void | Promise<boolean>;\n   *     let prev: boolean | undefined;\n   *     while (result = parser.parse(chunk, chunk.length, prev)) {\n   *       prev = await result;\n   *     }\n   *   }\n   *   // finished parsing all chunks...\n   * }\n   * ```\n   */\n  public parse(data: Uint32Array, length: number, promiseResult?: boolean): void | Promise<boolean> {\n    let code = 0;\n    let transition = 0;\n    let start = 0;\n    let handlerResult: void | boolean | Promise<boolean>;\n\n    // resume from async handler\n    if (this._parseStack.state) {\n      // allow sync parser reset even in continuation mode\n      // Note: can be used to recover parser from improper continuation error below\n      if (this._parseStack.state === ParserStackType.RESET) {\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1; // continue with next codepoint in GROUND\n      } else {\n        if (promiseResult === undefined || this._parseStack.state === ParserStackType.FAIL) {\n          /**\n           * Reject further parsing on improper continuation after pausing.\n           * This is a really bad condition with screwed up execution order and prolly messed up\n           * terminal state, therefore we exit hard with an exception and reject any further parsing.\n           *\n           * Note: With `Terminal.write` usage this exception should never occur, as the top level\n           * calls are guaranteed to handle async conditions properly. If you ever encounter this\n           * exception in your terminal integration it indicates, that you injected data chunks to\n           * `InputHandler.parse` or `EscapeSequenceParser.parse` synchronously without waiting for\n           * continuation of a running async handler.\n           *\n           * It is possible to get rid of this error by calling `reset`. But dont rely on that,\n           * as the pending async handler still might mess up the terminal later. Instead fix the faulty\n           * async handling, so this error will not be thrown anymore.\n           */\n          this._parseStack.state = ParserStackType.FAIL;\n          throw new Error('improper continuation due to previous async handler, giving up parsing');\n        }\n\n        // we have to resume the old handler loop if:\n        // - return value of the promise was `false`\n        // - handlers are not exhausted yet\n        const handlers = this._parseStack.handlers;\n        let handlerPos = this._parseStack.handlerPos - 1;\n        switch (this._parseStack.state) {\n          case ParserStackType.CSI:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as CsiHandlerType[])[handlerPos](this._params);\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.ESC:\n            if (promiseResult === false && handlerPos > -1) {\n              for (; handlerPos >= 0; handlerPos--) {\n                handlerResult = (handlers as EscHandlerType[])[handlerPos]();\n                if (handlerResult === true) {\n                  break;\n                } else if (handlerResult instanceof Promise) {\n                  this._parseStack.handlerPos = handlerPos;\n                  return handlerResult;\n                }\n              }\n            }\n            this._parseStack.handlers = [];\n            break;\n          case ParserStackType.DCS:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n          case ParserStackType.OSC:\n            code = data[this._parseStack.chunkPos];\n            handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a, promiseResult);\n            if (handlerResult) {\n              return handlerResult;\n            }\n            if (code === 0x1b) this._parseStack.transition |= ParserState.ESCAPE;\n            this._params.reset();\n            this._params.addParam(0); // ZDM\n            this._collect = 0;\n            break;\n        }\n        // cleanup before continuing with the main sync loop\n        this._parseStack.state = ParserStackType.NONE;\n        start = this._parseStack.chunkPos + 1;\n        this.precedingCodepoint = 0;\n        this.currentState = this._parseStack.transition & TableAccess.TRANSITION_STATE_MASK;\n      }\n    }\n\n    // continue with main sync loop\n\n    // process input string\n    for (let i = start; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = this._transitions.table[this.currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState: this.currentState,\n              collect: this._collect,\n              params: this._params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[this._collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlers[j](this._params);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.CSI, handlers, j, transition, i);\n              return handlerResult;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(this._collect << 8 | code, this._params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                this._params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                this._params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                this._params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          this._collect <<= 8;\n          this._collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[this._collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // true means success and to stop bubbling\n            // a promise indicates an async handler that needs to finish before progressing\n            handlerResult = handlersEsc[jj]();\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._preserveStack(ParserStackType.ESC, handlersEsc, jj, transition, i);\n              return handlerResult;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(this._collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          this._dcsParser.hook(this._collect << 8 | code, this._params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._dcsParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          handlerResult = this._dcsParser.unhook(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.DCS, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          this._oscParser.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              this._oscParser.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          handlerResult = this._oscParser.end(code !== 0x18 && code !== 0x1a);\n          if (handlerResult) {\n            this._preserveStack(ParserStackType.OSC, [], 0, transition, i);\n            return handlerResult;\n          }\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          this._params.reset();\n          this._params.addParam(0); // ZDM\n          this._collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      this.currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser, ISubParserStackState } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\nconst EMPTY_HANDLERS: IOscHandler[] = [];\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _active = EMPTY_HANDLERS;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n  private _stack: ISubParserStackState = {\n    paused: false,\n    loopPosition: 0,\n    fallThrough: false\n  };\n\n  public registerHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => { };\n    this._active = EMPTY_HANDLERS;\n  }\n\n  public reset(): void {\n    // force cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      for (let j = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; j >= 0; --j) {\n        this._active[j].end(false);\n      }\n    }\n    this._stack.paused = false;\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    this._active = this._handlers[this._id] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean, promiseResult: boolean = true): void | Promise<boolean> {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n\n      if (!this._active.length) {\n        this._handlerFb(this._id, 'END', success);\n      } else {\n        let handlerResult: boolean | Promise<boolean> = false;\n        let j = this._active.length - 1;\n        let fallThrough = false;\n        if (this._stack.paused) {\n          j = this._stack.loopPosition - 1;\n          handlerResult = promiseResult;\n          fallThrough = this._stack.fallThrough;\n          this._stack.paused = false;\n        }\n        if (!fallThrough && handlerResult === false) {\n          for (; j >= 0; j--) {\n            handlerResult = this._active[j].end(success);\n            if (handlerResult === true) {\n              break;\n            } else if (handlerResult instanceof Promise) {\n              this._stack.paused = true;\n              this._stack.loopPosition = j;\n              this._stack.fallThrough = false;\n              return handlerResult;\n            }\n          }\n          j--;\n        }\n        // cleanup left over handlers\n        // we always have to call .end for proper cleanup,\n        // here we use `success` to indicate whether a handler should execute\n        for (; j >= 0; j--) {\n          handlerResult = this._active[j].end(false);\n          if (handlerResult instanceof Promise) {\n            this._stack.paused = true;\n            this._stack.loopPosition = j;\n            this._stack.fallThrough = true;\n            return handlerResult;\n          }\n        }\n      }\n\n    }\n    this._active = EMPTY_HANDLERS;\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => boolean | Promise<boolean>) { }\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): boolean | Promise<boolean> {\n    let ret: boolean | Promise<boolean> = false;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n      if (ret instanceof Promise) {\n        // need to hold data until `ret` got resolved\n        // dont care for errors, data will be freed anyway on next start\n        return ret.then(res => {\n          this._data = '';\n          this._hitLimit = false;\n          return res;\n        });\n      }\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (Array.isArray(values[0])) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (Array.isArray(value)) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(terminal as any);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi } from 'xterm';\nimport { IBuffer } from 'common/buffer/Types';\nimport { BufferLineApiView } from 'common/public/BufferLineApiView';\nimport { CellData } from 'common/buffer/CellData';\n\nexport class BufferApiView implements IBufferApi {\n  constructor(\n    private _buffer: IBuffer,\n    public readonly type: 'normal' | 'alternate'\n  ) { }\n\n  public init(buffer: IBuffer): BufferApiView {\n    this._buffer = buffer;\n    return this;\n  }\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n  public getNullCell(): IBufferCellApi { return new CellData(); }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferLine, ICellData } from 'common/Types';\nimport { IBufferCell as IBufferCellApi, IBufferLine as IBufferLineApi } from 'xterm';\n\nexport class BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) { }\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public get length(): number { return this._line.length; }\n  public getCell(x: number, cell?: IBufferCellApi): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n\n    if (cell) {\n      this._line.loadCell(x, cell as ICellData);\n      return cell;\n    }\n    return this._line.loadCell(x, new CellData());\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer as IBufferApi, IBufferNamespace as IBufferNamespaceApi } from 'xterm';\nimport { BufferApiView } from 'common/public/BufferApiView';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class BufferNamespaceApi implements IBufferNamespaceApi {\n  private _normal: BufferApiView;\n  private _alternate: BufferApiView;\n\n  private readonly _onBufferChange = new EventEmitter<IBufferApi>();\n  public readonly onBufferChange = this._onBufferChange.event;\n\n  constructor(private _core: ICoreTerminal) {\n    this._normal = new BufferApiView(this._core.buffers.normal, 'normal');\n    this._alternate = new BufferApiView(this._core.buffers.alt, 'alternate');\n    this._core.buffers.onBufferActivate(() => this._onBufferChange.fire(this.active));\n  }\n  public get active(): IBufferApi {\n    if (this._core.buffers.active === this._core.buffers.normal) { return this.normal; }\n    if (this._core.buffers.active === this._core.buffers.alt) { return this.alternate; }\n    throw new Error('Active buffer is neither normal nor alternate');\n  }\n  public get normal(): IBufferApi {\n    return this._normal.init(this._core.buffers.normal);\n  }\n  public get alternate(): IBufferApi {\n    return this._alternate.init(this._core.buffers.alt);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParams } from 'common/parser/Types';\nimport { IDisposable, IFunctionIdentifier, IParser } from 'xterm';\nimport { ICoreTerminal } from 'common/Types';\n\nexport class ParserApi implements IParser {\n  constructor(private _core: ICoreTerminal) { }\n\n  public registerCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerCsiHandler(id, callback);\n  }\n  public registerDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean | Promise<boolean>): IDisposable {\n    return this.registerDcsHandler(id, callback);\n  }\n  public registerEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerEscHandler(id, handler);\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean | Promise<boolean>): IDisposable {\n    return this.registerEscHandler(id, handler);\n  }\n  public registerOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this._core.registerOscHandler(ident, callback);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean | Promise<boolean>): IDisposable {\n    return this.registerOscHandler(ident, callback);\n  }\n}\n", "/**\n * Copyright (c) 2021 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreTerminal } from 'common/Types';\nimport { IUnicodeHandling, IUnicodeVersionProvider } from 'xterm';\n\nexport class UnicodeApi implements IUnicodeHandling {\n  constructor(private _core: ICoreTerminal) { }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._core.unicodeService.register(provider);\n  }\n\n  public get versions(): string[] {\n    return this._core.unicodeService.versions;\n  }\n\n  public get activeVersion(): string {\n    return this._core.unicodeService.activeVersion;\n  }\n\n  public set activeVersion(version: string) {\n    this._core.unicodeService.activeVersion = version;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { EventEmitter, IEventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IAttributeData, IBufferLine, ScrollSource } from 'common/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService extends Disposable implements IBufferService {\n  public serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n  /** Whether the user is scrolling (locks the scroll position) */\n  public isUserScrolling: boolean = false;\n\n  private readonly _onResize = this.register(new EventEmitter<{ cols: number, rows: number }>());\n  public readonly onResize = this._onResize.event;\n  private readonly _onScroll = this.register(new EventEmitter<number>());\n  public readonly onScroll = this._onScroll.event;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  /** An IBufferline to clone/copy from for new blank lines */\n  private _cachedBlankLine: IBufferLine | undefined;\n\n  constructor(@IOptionsService optionsService: IOptionsService) {\n    super();\n    this.cols = Math.max(optionsService.rawOptions.cols || 0, MINIMUM_COLS);\n    this.rows = Math.max(optionsService.rawOptions.rows || 0, MINIMUM_ROWS);\n    this.buffers = this.register(new BufferSet(optionsService, this));\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n    this.buffers.resize(cols, rows);\n    // TODO: This doesn't fire when scrollback changes - add a resize event to BufferSet and forward event\n    this._onResize.fire({ cols, rows });\n  }\n\n  public reset(): void {\n    this.buffers.reset();\n    this.isUserScrolling = false;\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param eraseAttr The attribute data to use the for blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(eraseAttr: IAttributeData, isWrapped: boolean = false): void {\n    const buffer = this.buffer;\n\n    let newLine: IBufferLine | undefined;\n    newLine = this._cachedBlankLine;\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = buffer.getBlankLine(eraseAttr, isWrapped);\n      this._cachedBlankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = buffer.ybase + buffer.scrollTop;\n    const bottomRow = buffer.ybase + buffer.scrollBottom;\n\n    if (buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          buffer.lines.push(newLine.clone());\n        }\n      } else {\n        buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this.isUserScrolling) {\n          buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this.isUserScrolling) {\n          buffer.ydisp = Math.max(buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1 /* as it's zero-based */;\n      buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this.isUserScrolling) {\n      buffer.ydisp = buffer.ybase;\n    }\n\n    this._onScroll.fire(buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void {\n    const buffer = this.buffer;\n    if (disp < 0) {\n      if (buffer.ydisp === 0) {\n        return;\n      }\n      this.isUserScrolling = true;\n    } else if (disp + buffer.ydisp >= buffer.ybase) {\n      this.isUserScrolling = false;\n    }\n\n    const oldYdisp = buffer.ydisp;\n    buffer.ydisp = Math.max(Math.min(buffer.ydisp + disp, buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(buffer.ydisp);\n    }\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharsetService } from 'common/services/Services';\nimport { ICharset } from 'common/Types';\n\nexport class CharsetService implements ICharsetService {\n  public serviceBrand: any;\n\n  public charset: ICharset | undefined;\n  public glevel: number = 0;\n\n  private _charsets: (ICharset | undefined)[] = [];\n\n  public reset(): void {\n    this.charset = undefined;\n    this._charsets = [];\n    this.glevel = 0;\n  }\n\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this._charsets[g];\n  }\n\n  public setgCharset(g: number, charset: ICharset | undefined): void {\n    this._charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: { [key: string]: ICoreMouseProtocol } = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: { [key: string]: CoreMouseEncoding } = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223 (1-based).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    const params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // supress mouse report if we exceed addressible range\n    // Note this is handled differently by emulators\n    // - xterm:         sends 0;0 coords instead\n    // - vte, konsole:  no report\n    if (params[0] > 255 || params[1] > 255 || params[2] > 255) {\n      return '';\n    }\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  },\n  SGR_PIXELS: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.x};${e.y}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService extends Disposable implements ICoreMouseService {\n  private _protocols: { [name: string]: ICoreMouseProtocol } = {};\n  private _encodings: { [name: string]: CoreMouseEncoding } = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  private readonly _onProtocolChange = this.register(new EventEmitter<CoreMouseEventType>());\n  public readonly onProtocolChange =  this._onProtocolChange.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    super();\n    // register default protocols and encodings\n    for (const name of Object.keys(DEFAULT_PROTOCOLS)) this.addProtocol(name, DEFAULT_PROTOCOLS[name]);\n    for (const name of Object.keys(DEFAULT_ENCODINGS)) this.addEncoding(name, DEFAULT_ENCODINGS[name]);\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public get areMouseEventsActive(): boolean {\n    return this._protocols[this._activeProtocol].events !== 0;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n      || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move events at grid or pixel level\n    if (e.action === CoreMouseAction.MOVE\n      && this._lastEvent\n      && this._equalEvents(this._lastEvent, e, this._activeEncoding === 'SGR_PIXELS')\n    ) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    if (report) {\n      // always send DEFAULT as binary data\n      if (this._activeEncoding === 'DEFAULT') {\n        this._coreService.triggerBinaryEvent(report);\n      } else {\n        this._coreService.triggerDataEvent(report, true);\n      }\n    }\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): { [event: string]: boolean } {\n    return {\n      down: !!(events & CoreMouseEventType.DOWN),\n      up: !!(events & CoreMouseEventType.UP),\n      drag: !!(events & CoreMouseEventType.DRAG),\n      move: !!(events & CoreMouseEventType.MOVE),\n      wheel: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _equalEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent, pixels: boolean): boolean {\n    if (pixels) {\n      if (e1.x !== e2.x) return false;\n      if (e1.y !== e2.y) return false;\n    } else {\n      if (e1.col !== e2.col) return false;\n      if (e1.row !== e2.row) return false;\n    }\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes, IModes } from 'common/Types';\nimport { clone } from 'common/Clone';\nimport { Disposable } from 'common/Lifecycle';\n\nconst DEFAULT_MODES: IModes = Object.freeze({\n  insertMode: false\n});\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false,\n  applicationKeypad: false,\n  bracketedPasteMode: false,\n  origin: false,\n  reverseWraparound: false,\n  sendFocus: false,\n  wraparound: true // defaults: xterm - true, vt100 - false\n});\n\nexport class CoreService extends Disposable implements ICoreService {\n  public serviceBrand: any;\n\n  public isCursorInitialized: boolean = false;\n  public isCursorHidden: boolean = false;\n  public modes: IModes;\n  public decPrivateModes: IDecPrivateModes;\n\n  private readonly _onData = this.register(new EventEmitter<string>());\n  public readonly onData = this._onData.event;\n  private readonly _onUserInput = this.register(new EventEmitter<void>());\n  public readonly onUserInput = this._onUserInput.event;\n  private readonly _onBinary = this.register(new EventEmitter<string>());\n  public readonly onBinary = this._onBinary.event;\n  private readonly _onRequestScrollToBottom = this.register(new EventEmitter<void>());\n  public readonly onRequestScrollToBottom = this._onRequestScrollToBottom.event;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.modes = clone(DEFAULT_MODES);\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (wasUserInput && this._optionsService.rawOptions.scrollOnUserInput && buffer.ybase !== buffer.ydisp) {\n      this._onRequestScrollToBottom.fire();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n\n  public triggerBinaryEvent(data: string): void {\n    if (this._optionsService.rawOptions.disableStdin) {\n      return;\n    }\n    this._logService.debug(`sending binary \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onBinary.fire(data);\n  }\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { css } from 'common/Color';\nimport { EventEmitter } from 'common/EventEmitter';\nimport { Disposable, toDisposable } from 'common/Lifecycle';\nimport { IDecorationService, IInternalDecoration } from 'common/services/Services';\nimport { SortedList } from 'common/SortedList';\nimport { IColor } from 'common/Types';\nimport { IDecorationOptions, IDecoration, IMarker, IEvent } from 'xterm';\n\n// Work variables to avoid garbage collection\nlet $xmin = 0;\nlet $xmax = 0;\n\nexport class DecorationService extends Disposable implements IDecorationService {\n  public serviceBrand: any;\n\n  /**\n   * A list of all decorations, sorted by the marker's line value. This relies on the fact that\n   * while marker line values do change, they should all change by the same amount so this should\n   * never become out of order.\n   */\n  private readonly _decorations: SortedList<IInternalDecoration> = new SortedList(e => e?.marker.line);\n\n  private readonly _onDecorationRegistered = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRegistered = this._onDecorationRegistered.event;\n  private readonly _onDecorationRemoved = this.register(new EventEmitter<IInternalDecoration>());\n  public readonly onDecorationRemoved = this._onDecorationRemoved.event;\n\n  public get decorations(): IterableIterator<IInternalDecoration> { return this._decorations.values(); }\n\n  constructor() {\n    super();\n\n    this.register(toDisposable(() => {\n      for (const d of this._decorations.values()) {\n        this._onDecorationRemoved.fire(d);\n      }\n      this.reset();\n    }));\n  }\n\n  public registerDecoration(options: IDecorationOptions): IDecoration | undefined {\n    if (options.marker.isDisposed) {\n      return undefined;\n    }\n    const decoration = new Decoration(options);\n    if (decoration) {\n      const markerDispose = decoration.marker.onDispose(() => decoration.dispose());\n      decoration.onDispose(() => {\n        if (decoration) {\n          if (this._decorations.delete(decoration)) {\n            this._onDecorationRemoved.fire(decoration);\n          }\n          markerDispose.dispose();\n        }\n      });\n      this._decorations.insert(decoration);\n      this._onDecorationRegistered.fire(decoration);\n    }\n    return decoration;\n  }\n\n  public reset(): void {\n    for (const d of this._decorations.values()) {\n      d.dispose();\n    }\n    this._decorations.clear();\n  }\n\n  public *getDecorationsAtCell(x: number, line: number, layer?: 'bottom' | 'top'): IterableIterator<IInternalDecoration> {\n    let xmin = 0;\n    let xmax = 0;\n    for (const d of this._decorations.getKeyIterator(line)) {\n      xmin = d.options.x ?? 0;\n      xmax = xmin + (d.options.width ?? 1);\n      if (x >= xmin && x < xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        yield d;\n      }\n    }\n  }\n\n  public forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void {\n    this._decorations.forEachByKey(line, d => {\n      $xmin = d.options.x ?? 0;\n      $xmax = $xmin + (d.options.width ?? 1);\n      if (x >= $xmin && x < $xmax && (!layer || (d.options.layer ?? 'bottom') === layer)) {\n        callback(d);\n      }\n    });\n  }\n\n  public dispose(): void {\n    for (const d of this._decorations.values()) {\n      this._onDecorationRemoved.fire(d);\n    }\n    this.reset();\n  }\n}\n\nclass Decoration extends Disposable implements IInternalDecoration {\n  public readonly marker: IMarker;\n  public element: HTMLElement | undefined;\n  public isDisposed: boolean = false;\n\n  public readonly onRenderEmitter = this.register(new EventEmitter<HTMLElement>());\n  public readonly onRender = this.onRenderEmitter.event;\n  private readonly _onDispose = this.register(new EventEmitter<void>());\n  public readonly onDispose = this._onDispose.event;\n\n  private _cachedBg: IColor | undefined | null = null;\n  public get backgroundColorRGB(): IColor | undefined {\n    if (this._cachedBg === null) {\n      if (this.options.backgroundColor) {\n        this._cachedBg = css.toColor(this.options.backgroundColor);\n      } else {\n        this._cachedBg = undefined;\n      }\n    }\n    return this._cachedBg;\n  }\n\n  private _cachedFg: IColor | undefined | null = null;\n  public get foregroundColorRGB(): IColor | undefined {\n    if (this._cachedFg === null) {\n      if (this.options.foregroundColor) {\n        this._cachedFg = css.toColor(this.options.foregroundColor);\n      } else {\n        this._cachedFg = undefined;\n      }\n    }\n    return this._cachedFg;\n  }\n\n  constructor(\n    public readonly options: IDecorationOptions\n  ) {\n    super();\n    this.marker = options.marker;\n    if (this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position) {\n      this.options.overviewRulerOptions.position = 'full';\n    }\n  }\n\n  public override dispose(): void {\n    this._onDispose.fire();\n    super.dispose();\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  public set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  public forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    for (const [key, value] of this._entries.entries()) {\n      callback(key, value);\n    }\n  }\n\n  public has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  public get<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  public serviceBrand: undefined;\n\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public getService<T>(id: IServiceIdentifier<T>): T | undefined {\n    return this._services.get(id);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): T {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return new ctor(...[...args, ...serviceArgs]);\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { ILogService, IOptionsService, LogLevelEnum } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevelEnum } = {\n  debug: LogLevelEnum.DEBUG,\n  info: LogLevelEnum.INFO,\n  warn: LogLevelEnum.WARN,\n  error: LogLevelEnum.ERROR,\n  off: LogLevelEnum.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService extends Disposable implements ILogService {\n  public serviceBrand: any;\n\n  public logLevel: LogLevelEnum = LogLevelEnum.OFF;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    super();\n    this._updateLogLevel();\n    this.register(this._optionsService.onSpecificOptionChange('logLevel', () => this._updateLogLevel()));\n  }\n\n  private _updateLogLevel(): void {\n    this.logLevel = optionsKeyToLogLevel[this._optionsService.rawOptions.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  public debug(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  public info(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  public warn(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  public error(message: string, ...optionalParams: any[]): void {\n    if (this.logLevel <= LogLevelEnum.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, FontWeight } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { CursorStyle, IDisposable } from 'common/Types';\nimport { Disposable } from 'common/Lifecycle';\n\nexport const DEFAULT_OPTIONS: Readonly<Required<ITerminalOptions>> = {\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  cursorWidth: 1,\n  customGlyphs: true,\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  linkHandler: null,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollOnUserInput: true,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  smoothScrollDuration: 0,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  minimumContrastRatio: 1,\n  disableStdin: false,\n  allowProposedApi: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  windowOptions: {},\n  windowsMode: false,\n  wordSeparator: ' ()[]{}\\',\"`',\n  altClickMovesCursor: true,\n  convertEol: false,\n  termName: 'xterm',\n  cancelEvents: false,\n  overviewRulerWidth: 0\n};\n\nconst FONT_WEIGHT_OPTIONS: Extract<FontWeight, string>[] = ['normal', 'bold', '100', '200', '300', '400', '500', '600', '700', '800', '900'];\n\nexport class OptionsService extends Disposable implements IOptionsService {\n  public serviceBrand: any;\n\n  public readonly rawOptions: Required<ITerminalOptions>;\n  public options: Required<ITerminalOptions>;\n\n  private readonly _onOptionChange = this.register(new EventEmitter<keyof ITerminalOptions>());\n  public readonly onOptionChange = this._onOptionChange.event;\n\n  constructor(options: Partial<ITerminalOptions>) {\n    super();\n    // set the default value of each option\n    const defaultOptions = { ...DEFAULT_OPTIONS };\n    for (const key in options) {\n      if (key in defaultOptions) {\n        try {\n          const newValue = options[key];\n          defaultOptions[key] = this._sanitizeAndValidateOption(key, newValue);\n        } catch (e) {\n          console.error(e);\n        }\n      }\n    }\n\n    // set up getters and setters for each option\n    this.rawOptions = defaultOptions;\n    this.options = { ... defaultOptions };\n    this._setupOptions();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (value: ITerminalOptions[T]) => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (eventKey === key) {\n        listener(this.rawOptions[key]);\n      }\n    });\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  public onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable {\n    return this.onOptionChange(eventKey => {\n      if (keys.indexOf(eventKey) !== -1) {\n        listener();\n      }\n    });\n  }\n\n  private _setupOptions(): void {\n    const getter = (propName: string): any => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n      return this.rawOptions[propName];\n    };\n\n    const setter = (propName: string, value: any): void => {\n      if (!(propName in DEFAULT_OPTIONS)) {\n        throw new Error(`No option with key \"${propName}\"`);\n      }\n\n      value = this._sanitizeAndValidateOption(propName, value);\n      // Don't fire an option change event if they didn't change\n      if (this.rawOptions[propName] !== value) {\n        this.rawOptions[propName] = value;\n        this._onOptionChange.fire(propName);\n      }\n    };\n\n    for (const propName in this.rawOptions) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this.options, propName, desc);\n    }\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'cursorStyle':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        if (!isCursorStyle(value)) {\n          throw new Error(`\"${value}\" is not a valid value for ${key}`);\n        }\n        break;\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'fontWeight':\n      case 'fontWeightBold':\n        if (typeof value === 'number' && 1 <= value && value <= 1000) {\n          // already valid numeric value\n          break;\n        }\n        value = FONT_WEIGHT_OPTIONS.includes(value) ? value : DEFAULT_OPTIONS[key];\n        break;\n      case 'cursorWidth':\n        value = Math.floor(value);\n        // Fall through for bounds check\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'minimumContrastRatio':\n        value = Math.max(1, Math.min(21, Math.round(value * 10) / 10));\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n      case 'rows':\n      case 'cols':\n        if (!value && value !== 0) {\n          throw new Error(`${key} must be numeric, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n}\n\nfunction isCursorStyle(value: unknown): value is CursorStyle {\n  return value === 'block' || value === 'underline' || value === 'bar';\n}\n", "/**\n * Copyright (c) 2022 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, IOscLinkService } from 'common/services/Services';\nimport { IMarker, IOscLinkData } from 'common/Types';\n\nexport class OscLinkService implements IOscLinkService {\n  public serviceBrand: any;\n\n  private _nextId = 1;\n\n  /**\n   * A map of the link key to link entry. This is used to add additional lines to links with ids.\n   */\n  private _entriesWithId: Map<string, IOscLinkEntryWithId> = new Map();\n\n  /**\n   * A map of the link id to the link entry. The \"link id\" (number) which is the numberic\n   * representation of a unique link should not be confused with \"id\" (string) which comes in with\n   * `id=` in the OSC link's properties.\n   */\n  private _dataByLinkId: Map<number, IOscLinkEntryNoId | IOscLinkEntryWithId> = new Map();\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n  }\n\n  public registerLink(data: IOscLinkData): number {\n    const buffer = this._bufferService.buffer;\n\n    // Links with no id will only ever be registered a single time\n    if (data.id === undefined) {\n      const marker = buffer.addMarker(buffer.ybase + buffer.y);\n      const entry: IOscLinkEntryNoId = {\n        data,\n        id: this._nextId++,\n        lines: [marker]\n      };\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n      this._dataByLinkId.set(entry.id, entry);\n      return entry.id;\n    }\n\n    // Add the line to the link if it already exists\n    const castData = data as Required<IOscLinkData>;\n    const key = this._getEntryIdKey(castData);\n    const match = this._entriesWithId.get(key);\n    if (match) {\n      this.addLineToLink(match.id, buffer.ybase + buffer.y);\n      return match.id;\n    }\n\n    // Create the link\n    const marker = buffer.addMarker(buffer.ybase + buffer.y);\n    const entry: IOscLinkEntryWithId = {\n      id: this._nextId++,\n      key: this._getEntryIdKey(castData),\n      data: castData,\n      lines: [marker]\n    };\n    marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    this._entriesWithId.set(entry.key, entry);\n    this._dataByLinkId.set(entry.id, entry);\n    return entry.id;\n  }\n\n  public addLineToLink(linkId: number, y: number): void {\n    const entry = this._dataByLinkId.get(linkId);\n    if (!entry) {\n      return;\n    }\n    if (entry.lines.every(e => e.line !== y)) {\n      const marker = this._bufferService.buffer.addMarker(y);\n      entry.lines.push(marker);\n      marker.onDispose(() => this._removeMarkerFromLink(entry, marker));\n    }\n  }\n\n  public getLinkData(linkId: number): IOscLinkData | undefined {\n    return this._dataByLinkId.get(linkId)?.data;\n  }\n\n  private _getEntryIdKey(linkData: Required<IOscLinkData>): string {\n    return `${linkData.id};;${linkData.uri}`;\n  }\n\n  private _removeMarkerFromLink(entry: IOscLinkEntryNoId | IOscLinkEntryWithId, marker: IMarker): void {\n    const index = entry.lines.indexOf(marker);\n    if (index === -1) {\n      return;\n    }\n    entry.lines.splice(index, 1);\n    if (entry.lines.length === 0) {\n      if (entry.data.id !== undefined) {\n        this._entriesWithId.delete((entry as IOscLinkEntryWithId).key);\n      }\n      this._dataByLinkId.delete(entry.id);\n    }\n  }\n}\n\ninterface IOscLinkEntry<T extends IOscLinkData> {\n  data: T;\n  id: number;\n  lines: IMarker[];\n}\n\ninterface IOscLinkEntryNoId extends IOscLinkEntry<IOscLinkData> {\n}\n\ninterface IOscLinkEntryWithId extends IOscLinkEntry<Required<IOscLinkData>> {\n  key: string;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator: any = function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent, IEventEmitter } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType, ICharset, IWindowOptions, IModes, IAttributeData, ScrollSource, IDisposable, IColor, CursorStyle, IOscLinkData } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDecorationOptions, IDecoration, ILinkHandler } from 'xterm';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: undefined;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n  isUserScrolling: boolean;\n  onResize: IEvent<{ cols: number, rows: number }>;\n  onScroll: IEvent<number>;\n  scroll(eraseAttr: IAttributeData, isWrapped?: boolean): void;\n  scrollToBottom(): void;\n  scrollToTop(): void;\n  scrollToLine(line: number): void;\n  scrollLines(disp: number, suppressScrollEvent?: boolean, source?: ScrollSource): void;\n  scrollPages(pageCount: number): void;\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  areMouseEventsActive: boolean;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): { [event: string]: boolean };\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: undefined;\n\n  /**\n   * Initially the cursor will not be visible until the first time the terminal\n   * is focused.\n   */\n  isCursorInitialized: boolean;\n  isCursorHidden: boolean;\n\n  readonly modes: IModes;\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n  readonly onBinary: IEvent<string>;\n  readonly onRequestScrollToBottom: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasUserInput Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer if option scrollOnUserInput is true.\n   * - Fire the `onUserInput` event (so selection can be cleared).\n   */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n\n  /**\n   * Triggers the onBinary event in the public API.\n   * @param data The data that is being emitted.\n   */\n  triggerBinaryEvent(data: string): void;\n}\n\nexport const ICharsetService = createDecorator<ICharsetService>('CharsetService');\nexport interface ICharsetService {\n  serviceBrand: undefined;\n\n  charset: ICharset | undefined;\n  readonly glevel: number;\n\n  reset(): void;\n\n  /**\n   * Set the G level of the terminal.\n   * @param g\n   */\n  setgLevel(g: number): void;\n\n  /**\n   * Set the charset for the given G level of the terminal.\n   * @param g\n   * @param charset\n   */\n  setgCharset(g: number, charset: ICharset | undefined): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IBrandedService {\n  serviceBrand: undefined;\n}\n\ntype GetLeadingNonServiceArgs<Args> =\n  Args extends [...IBrandedService[]] ? []\n    : Args extends [infer A1, ...IBrandedService[]] ? [A1]\n      : Args extends [infer A1, infer A2, ...IBrandedService[]] ? [A1, A2]\n        : Args extends [infer A1, infer A2, infer A3, ...IBrandedService[]] ? [A1, A2, A3]\n          : Args extends [infer A1, infer A2, infer A3, infer A4, ...IBrandedService[]] ? [A1, A2, A3, A4]\n            : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, ...IBrandedService[]] ? [A1, A2, A3, A4, A5]\n              : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6]\n                : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7]\n                  : Args extends [infer A1, infer A2, infer A3, infer A4, infer A5, infer A6, infer A7, infer A8, ...IBrandedService[]] ? [A1, A2, A3, A4, A5, A6, A7, A8]\n                    : never;\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  serviceBrand: undefined;\n\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n  getService<T>(id: IServiceIdentifier<T>): T | undefined;\n  createInstance<Ctor extends new (...args: any[]) => any, R extends InstanceType<Ctor>>(t: Ctor, ...args: GetLeadingNonServiceArgs<ConstructorParameters<Ctor>>): R;\n}\n\nexport enum LogLevelEnum {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: undefined;\n\n  logLevel: LogLevelEnum;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: undefined;\n\n  /**\n   * Read only access to the raw options object, this is an internal-only fast path for accessing\n   * single options without any validation as we trust TypeScript to enforce correct usage\n   * internally.\n   */\n  readonly rawOptions: Required<ITerminalOptions>;\n\n  /**\n   * Options as exposed through the public API, this property uses getters and setters with\n   * validation which makes it safer but slower. {@link rawOptions} should be used for pretty much\n   * all internal usage for performance reasons.\n   */\n  readonly options: Required<ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when any option changes.\n   */\n  readonly onOptionChange: IEvent<keyof ITerminalOptions>;\n\n  /**\n   * Adds an event listener for when a specific option changes, this is a convenience method that is\n   * preferred over {@link onOptionChange} when only a single option is being listened to.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onSpecificOptionChange<T extends keyof ITerminalOptions>(key: T, listener: (arg1: Required<ITerminalOptions>[T]) => any): IDisposable;\n\n  /**\n   * Adds an event listener for when a set of specific options change, this is a convenience method\n   * that is preferred over {@link onOptionChange} when multiple options are being listened to and\n   * handled the same way.\n   */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  onMultipleOptionChange(keys: (keyof ITerminalOptions)[], listener: () => any): IDisposable;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900' | number;\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\n\nexport interface ITerminalOptions {\n  allowProposedApi?: boolean;\n  allowTransparency?: boolean;\n  altClickMovesCursor?: boolean;\n  cols?: number;\n  convertEol?: boolean;\n  cursorBlink?: boolean;\n  cursorStyle?: CursorStyle;\n  cursorWidth?: number;\n  customGlyphs?: boolean;\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'none' | 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  linkHandler?: ILinkHandler | null;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  minimumContrastRatio?: number;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollOnUserInput?: boolean;\n  scrollSensitivity?: number;\n  smoothScrollDuration?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  windowOptions?: IWindowOptions;\n  wordSeparator?: string;\n  overviewRulerWidth?: number;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  termName: string;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selectionForeground?: string;\n  selectionBackground?: string;\n  selectionInactiveBackground?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n  extendedAnsi?: string[];\n}\n\nexport const IOscLinkService = createDecorator<IOscLinkService>('OscLinkService');\nexport interface IOscLinkService {\n  serviceBrand: undefined;\n  /**\n   * Registers a link to the service, returning the link ID. The link data is managed by this\n   * service and will be freed when this current cursor position is trimmed off the buffer.\n   */\n  registerLink(linkData: IOscLinkData): number;\n  /**\n   * Adds a line to a link if needed.\n   */\n  addLineToLink(linkId: number, y: number): void;\n  /** Get the link data associated with a link ID. */\n  getLinkData(linkId: number): IOscLinkData | undefined;\n}\n\nexport const IUnicodeService = createDecorator<IUnicodeService>('UnicodeService');\nexport interface IUnicodeService {\n  serviceBrand: undefined;\n  /** Register an Unicode version provider. */\n  register(provider: IUnicodeVersionProvider): void;\n  /** Registered Unicode versions. */\n  readonly versions: string[];\n  /** Currently active version. */\n  activeVersion: string;\n  /** Event triggered, when activate version changed. */\n  readonly onChange: IEvent<string>;\n\n  /**\n   * Unicode version dependent\n   */\n  wcwidth(codepoint: number): number;\n  getStringCellWidth(s: string): number;\n}\n\nexport interface IUnicodeVersionProvider {\n  readonly version: string;\n  wcwidth(ucs: number): 0 | 1 | 2;\n}\n\nexport const IDecorationService = createDecorator<IDecorationService>('DecorationService');\nexport interface IDecorationService extends IDisposable {\n  serviceBrand: undefined;\n  readonly decorations: IterableIterator<IInternalDecoration>;\n  readonly onDecorationRegistered: IEvent<IInternalDecoration>;\n  readonly onDecorationRemoved: IEvent<IInternalDecoration>;\n  registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined;\n  reset(): void;\n  /**\n   * Trigger a callback over the decoration at a cell (in no particular order). This uses a callback\n   * instead of an iterator as it's typically used in hot code paths.\n   */\n  forEachDecorationAtCell(x: number, line: number, layer: 'bottom' | 'top' | undefined, callback: (decoration: IInternalDecoration) => void): void;\n}\nexport interface IInternalDecoration extends IDecoration {\n  readonly options: IDecorationOptions;\n  readonly backgroundColorRGB: IColor | undefined;\n  readonly foregroundColorRGB: IColor | undefined;\n  readonly onRenderEmitter: IEventEmitter<HTMLElement>;\n}\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IUnicodeService, IUnicodeVersionProvider } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { UnicodeV6 } from 'common/input/UnicodeV6';\n\nexport class UnicodeService implements IUnicodeService {\n  public serviceBrand: any;\n\n  private _providers: {[key: string]: IUnicodeVersionProvider} = Object.create(null);\n  private _active: string = '';\n  private _activeProvider: IUnicodeVersionProvider;\n\n  private readonly _onChange = new EventEmitter<string>();\n  public readonly onChange = this._onChange.event;\n\n  constructor() {\n    const defaultProvider = new UnicodeV6();\n    this.register(defaultProvider);\n    this._active = defaultProvider.version;\n    this._activeProvider = defaultProvider;\n  }\n\n  public dispose(): void {\n    this._onChange.dispose();\n  }\n\n  public get versions(): string[] {\n    return Object.keys(this._providers);\n  }\n\n  public get activeVersion(): string {\n    return this._active;\n  }\n\n  public set activeVersion(version: string) {\n    if (!this._providers[version]) {\n      throw new Error(`unknown Unicode version \"${version}\"`);\n    }\n    this._active = version;\n    this._activeProvider = this._providers[version];\n    this._onChange.fire(version);\n  }\n\n  public register(provider: IUnicodeVersionProvider): void {\n    this._providers[provider.version] = provider;\n  }\n\n  /**\n   * Unicode version dependent interface.\n   */\n  public wcwidth(num: number): number {\n    return this._activeProvider.wcwidth(num);\n  }\n\n  public getStringCellWidth(s: string): number {\n    let result = 0;\n    const length = s.length;\n    for (let i = 0; i < length; ++i) {\n      let code = s.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          // this should not happen with strings retrieved from\n          // Buffer.translateToString as it converts from UTF-32\n          // and therefore always should contain the second part\n          // for any other string we still have to handle it somehow:\n          // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n          return result + this.wcwidth(code);\n        }\n        const second = s.charCodeAt(i);\n        // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n        // otherwise treat them independently (UCS-2 behavior)\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          result += this.wcwidth(second);\n        }\n      }\n      result += this.wcwidth(code);\n    }\n    return result;\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, IMarker, IDisposable, ILocalizableStrings, ITerminalAddon, IBufferNamespace as IBufferNamespaceApi, IParser, ILinkProvider, IUnicodeHandling, IModes, IDecorationOptions, IDecoration } from 'xterm';\nimport { IBufferRange, ITerminal } from 'browser/Types';\nimport { Terminal as TerminalCore } from 'browser/Terminal';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { ParserApi } from 'common/public/ParserApi';\nimport { UnicodeApi } from 'common/public/UnicodeApi';\nimport { AddonManager } from 'common/public/AddonManager';\nimport { BufferNamespaceApi } from 'common/public/BufferNamespaceApi';\nimport { ITerminalOptions } from 'common/Types';\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser | undefined;\n  private _buffer: BufferNamespaceApi | undefined;\n  private _publicOptions: Required<ITerminalOptions>;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n\n    this._publicOptions = { ... this._core.options };\n    const getter = (propName: string): any => {\n      return this._core.options[propName];\n    };\n    const setter = (propName: string, value: any): void => {\n      this._checkReadonlyOptions(propName);\n      this._core.options[propName] = value;\n    };\n\n    for (const propName in this._core.options) {\n      const desc = {\n        get: getter.bind(this, propName),\n        set: setter.bind(this, propName)\n      };\n      Object.defineProperty(this._publicOptions, propName, desc);\n    }\n  }\n\n  private _checkReadonlyOptions(propName: string): void {\n    // Throw an error if any constructor only option is modified\n    // from terminal.options\n    // Modifications from anywhere else are allowed\n    if (CONSTRUCTOR_ONLY_OPTIONS.includes(propName)) {\n      throw new Error(`Option \"${propName}\" can only be set in the constructor`);\n    }\n  }\n\n  private _checkProposedApi(): void {\n    if (!this._core.optionsService.rawOptions.allowProposedApi) {\n      throw new Error('You must set the allowProposedApi option to true to use proposed API');\n    }\n  }\n\n  public get onBell(): IEvent<void> { return this._core.onBell; }\n  public get onBinary(): IEvent<string> { return this._core.onBinary; }\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onWriteParsed(): IEvent<void> { return this._core.onWriteParsed; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get unicode(): IUnicodeHandling {\n    this._checkProposedApi();\n    return new UnicodeApi(this._core);\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferNamespaceApi {\n    if (!this._buffer) {\n      this._buffer = new BufferNamespaceApi(this._core);\n    }\n    return this._buffer;\n  }\n  public get markers(): ReadonlyArray<IMarker> {\n    this._checkProposedApi();\n    return this._core.markers;\n  }\n  public get modes(): IModes {\n    const m = this._core.coreService.decPrivateModes;\n    let mouseTrackingMode: 'none' | 'x10' | 'vt200' | 'drag' | 'any' = 'none';\n    switch (this._core.coreMouseService.activeProtocol) {\n      case 'X10': mouseTrackingMode = 'x10'; break;\n      case 'VT200': mouseTrackingMode = 'vt200'; break;\n      case 'DRAG': mouseTrackingMode = 'drag'; break;\n      case 'ANY': mouseTrackingMode = 'any'; break;\n    }\n    return {\n      applicationCursorKeysMode: m.applicationCursorKeys,\n      applicationKeypadMode: m.applicationKeypad,\n      bracketedPasteMode: m.bracketedPasteMode,\n      insertMode: this._core.coreService.modes.insertMode,\n      mouseTrackingMode: mouseTrackingMode,\n      originMode: m.origin,\n      reverseWraparoundMode: m.reverseWraparound,\n      sendFocusMode: m.sendFocus,\n      wraparoundMode: m.wraparound\n    };\n  }\n  public get options(): Required<ITerminalOptions> {\n    return this._publicOptions;\n  }\n  public set options(options: ITerminalOptions) {\n    for (const propName in options) {\n      this._publicOptions[propName] = options[propName];\n    }\n  }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkProvider(linkProvider: ILinkProvider): IDisposable {\n    return this._core.registerLinkProvider(linkProvider);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    this._checkProposedApi();\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._checkProposedApi();\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public registerMarker(cursorYOffset: number = 0): IMarker | undefined {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public registerDecoration(decorationOptions: IDecorationOptions): IDecoration | undefined {\n    this._checkProposedApi();\n    this._verifyPositiveIntegers(decorationOptions.x ?? 0, decorationOptions.width ?? 0, decorationOptions.height ?? 0);\n    return this._core.registerDecoration(decorationOptions);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): IBufferRange | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public clearTextureAtlas(): void {\n    this._core.clearTextureAtlas();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    }\n  }\n\n  private _verifyPositiveIntegers(...values: number[]): void {\n    for (const value of values) {\n      if (value && (value === Infinity || isNaN(value) || value % 1 !== 0 || value < 0)) {\n        throw new Error('This API only accepts positive integers');\n      }\n    }\n  }\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FitAddon\"] = factory();\n\telse\n\t\troot[\"FitAddon\"] = factory();\n})(self, function() {\nreturn ", "/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon } from 'xterm';\nimport { IRenderDimensions } from 'browser/renderer/shared/Types';\n\ninterface ITerminalDimensions {\n  /**\n   * The number of rows in the terminal.\n   */\n  rows: number;\n\n  /**\n   * The number of columns in the terminal.\n   */\n  cols: number;\n}\n\nconst MINIMUM_COLS = 2;\nconst MINIMUM_ROWS = 1;\n\nexport class FitAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n\n  constructor() {}\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n  }\n\n  public dispose(): void {}\n\n  public fit(): void {\n    const dims = this.proposeDimensions();\n    if (!dims || !this._terminal || isNaN(dims.cols) || isNaN(dims.rows)) {\n      return;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n\n    // Force a full render\n    if (this._terminal.rows !== dims.rows || this._terminal.cols !== dims.cols) {\n      core._renderService.clear();\n      this._terminal.resize(dims.cols, dims.rows);\n    }\n  }\n\n  public proposeDimensions(): ITerminalDimensions | undefined {\n    if (!this._terminal) {\n      return undefined;\n    }\n\n    if (!this._terminal.element || !this._terminal.element.parentElement) {\n      return undefined;\n    }\n\n    // TODO: Remove reliance on private API\n    const core = (this._terminal as any)._core;\n    const dims: IRenderDimensions = core._renderService.dimensions;\n\n    if (dims.css.cell.width === 0 || dims.css.cell.height === 0) {\n      return undefined;\n    }\n\n    const scrollbarWidth = this._terminal.options.scrollback === 0 ?\n      0 : core.viewport.scrollBarWidth;\n\n    const parentElementStyle = window.getComputedStyle(this._terminal.element.parentElement);\n    const parentElementHeight = parseInt(parentElementStyle.getPropertyValue('height'));\n    const parentElementWidth = Math.max(0, parseInt(parentElementStyle.getPropertyValue('width')));\n    const elementStyle = window.getComputedStyle(this._terminal.element);\n    const elementPadding = {\n      top: parseInt(elementStyle.getPropertyValue('padding-top')),\n      bottom: parseInt(elementStyle.getPropertyValue('padding-bottom')),\n      right: parseInt(elementStyle.getPropertyValue('padding-right')),\n      left: parseInt(elementStyle.getPropertyValue('padding-left'))\n    };\n    const elementPaddingVer = elementPadding.top + elementPadding.bottom;\n    const elementPaddingHor = elementPadding.right + elementPadding.left;\n    const availableHeight = parentElementHeight - elementPaddingVer;\n    const availableWidth = parentElementWidth - elementPaddingHor - scrollbarWidth;\n    const geometry = {\n      cols: Math.max(MINIMUM_COLS, Math.floor(availableWidth / dims.css.cell.width)),\n      rows: Math.max(MINIMUM_ROWS, Math.floor(availableHeight / dims.css.cell.height))\n    };\n    return geometry;\n  }\n}\n", "(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"WebLinksAddon\"] = factory();\n\telse\n\t\troot[\"WebLinksAddon\"] = factory();\n})(self, function() {\nreturn ", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkProvider, ILink, Terminal, IViewportRange, IBufferLine } from 'xterm';\n\nexport interface ILinkProviderOptions {\n  hover?(event: MouseEvent, text: string, location: IViewportRange): void;\n  leave?(event: MouseEvent, text: string): void;\n  urlRegex?: RegExp;\n}\n\nexport class WebLinkProvider implements ILinkProvider {\n\n  constructor(\n    private readonly _terminal: Terminal,\n    private readonly _regex: RegExp,\n    private readonly _handler: (event: MouseEvent, uri: string) => void,\n    private readonly _options: ILinkProviderOptions = {}\n  ) {\n\n  }\n\n  public provideLinks(y: number, callback: (links: ILink[] | undefined) => void): void {\n    const links = LinkComputer.computeLink(y, this._regex, this._terminal, this._handler);\n    callback(this._addCallbacks(links));\n  }\n\n  private _addCallbacks(links: ILink[]): ILink[] {\n    return links.map(link => {\n      link.leave = this._options.leave;\n      link.hover = (event: MouseEvent, uri: string): void => {\n        if (this._options.hover) {\n          const { range } = link;\n          this._options.hover(event, uri, range);\n        }\n      };\n      return link;\n    });\n  }\n}\n\nexport class LinkComputer {\n  public static computeLink(y: number, regex: RegExp, terminal: Terminal, activate: (event: MouseEvent, uri: string) => void): ILink[] {\n    const rex = new RegExp(regex.source, (regex.flags || '') + 'g');\n\n    const [lines, startLineIndex] = LinkComputer._getWindowedLineStrings(y - 1, terminal);\n    const line = lines.join('');\n\n    let match;\n    const result: ILink[] = [];\n\n    while (match = rex.exec(line)) {\n      const text = match[0];\n\n      // check via URL if the matched text would form a proper url\n      // NOTE: This outsources the ugly url parsing to the browser.\n      // To avoid surprising auto expansion from URL we additionally\n      // check afterwards if the provided string resembles the parsed\n      // one close enough:\n      // - decodeURI  decode path segement back to byte repr\n      //              to detect unicode auto conversion correctly\n      // - append /   also match domain urls w'o any path notion\n      try {\n        const url = new URL(text);\n        const urlText = decodeURI(url.toString());\n        if (text !== urlText && text + '/' !== urlText) {\n          continue;\n        }\n      } catch (e) {\n        continue;\n      }\n\n      // map string positions back to buffer positions\n      // values are 0-based right side excluding\n      const [startY, startX] = LinkComputer._mapStrIdx(terminal, startLineIndex, 0, match.index);\n      const [endY, endX] = LinkComputer._mapStrIdx(terminal, startY, startX, text.length);\n\n      if (startY === -1 || startX === -1 || endY === -1 || endX === -1) {\n        continue;\n      }\n\n      // range expects values 1-based right side including, thus +1 except for endX\n      const range = {\n        start: {\n          x: startX + 1,\n          y: startY + 1\n        },\n        end: {\n          x: endX,\n          y: endY + 1\n        }\n      };\n\n      result.push({ range, text, activate });\n    }\n\n    return result;\n  }\n\n  /**\n   * Get wrapped content lines for the current line index.\n   * The top/bottom line expansion stops at whitespaces or length > 2048.\n   * Returns an array with line strings and the top line index.\n   *\n   * NOTE: We pull line strings with trimRight=true on purpose to make sure\n   * to correctly match urls with early wrapped wide chars. This corrupts the string index\n   * for 1:1 backmapping to buffer positions, thus needs an additional correction in _mapStrIdx.\n   */\n  private static _getWindowedLineStrings(lineIndex: number, terminal: Terminal): [string[], number] {\n    let line: IBufferLine | undefined;\n    let topIdx = lineIndex;\n    let bottomIdx = lineIndex;\n    let length = 0;\n    let content = '';\n    const lines: string[] = [];\n\n    if ((line = terminal.buffer.active.getLine(lineIndex))) {\n      const currentContent = line.translateToString(true);\n\n      // expand top, stop on whitespaces or length > 2048\n      if (line.isWrapped && currentContent[0] !== ' ') {\n        length = 0;\n        while ((line = terminal.buffer.active.getLine(--topIdx)) && length < 2048) {\n          content = line.translateToString(true);\n          length += content.length;\n          lines.push(content);\n          if (!line.isWrapped || content.indexOf(' ') !== -1) {\n            break;\n          }\n        }\n        lines.reverse();\n      }\n\n      // append current line\n      lines.push(currentContent);\n\n      // expand bottom, stop on whitespaces or length > 2048\n      length = 0;\n      while ((line = terminal.buffer.active.getLine(++bottomIdx)) && line.isWrapped && length < 2048) {\n        content = line.translateToString(true);\n        length += content.length;\n        lines.push(content);\n        if (content.indexOf(' ') !== -1) {\n          break;\n        }\n      }\n    }\n    return [lines, topIdx];\n  }\n\n  /**\n   * Map a string index back to buffer positions.\n   * Returns buffer position as [lineIndex, columnIndex] 0-based,\n   * or [-1, -1] in case the lookup ran into a non-existing line.\n   */\n  private static _mapStrIdx(terminal: Terminal, lineIndex: number, rowIndex: number, stringIndex: number): [number, number] {\n    const buf = terminal.buffer.active;\n    const cell = buf.getNullCell();\n    let start = rowIndex;\n    while (stringIndex) {\n      const line = buf.getLine(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      for (let i = start; i < line.length; ++i) {\n        line.getCell(i, cell);\n        const chars = cell.getChars();\n        const width = cell.getWidth();\n        if (width) {\n          stringIndex -= chars.length || 1;\n\n          // correct stringIndex for early wrapped wide chars:\n          // - currently only happens at last cell\n          // - cells to the right are reset with chars='' and width=1 in InputHandler.print\n          // - follow-up line must be wrapped and contain wide char at first cell\n          // --> if all these conditions are met, correct stringIndex by +1\n          if (i === line.length - 1 && chars === '') {\n            const line = buf.getLine(lineIndex + 1);\n            if (line && line.isWrapped) {\n              line.getCell(0, cell);\n              if (cell.getWidth() === 2) {\n                stringIndex += 1;\n              }\n            }\n          }\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n      start = 0;\n    }\n    return [lineIndex, start];\n  }\n}\n", "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n", "/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal, ITerminalAddon, IDisposable } from 'xterm';\nimport { ILinkProviderOptions, WebLinkProvider } from './WebLinkProvider';\n\n// consider everthing starting with http:// or https://\n// up to first whitespace, `\"` or `'` as url\n// NOTE: The repeated end clause is needed to not match a dangling `:`\n// resembling the old (...)*([^:\"\\'\\\\s]) final path clause\n// additionally exclude early + final:\n// - unsafe from rfc3986: !*'()\n// - unsafe chars from rfc1738: {}|\\^~[]` (minus [] as we need them for ipv6 adresses, also allow ~)\n// also exclude as finals:\n// - final interpunction like ,.!?\n// - any sort of brackets <>()[]{} (not spec conform, but often used to enclose urls)\n// - unsafe chars from rfc1738: {}|\\^~[]`\nconst strictUrlRegex = /https?:[/]{2}[^\\s\"'!*(){}|\\\\\\^<>`]*[^\\s\"':,.!?{}|\\\\\\^~\\[\\]`()<>]/;\n\n\nfunction handleLink(event: MouseEvent, uri: string): void {\n  const newWindow = window.open();\n  if (newWindow) {\n    try {\n      newWindow.opener = null;\n    } catch {\n      // no-op, Electron can throw\n    }\n    newWindow.location.href = uri;\n  } else {\n    console.warn('Opening link blocked as opener could not be cleared');\n  }\n}\n\nexport class WebLinksAddon implements ITerminalAddon {\n  private _terminal: Terminal | undefined;\n  private _linkProvider: IDisposable | undefined;\n\n  constructor(\n    private _handler: (event: MouseEvent, uri: string) => void = handleLink,\n    private _options: ILinkProviderOptions = {}\n  ) {\n  }\n\n  public activate(terminal: Terminal): void {\n    this._terminal = terminal;\n    const options = this._options as ILinkProviderOptions;\n    const regex = options.urlRegex || strictUrlRegex;\n    this._linkProvider = this._terminal.registerLinkProvider(new WebLinkProvider(this._terminal, regex, this._handler, options));\n  }\n\n  public dispose(): void {\n    this._linkProvider?.dispose();\n  }\n}\n", "// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n\"use strict\";\n\n(() => {\n\tconst enosys = () => {\n\t\tconst err = new Error(\"not implemented\");\n\t\terr.code = \"ENOSYS\";\n\t\treturn err;\n\t};\n\n\tif (!globalThis.fs) {\n\t\tlet outputBuf = \"\";\n\t\tglobalThis.fs = {\n\t\t\tconstants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1, O_DIRECTORY: -1 }, // unused\n\t\t\twriteSync(fd, buf) {\n\t\t\t\toutputBuf += decoder.decode(buf);\n\t\t\t\tconst nl = outputBuf.lastIndexOf(\"\\n\");\n\t\t\t\tif (nl != -1) {\n\t\t\t\t\tconsole.log(outputBuf.substring(0, nl));\n\t\t\t\t\toutputBuf = outputBuf.substring(nl + 1);\n\t\t\t\t}\n\t\t\t\treturn buf.length;\n\t\t\t},\n\t\t\twrite(fd, buf, offset, length, position, callback) {\n\t\t\t\tif (offset !== 0 || length !== buf.length || position !== null) {\n\t\t\t\t\tcallback(enosys());\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst n = this.writeSync(fd, buf);\n\t\t\t\tcallback(null, n);\n\t\t\t},\n\t\t\tchmod(path, mode, callback) { callback(enosys()); },\n\t\t\tchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tclose(fd, callback) { callback(enosys()); },\n\t\t\tfchmod(fd, mode, callback) { callback(enosys()); },\n\t\t\tfchown(fd, uid, gid, callback) { callback(enosys()); },\n\t\t\tfstat(fd, callback) { callback(enosys()); },\n\t\t\tfsync(fd, callback) { callback(null); },\n\t\t\tftruncate(fd, length, callback) { callback(enosys()); },\n\t\t\tlchown(path, uid, gid, callback) { callback(enosys()); },\n\t\t\tlink(path, link, callback) { callback(enosys()); },\n\t\t\tlstat(path, callback) { callback(enosys()); },\n\t\t\tmkdir(path, perm, callback) { callback(enosys()); },\n\t\t\topen(path, flags, mode, callback) { callback(enosys()); },\n\t\t\tread(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n\t\t\treaddir(path, callback) { callback(enosys()); },\n\t\t\treadlink(path, callback) { callback(enosys()); },\n\t\t\trename(from, to, callback) { callback(enosys()); },\n\t\t\trmdir(path, callback) { callback(enosys()); },\n\t\t\tstat(path, callback) { callback(enosys()); },\n\t\t\tsymlink(path, link, callback) { callback(enosys()); },\n\t\t\ttruncate(path, length, callback) { callback(enosys()); },\n\t\t\tunlink(path, callback) { callback(enosys()); },\n\t\t\tutimes(path, atime, mtime, callback) { callback(enosys()); },\n\t\t};\n\t}\n\n\tif (!globalThis.process) {\n\t\tglobalThis.process = {\n\t\t\tgetuid() { return -1; },\n\t\t\tgetgid() { return -1; },\n\t\t\tgeteuid() { return -1; },\n\t\t\tgetegid() { return -1; },\n\t\t\tgetgroups() { throw enosys(); },\n\t\t\tpid: -1,\n\t\t\tppid: -1,\n\t\t\tumask() { throw enosys(); },\n\t\t\tcwd() { throw enosys(); },\n\t\t\tchdir() { throw enosys(); },\n\t\t}\n\t}\n\n\tif (!globalThis.path) {\n\t\tglobalThis.path = {\n\t\t\tresolve(...pathSegments) {\n\t\t\t\treturn pathSegments.join(\"/\");\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!globalThis.crypto) {\n\t\tthrow new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\n\t}\n\n\tif (!globalThis.performance) {\n\t\tthrow new Error(\"globalThis.performance is not available, polyfill required (performance.now only)\");\n\t}\n\n\tif (!globalThis.TextEncoder) {\n\t\tthrow new Error(\"globalThis.TextEncoder is not available, polyfill required\");\n\t}\n\n\tif (!globalThis.TextDecoder) {\n\t\tthrow new Error(\"globalThis.TextDecoder is not available, polyfill required\");\n\t}\n\n\tconst encoder = new TextEncoder(\"utf-8\");\n\tconst decoder = new TextDecoder(\"utf-8\");\n\n\tglobalThis.Go = class {\n\t\tconstructor() {\n\t\t\tthis.argv = [\"js\"];\n\t\t\tthis.env = {};\n\t\t\tthis.exit = (code) => {\n\t\t\t\tif (code !== 0) {\n\t\t\t\t\tconsole.warn(\"exit code:\", code);\n\t\t\t\t}\n\t\t\t};\n\t\t\tthis._exitPromise = new Promise((resolve) => {\n\t\t\t\tthis._resolveExitPromise = resolve;\n\t\t\t});\n\t\t\tthis._pendingEvent = null;\n\t\t\tthis._scheduledTimeouts = new Map();\n\t\t\tthis._nextCallbackTimeoutID = 1;\n\n\t\t\tconst setInt64 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t\tthis.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n\t\t\t}\n\n\t\t\tconst setInt32 = (addr, v) => {\n\t\t\t\tthis.mem.setUint32(addr + 0, v, true);\n\t\t\t}\n\n\t\t\tconst getInt64 = (addr) => {\n\t\t\t\tconst low = this.mem.getUint32(addr + 0, true);\n\t\t\t\tconst high = this.mem.getInt32(addr + 4, true);\n\t\t\t\treturn low + high * 4294967296;\n\t\t\t}\n\n\t\t\tconst loadValue = (addr) => {\n\t\t\t\tconst f = this.mem.getFloat64(addr, true);\n\t\t\t\tif (f === 0) {\n\t\t\t\t\treturn undefined;\n\t\t\t\t}\n\t\t\t\tif (!isNaN(f)) {\n\t\t\t\t\treturn f;\n\t\t\t\t}\n\n\t\t\t\tconst id = this.mem.getUint32(addr, true);\n\t\t\t\treturn this._values[id];\n\t\t\t}\n\n\t\t\tconst storeValue = (addr, v) => {\n\t\t\t\tconst nanHead = 0x7FF80000;\n\n\t\t\t\tif (typeof v === \"number\" && v !== 0) {\n\t\t\t\t\tif (isNaN(v)) {\n\t\t\t\t\t\tthis.mem.setUint32(addr + 4, nanHead, true);\n\t\t\t\t\t\tthis.mem.setUint32(addr, 0, true);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tthis.mem.setFloat64(addr, v, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (v === undefined) {\n\t\t\t\t\tthis.mem.setFloat64(addr, 0, true);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet id = this._ids.get(v);\n\t\t\t\tif (id === undefined) {\n\t\t\t\t\tid = this._idPool.pop();\n\t\t\t\t\tif (id === undefined) {\n\t\t\t\t\t\tid = this._values.length;\n\t\t\t\t\t}\n\t\t\t\t\tthis._values[id] = v;\n\t\t\t\t\tthis._goRefCounts[id] = 0;\n\t\t\t\t\tthis._ids.set(v, id);\n\t\t\t\t}\n\t\t\t\tthis._goRefCounts[id]++;\n\t\t\t\tlet typeFlag = 0;\n\t\t\t\tswitch (typeof v) {\n\t\t\t\t\tcase \"object\":\n\t\t\t\t\t\tif (v !== null) {\n\t\t\t\t\t\t\ttypeFlag = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"string\":\n\t\t\t\t\t\ttypeFlag = 2;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"symbol\":\n\t\t\t\t\t\ttypeFlag = 3;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase \"function\":\n\t\t\t\t\t\ttypeFlag = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tthis.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n\t\t\t\tthis.mem.setUint32(addr, id, true);\n\t\t\t}\n\n\t\t\tconst loadSlice = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn new Uint8Array(this._inst.exports.mem.buffer, array, len);\n\t\t\t}\n\n\t\t\tconst loadSliceOfValues = (addr) => {\n\t\t\t\tconst array = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\tconst a = new Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\ta[i] = loadValue(array + i * 8);\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}\n\n\t\t\tconst loadString = (addr) => {\n\t\t\t\tconst saddr = getInt64(addr + 0);\n\t\t\t\tconst len = getInt64(addr + 8);\n\t\t\t\treturn decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n\t\t\t}\n\n\t\t\tconst testCallExport = (a, b) => {\n\t\t\t\tthis._inst.exports.testExport0();\n\t\t\t\treturn this._inst.exports.testExport(a, b);\n\t\t\t}\n\n\t\t\tconst timeOrigin = Date.now() - performance.now();\n\t\t\tthis.importObject = {\n\t\t\t\t_gotest: {\n\t\t\t\t\tadd: (a, b) => a + b,\n\t\t\t\t\tcallExport: testCallExport,\n\t\t\t\t},\n\t\t\t\tgojs: {\n\t\t\t\t\t// Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n\t\t\t\t\t// may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n\t\t\t\t\t// function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n\t\t\t\t\t// This changes the SP, thus we have to update the SP used by the imported function.\n\n\t\t\t\t\t// func wasmExit(code int32)\n\t\t\t\t\t\"runtime.wasmExit\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst code = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tthis.exited = true;\n\t\t\t\t\t\tdelete this._inst;\n\t\t\t\t\t\tdelete this._values;\n\t\t\t\t\t\tdelete this._goRefCounts;\n\t\t\t\t\t\tdelete this._ids;\n\t\t\t\t\t\tdelete this._idPool;\n\t\t\t\t\t\tthis.exit(code);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n\t\t\t\t\t\"runtime.wasmWrite\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst fd = getInt64(sp + 8);\n\t\t\t\t\t\tconst p = getInt64(sp + 16);\n\t\t\t\t\t\tconst n = this.mem.getInt32(sp + 24, true);\n\t\t\t\t\t\tfs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func resetMemoryDataView()\n\t\t\t\t\t\"runtime.resetMemoryDataView\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func nanotime1() int64\n\t\t\t\t\t\"runtime.nanotime1\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func walltime() (sec int64, nsec int32)\n\t\t\t\t\t\"runtime.walltime\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst msec = (new Date).getTime();\n\t\t\t\t\t\tsetInt64(sp + 8, msec / 1000);\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func scheduleTimeoutEvent(delay int64) int32\n\t\t\t\t\t\"runtime.scheduleTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this._nextCallbackTimeoutID;\n\t\t\t\t\t\tthis._nextCallbackTimeoutID++;\n\t\t\t\t\t\tthis._scheduledTimeouts.set(id, setTimeout(\n\t\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\twhile (this._scheduledTimeouts.has(id)) {\n\t\t\t\t\t\t\t\t\t// for some reason Go failed to register the timeout event, log and try again\n\t\t\t\t\t\t\t\t\t// (temporary workaround for https://github.com/golang/go/issues/28975)\n\t\t\t\t\t\t\t\t\tconsole.warn(\"scheduleTimeoutEvent: missed timeout event\");\n\t\t\t\t\t\t\t\t\tthis._resume();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tgetInt64(sp + 8),\n\t\t\t\t\t\t));\n\t\t\t\t\t\tthis.mem.setInt32(sp + 16, id, true);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func clearTimeoutEvent(id int32)\n\t\t\t\t\t\"runtime.clearTimeoutEvent\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getInt32(sp + 8, true);\n\t\t\t\t\t\tclearTimeout(this._scheduledTimeouts.get(id));\n\t\t\t\t\t\tthis._scheduledTimeouts.delete(id);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func getRandomData(r []byte)\n\t\t\t\t\t\"runtime.getRandomData\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tcrypto.getRandomValues(loadSlice(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func finalizeRef(v ref)\n\t\t\t\t\t\"syscall/js.finalizeRef\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst id = this.mem.getUint32(sp + 8, true);\n\t\t\t\t\t\tthis._goRefCounts[id]--;\n\t\t\t\t\t\tif (this._goRefCounts[id] === 0) {\n\t\t\t\t\t\t\tconst v = this._values[id];\n\t\t\t\t\t\t\tthis._values[id] = null;\n\t\t\t\t\t\t\tthis._ids.delete(v);\n\t\t\t\t\t\t\tthis._idPool.push(id);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func stringVal(value string) ref\n\t\t\t\t\t\"syscall/js.stringVal\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, loadString(sp + 8));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueGet(v ref, p string) ref\n\t\t\t\t\t\"syscall/js.valueGet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\tstoreValue(sp + 32, result);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueSet(v ref, p string, x ref)\n\t\t\t\t\t\"syscall/js.valueSet\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueDelete(v ref, p string)\n\t\t\t\t\t\"syscall/js.valueDelete\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueIndex(v ref, i int) ref\n\t\t\t\t\t\"syscall/js.valueIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tstoreValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueSetIndex(v ref, i int, x ref)\n\t\t\t\t\t\"syscall/js.valueSetIndex\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tReflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueCall(v ref, m string, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueCall\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst m = Reflect.get(v, loadString(sp + 16));\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 32);\n\t\t\t\t\t\t\tconst result = Reflect.apply(m, v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 56, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 64, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInvoke(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueInvoke\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.apply(v, undefined, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueNew(v ref, args []ref) (ref, bool)\n\t\t\t\t\t\"syscall/js.valueNew\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tconst v = loadValue(sp + 8);\n\t\t\t\t\t\t\tconst args = loadSliceOfValues(sp + 16);\n\t\t\t\t\t\t\tconst result = Reflect.construct(v, args);\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, result);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tsp = this._inst.exports.getsp() >>> 0; // see comment above\n\t\t\t\t\t\t\tstoreValue(sp + 40, err);\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueLength(v ref) int\n\t\t\t\t\t\"syscall/js.valueLength\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tsetInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n\t\t\t\t\t},\n\n\t\t\t\t\t// valuePrepareString(v ref) (ref, int)\n\t\t\t\t\t\"syscall/js.valuePrepareString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = encoder.encode(String(loadValue(sp + 8)));\n\t\t\t\t\t\tstoreValue(sp + 16, str);\n\t\t\t\t\t\tsetInt64(sp + 24, str.length);\n\t\t\t\t\t},\n\n\t\t\t\t\t// valueLoadString(v ref, b []byte)\n\t\t\t\t\t\"syscall/js.valueLoadString\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst str = loadValue(sp + 8);\n\t\t\t\t\t\tloadSlice(sp + 16).set(str);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func valueInstanceOf(v ref, t ref) bool\n\t\t\t\t\t\"syscall/js.valueInstanceOf\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tthis.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToGo(dst []byte, src ref) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToGo\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadSlice(sp + 8);\n\t\t\t\t\t\tconst src = loadValue(sp + 32);\n\t\t\t\t\t\tif (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t// func copyBytesToJS(dst ref, src []byte) (int, bool)\n\t\t\t\t\t\"syscall/js.copyBytesToJS\": (sp) => {\n\t\t\t\t\t\tsp >>>= 0;\n\t\t\t\t\t\tconst dst = loadValue(sp + 8);\n\t\t\t\t\t\tconst src = loadSlice(sp + 16);\n\t\t\t\t\t\tif (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n\t\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 0);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst toCopy = src.subarray(0, dst.length);\n\t\t\t\t\t\tdst.set(toCopy);\n\t\t\t\t\t\tsetInt64(sp + 40, toCopy.length);\n\t\t\t\t\t\tthis.mem.setUint8(sp + 48, 1);\n\t\t\t\t\t},\n\n\t\t\t\t\t\"debug\": (value) => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tasync run(instance) {\n\t\t\tif (!(instance instanceof WebAssembly.Instance)) {\n\t\t\t\tthrow new Error(\"Go.run: WebAssembly.Instance expected\");\n\t\t\t}\n\t\t\tthis._inst = instance;\n\t\t\tthis.mem = new DataView(this._inst.exports.mem.buffer);\n\t\t\tthis._values = [ // JS values that Go currently has references to, indexed by reference id\n\t\t\t\tNaN,\n\t\t\t\t0,\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\tfalse,\n\t\t\t\tglobalThis,\n\t\t\t\tthis,\n\t\t\t];\n\t\t\tthis._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n\t\t\tthis._ids = new Map([ // mapping from JS values to reference ids\n\t\t\t\t[0, 1],\n\t\t\t\t[null, 2],\n\t\t\t\t[true, 3],\n\t\t\t\t[false, 4],\n\t\t\t\t[globalThis, 5],\n\t\t\t\t[this, 6],\n\t\t\t]);\n\t\t\tthis._idPool = [];   // unused ids that have been garbage collected\n\t\t\tthis.exited = false; // whether the Go program has exited\n\n\t\t\t// Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n\t\t\tlet offset = 4096;\n\n\t\t\tconst strPtr = (str) => {\n\t\t\t\tconst ptr = offset;\n\t\t\t\tconst bytes = encoder.encode(str + \"\\0\");\n\t\t\t\tnew Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n\t\t\t\toffset += bytes.length;\n\t\t\t\tif (offset % 8 !== 0) {\n\t\t\t\t\toffset += 8 - (offset % 8);\n\t\t\t\t}\n\t\t\t\treturn ptr;\n\t\t\t};\n\n\t\t\tconst argc = this.argv.length;\n\n\t\t\tconst argvPtrs = [];\n\t\t\tthis.argv.forEach((arg) => {\n\t\t\t\targvPtrs.push(strPtr(arg));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst keys = Object.keys(this.env).sort();\n\t\t\tkeys.forEach((key) => {\n\t\t\t\targvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n\t\t\t});\n\t\t\targvPtrs.push(0);\n\n\t\t\tconst argv = offset;\n\t\t\targvPtrs.forEach((ptr) => {\n\t\t\t\tthis.mem.setUint32(offset, ptr, true);\n\t\t\t\tthis.mem.setUint32(offset + 4, 0, true);\n\t\t\t\toffset += 8;\n\t\t\t});\n\n\t\t\t// The linker guarantees global data starts from at least wasmMinDataAddr.\n\t\t\t// Keep in sync with cmd/link/internal/ld/data.go:wasmMinDataAddr.\n\t\t\tconst wasmMinDataAddr = 4096 + 8192;\n\t\t\tif (offset >= wasmMinDataAddr) {\n\t\t\t\tthrow new Error(\"total length of command line and environment variables exceeds limit\");\n\t\t\t}\n\n\t\t\tthis._inst.exports.run(argc, argv);\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t\tawait this._exitPromise;\n\t\t}\n\n\t\t_resume() {\n\t\t\tif (this.exited) {\n\t\t\t\tthrow new Error(\"Go program has already exited\");\n\t\t\t}\n\t\t\tthis._inst.exports.resume();\n\t\t\tif (this.exited) {\n\t\t\t\tthis._resolveExitPromise();\n\t\t\t}\n\t\t}\n\n\t\t_makeFuncWrapper(id) {\n\t\t\tconst go = this;\n\t\t\treturn function () {\n\t\t\t\tconst event = { id: id, this: this, args: arguments };\n\t\t\t\tgo._pendingEvent = event;\n\t\t\t\tgo._resume();\n\t\t\t\treturn event.result;\n\t\t\t};\n\t\t}\n\t}\n})();\n", "// Copyright (c) Tailscale Inc & AUTHORS\n// SPDX-License-Identifier: BSD-3-Clause\n\nimport { Terminal, ITerminalOptions } from \"xterm\"\nimport { FitAddon } from \"xterm-addon-fit\"\nimport { WebLinksAddon } from \"xterm-addon-web-links\"\n\nexport type SSHSessionDef = {\n  username: string\n  hostname: string\n  /** Defaults to 5 seconds */\n  timeoutSeconds?: number\n}\n\nexport type SSHSessionCallbacks = {\n  onConnectionProgress: (messsage: string) => void\n  onConnected: () => void\n  onDone: () => void\n  onError?: (err: string) => void\n}\n\nexport function runSSHSession(\n  termContainerNode: HTMLDivElement,\n  def: SSHSessionDef,\n  ipn: IPN,\n  callbacks: SSHSessionCallbacks,\n  terminalOptions?: ITerminalOptions\n) {\n  const parentWindow = termContainerNode.ownerDocument.defaultView ?? window\n  const term = new Terminal({\n    cursorBlink: true,\n    allowProposedApi: true,\n    ...terminalOptions,\n  })\n\n  const fitAddon = new FitAddon()\n  term.loadAddon(fitAddon)\n  term.open(termContainerNode)\n  fitAddon.fit()\n\n  const webLinksAddon = new WebLinksAddon((event, uri) =>\n    event.view?.open(uri, \"_blank\", \"noopener\")\n  )\n  term.loadAddon(webLinksAddon)\n\n  let onDataHook: ((data: string) => void) | undefined\n  term.onData((e) => {\n    onDataHook?.(e)\n  })\n\n  term.focus()\n\n  let resizeObserver: ResizeObserver | undefined\n  let handleUnload: ((e: Event) => void) | undefined\n\n  const sshSession = ipn.ssh(def.hostname, def.username, {\n    writeFn(input) {\n      term.write(input)\n    },\n    writeErrorFn(err) {\n      callbacks.onError?.(err)\n      term.write(err)\n    },\n    setReadFn(hook) {\n      onDataHook = hook\n    },\n    rows: term.rows,\n    cols: term.cols,\n    onConnectionProgress: callbacks.onConnectionProgress,\n    onConnected: callbacks.onConnected,\n    onDone() {\n      resizeObserver?.disconnect()\n      term.dispose()\n      if (handleUnload) {\n        parentWindow.removeEventListener(\"unload\", handleUnload)\n      }\n      callbacks.onDone()\n    },\n    timeoutSeconds: def.timeoutSeconds,\n  })\n\n  // Make terminal and SSH session track the size of the containing DOM node.\n  resizeObserver = new parentWindow.ResizeObserver(() => fitAddon.fit())\n  resizeObserver.observe(termContainerNode)\n  term.onResize(({ rows, cols }) => sshSession.resize(rows, cols))\n\n  // Close the session if the user closes the window without an explicit\n  // exit.\n  handleUnload = () => sshSession.close()\n  parentWindow.addEventListener(\"unload\", handleUnload)\n}\n", "// Copyright (c) Tailscale Inc & AUTHORS\n// SPDX-License-Identifier: BSD-3-Clause\n\n// Type definitions need to be manually imported for dts-bundle-generator to\n// discover them.\n/// <reference path=\"../types/esbuild.d.ts\" />\n/// <reference path=\"../types/wasm_js.d.ts\" />\n\nimport \"../wasm_exec\"\nimport wasmURL from \"./main.wasm\"\n\n/**\n * Superset of the IPNConfig type, with additional configuration that is\n * needed for the package to function.\n */\ntype IPNPackageConfig = IPNConfig & {\n  // Auth key used to initialize the Tailscale client (required)\n  authKey: string\n  // URL of the main.wasm file that is included in the page, if it is not\n  // accessible via a relative URL.\n  wasmURL?: string\n  // Function invoked if the Go process panics or unexpectedly exits.\n  panicHandler: (err: string) => void\n}\n\nexport async function createIPN(config: IPNPackageConfig): Promise<IPN> {\n  const go = new Go()\n  const wasmInstance = await WebAssembly.instantiateStreaming(\n    fetch(config.wasmURL ?? wasmURL),\n    go.importObject\n  )\n  // The Go process should never exit, if it does then it's an unhandled panic.\n  go.run(wasmInstance.instance).then(() =>\n    config.panicHandler(\"Unexpected shutdown\")\n  )\n\n  return newIPN(config)\n}\n\nexport { runSSHSession } from \"../lib/ssh\"\n"],
  "mappings": "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C,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAC7C,CAAC,KAAQ,IAAA,EAAS,CAAC,KAAQ,IAAA,EAAS,CAAC,MAAQ,KAAA,EAC7C,CAAC,MAAQ,KAAA,EAAS,CAAC,MAAQ,KAAA,EAAS,CAAC,MAAQ,KAAA,EAC7C,CAAC,MAAQ,KAAA,EAAS,CAAC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",
  "names": ["root", "factory", "exports", "module", "define", "amd", "a", "i", "self", "e", "t", "s", "r", "n", "o", "h", "c", "AccessibilityManager", "Disposable", "constructor", "_terminal", "_renderService", "super", "_liveRegionLineCount", "_charsToConsume", "_charsToAnnounce", "this", "_accessibilityTreeRoot", "document", "createElement", "classList", "add", "tabIndex", "_rowContainer", "setAttribute", "_rowElements", "rows", "_createAccessibilityTreeNode", "appendChild", "_topBoundaryFocusListener", "_handleBoundaryFocus", "_bottomBoundaryFocusListener", "addEventListener", "length", "_refreshRowsDimensions", "_renderRowsDebouncer", "TimeBasedDebouncer", "_renderRows", "bind", "_refreshRows", "_liveRegion", "element", "Error", "insertAdjacentElement", "register", "onResize", "_handleResize", "onRender", "start", "end", "onScroll", "onA11yChar", "char", "_handleChar", "onLineFeed", "onA11yTab", "spaceCount", "_handleTab", "onKey", "_handleKey", "key", "onBlur", "_clearLiveRegion", "onDimensionsChange", "_screenDprMonitor", "ScreenDprMonitor", "window", "setListener", "addDisposableDomListener", "toDisposable", "removeElementFromParent", "position", "boundaryElement", "target", "beforeBoundaryElement", "getAttribute", "buffer", "lines", "relatedTarget", "topBoundaryElement", "bottomBoundaryElement", "pop", "removeChild", "shift", "removeEventListener", "newElement", "unshift", "push", "scrollLines", "focus", "preventDefault", "stopImmediatePropagation", "children", "_refreshRowDimensions", "MAX_ROWS_TO_READ", "textContent", "Strings", "tooMuchOutput", "isMac", "parentNode", "setTimeout", "keyChar", "test", "refresh", "setSize", "toString", "lineData", "translateBufferLineToString", "ydisp", "posInSet", "innerText", "_announceCharacters", "dimensions", "css", "cell", "height", "style", "width", "canvas", "l", "prepareTextForTerminal", "text", "replace", "bracketTextForPaste", "bracketedPasteMode", "paste", "textarea", "coreService", "decPrivateModes", "triggerDataEvent", "value", "moveTextAreaUnderMouseCursor", "ev", "screenElement", "pos", "getBoundingClientRect", "left", "clientX", "top", "clientY", "zIndex", "selectionService", "clipboardData", "setData", "selectionText", "stopPropagation", "getData", "shouldSelectWord", "rightClickSelect", "select", "_color", "TwoKeyMap", "_css", "setCss", "bg", "fg", "set", "getCss", "get", "setColor", "getColor", "clear", "elements", "parentElement", "node", "type", "handler", "options", "disposed", "dispose", "Linkifier2", "_bufferService", "_linkProviders", "_linkCacheDisposables", "_isMouseOut", "_activeLine", "_onShowLinkUnderline", "EventEmitter", "onShowLinkUnderline", "event", "_onHideLinkUnderline", "onHideLinkUnderline", "getDisposeArrayDisposable", "_lastMouseEvent", "currentLink", "_currentLink", "registerLinkProvider", "linkProvider", "providerIndex", "indexOf", "splice", "attachToDom", "mouseService", "renderService", "_element", "_mouseService", "_clearCurrentLink", "_handleMouseMove", "_handleMouseDown", "_handleMouseUp", "_positionFromMouseEvent", "composedPath", "contains", "_lastBufferCell", "x", "y", "_handleHover", "_askForLink", "_linkAtPosition", "link", "useLineCache", "_activeProviderReplies", "forEach", "reply", "linkWithState", "Map", "linkProvided", "entries", "_checkLinkProviderResult", "provideLinks", "links", "linksWithState", "map", "size", "_removeIntersectingLinks", "replies", "occupiedCells", "Set", "providerReply", "startX", "range", "endX", "cols", "has", "index", "hasLinkBefore", "j", "linkAtPosition", "find", "_handleNewLink", "_mouseDownLink", "activate", "startRow", "endRow", "_linkLeave", "disposeArray", "state", "decorations", "underline", "pointerCursor", "isHovered", "_linkHover", "Object", "defineProperties", "v", "toggle", "_fireUnderlineEvent", "onRenderedViewportChange", "oldEvent", "hover", "showEvent", "scrollOffset", "_createLinkUnderlineEvent", "undefined", "fire", "remove", "leave", "lower", "upper", "current", "coords", "getCoords", "x1", "y1", "x2", "y2", "IBufferService", "promptLabel", "OscLinkProvider", "_optionsService", "_oscLinkService", "callback", "line", "result", "linkHandler", "rawOptions", "CellData", "lineLength", "getTrimmedLength", "currentLinkId", "currentStart", "finishLink", "hasContent", "loadCell", "hasExtendedAttrs", "extended", "urlId", "getLinkData", "uri", "ignoreLink", "allowNonHttpProtocols", "parsed", "URL", "includes", "protocol", "defaultActivate", "confirm", "newWindow", "open", "opener", "location", "href", "console", "warn", "IOptionsService", "IOscLinkService", "_parentWindow", "_renderCallback", "_refreshCallbacks", "_animationFrame", "cancelAnimationFrame", "addRefreshCallback", "requestAnimationFrame", "_innerRefresh", "rowStart", "rowEnd", "rowCount", "_rowCount", "_rowStart", "Math", "min", "_rowEnd", "max", "_runRefreshCallbacks", "_currentDevicePixelRatio", "devicePixelRatio", "clearListener", "listener", "_listener", "_outerListener", "_updateDpr", "_resolutionMediaMatchList", "removeListener", "matchMedia", "addListener", "d", "_", "u", "f", "g", "p", "S", "m", "C", "b", "w", "E", "L", "k", "R", "D", "A", "B", "T", "M", "Terminal", "CoreTerminal", "browser", "Browser", "_keyDownHandled", "_keyDownSeen", "_keyPressHandled", "_unprocessedDeadKey", "_onCursorMove", "onCursorMove", "_onKey", "_onRender", "_onSelectionChange", "onSelectionChange", "_onTitleChange", "onTitleChange", "_onBell", "onBell", "_onFocus", "_onBlur", "_onA11yCharEmitter", "_onA11yTabEmitter", "_onWillOpen", "_setup", "linkifier2", "_instantiationService", "createInstance", "_decorationService", "DecorationService", "setService", "IDecorationService", "_inputHandler", "onRequestBell", "onRequestRefreshRows", "onRequestSendFocus", "_reportFocus", "onRequestReset", "reset", "onRequestWindowsOptionsReport", "_reportWindowsOptions", "onColor", "_handleColorEvent", "forwardEvent", "_afterResize", "_customKeyEventHandler", "onFocus", "onWillOpen", "_themeService", "req", "acc", "ident", "channels", "color", "toColorRGB", "colors", "ansi", "C0", "ESC", "toRgbString", "C1_ESCAPED", "ST", "modifyColors", "rgba", "toColor", "narrowedAcc", "restoreColor", "buffers", "active", "preventScroll", "_handleScreenReaderModeOptionChange", "_accessibilityManager", "_handleTextAreaFocus", "sendFocus", "updateCursorStyle", "_showCursor", "blur", "_handleTextAreaBlur", "_syncTextArea", "isCursorInViewport", "_compositionHelper", "isComposing", "cursorY", "ybase", "bufferLine", "cursorX", "cellHeight", "getWidth", "cellWidth", "cursorTop", "cursorLeft", "lineHeight", "_initGlobal", "_bindKeys", "hasSelection", "copyHandler", "_selectionService", "pasteHandlerWrapper", "handlePasteEvent", "isFirefox", "button", "rightClickHandler", "rightClickSelectsWord", "isLinux", "_keyUp", "_keyDown", "_keyPress", "compositionstart", "compositionupdate", "compositionend", "_inputEvent", "updateCompositionElements", "parent", "isConnected", "_logService", "debug", "_document", "ownerDocument", "dir", "fragment", "createDocumentFragment", "_viewportElement", "_viewportScrollArea", "_helperContainer", "isChromeOS", "_coreBrowserService", "CoreBrowserService", "defaultView", "ICoreBrowserService", "_charSizeService", "CharSizeService", "ICharSizeService", "ThemeService", "IThemeService", "_characterJoinerService", "CharacterJoinerService", "ICharacterJoinerService", "RenderService", "IRenderService", "resize", "_compositionView", "CompositionHelper", "hasRenderer", "setRenderer", "_createRenderer", "MouseService", "IMouseService", "viewport", "Viewport", "amount", "onRequestSyncScrollBar", "syncScrollArea", "handleCursorMove", "handleResize", "handleBlur", "handleFocus", "SelectionService", "ISelectionService", "onRequestScrollLines", "suppressScrollEvent", "onRequestRedraw", "handleSelectionChanged", "columnSelectMode", "onLinuxMouseSelection", "_onScroll", "BufferDecorationRenderer", "handleMouseDown", "coreMouseService", "areMouseEventsActive", "disable", "enable", "screenReaderMode", "optionsService", "onSpecificOptionChange", "overviewRulerWidth", "_overviewRulerRenderer", "OverviewRulerRenderer", "measure", "bindMouse", "DomRenderer", "el", "sendEvent", "getMouseReportCoords", "but", "action", "overrideType", "buttons", "getLinesScrolled", "deltaY", "triggerMouseEvent", "col", "row", "ctrl", "ctrlKey", "alt", "altKey", "shiftKey", "requestedEvents", "mouseup", "wheel", "mousedrag", "mousemove", "eventListeners", "cancel", "onProtocolChange", "events", "logLevel", "explainEvents", "passive", "activeProtocol", "shouldForceSelection", "hasScrollback", "sequence", "applicationCursorKeys", "data", "abs", "handleWheel", "handleTouchStart", "handleTouchMove", "refreshRows", "shouldColumnSelect", "isCursorInitialized", "disp", "source", "attachCustomKeyEventHandler", "customKeyEventHandler", "registerCharacterJoiner", "joinerId", "deregisterCharacterJoiner", "deregister", "markers", "addMarker", "cursorYOffset", "registerDecoration", "decorationOptions", "column", "setSelection", "getSelection", "getSelectionPosition", "selectionStart", "selectionEnd", "clearSelection", "selectAll", "selectLines", "shouldIgnoreComposition", "macOptionIsMeta", "keydown", "scrollOnUserInput", "scrollToBottom", "evaluateKeyboardEvent", "scrollCount", "_isThirdLevelShift", "metaKey", "charCodeAt", "ETX", "CR", "domEvent", "thirdLevelKey", "isWindows", "getModifierState", "keyCode", "charCode", "which", "String", "fromCharCode", "inputType", "composed", "hasValidSize", "clearAllMarkers", "getBlankLine", "DEFAULT_ATTR_DATA", "clearTextureAtlas", "WindowsOptionsReportType", "GET_WIN_SIZE_PIXELS", "canvasWidth", "toFixed", "canvasHeight", "GET_CELL_SIZE_PIXELS", "force", "cancelEvents", "I", "_debounceThresholdMS", "_lastRefreshMs", "_additionalRefreshRequested", "_refreshTimeoutID", "clearTimeout", "refreshRequestTime", "Date", "now", "elapsed", "waitPeriodBeforeTrailingRefresh", "_scrollLines", "_scrollArea", "themeService", "scrollBarWidth", "_currentRowHeight", "_currentDeviceCellHeight", "_lastRecordedBufferLength", "_lastRecordedViewportHeight", "_lastRecordedBufferHeight", "_lastTouchY", "_lastScrollTop", "_wheelPartialScroll", "_refreshAnimationFrame", "_ignoreNextScrollEvent", "_smoothScrollState", "startTime", "origin", "offsetWidth", "_handleScroll", "_activeBuffer", "onBufferActivate", "activeBuffer", "_renderDimensions", "_handleThemeChange", "onChangeColors", "backgroundColor", "background", "_refresh", "immediate", "device", "dpr", "offsetHeight", "newBufferHeight", "round", "scrollTop", "offsetParent", "diff", "_smoothScroll", "_isDisposed", "percent", "_smoothScrollPercent", "_clearSmoothScrollState", "smoothScrollDuration", "_bubbleScroll", "scrollPosFromTop", "cancelable", "_getPixelsScrolled", "scrollHeight", "_applyScrollModifier", "deltaMode", "WheelEvent", "DOM_DELTA_LINE", "DOM_DELTA_PAGE", "DOM_DELTA_PIXEL", "floor", "modifier", "fastScrollModifier", "fastScrollSensitivity", "scrollSensitivity", "touches", "pageY", "_screenElement", "_decorationElements", "_altBufferIsActive", "_dimensionsChanged", "_container", "_doRefreshDecorations", "_queueRefresh", "onDecorationRegistered", "onDecorationRemoved", "decoration", "_removeDecoration", "_renderDecoration", "_refreshStyle", "_refreshXPosition", "_createElement", "marker", "display", "onRenderEmitter", "anchor", "right", "delete", "_zones", "_zonePool", "_zonePoolIndex", "_linePadding", "full", "center", "zones", "addDecoration", "overviewRulerOptions", "z", "_lineIntersectsZone", "_lineAdjacentToZone", "_addLineToZone", "startBufferLine", "endBufferLine", "setPadding", "padding", "zone", "drawHeight", "drawWidth", "drawX", "_coreBrowseService", "_colorZoneStore", "ColorZoneStore", "_shouldUpdateDimensions", "_shouldUpdateAnchor", "_lastKnownBufferLength", "_canvas", "_refreshCanvasDimensions", "insertBefore", "ctx", "getContext", "_ctx", "_registerDecorationListeners", "_registerBufferChangeListeners", "_registerDimensionChangeListeners", "_width", "normal", "_refreshDrawHeightConstants", "_refreshColorZonePadding", "_containerHeight", "clientHeight", "_refreshDrawConstants", "outerWidth", "innerWidth", "ceil", "pixelsPerLine", "nonFullHeight", "_refreshDecorations", "clearRect", "lineWidth", "_renderColorZone", "fillStyle", "fillRect", "updateCanvasDimensions", "updateAnchor", "_textarea", "_coreService", "_isComposing", "_isSendingComposition", "_compositionPosition", "_dataAlreadySent", "_finalizeComposition", "_handleAnyTextareaChanges", "waitForPropagation", "currentCompositionPosition", "input", "substring", "oldValue", "newValue", "DEL", "dontRecurse", "fontFamily", "fontSize", "compositionViewBounds", "ICoreService", "getCoordsRelativeToElement", "rect", "elementStyle", "getComputedStyle", "leftPadding", "parseInt", "getPropertyValue", "topPadding", "colCount", "hasValidCharSize", "cssCellWidth", "cssCellHeight", "isSelection", "moveToRequestedRow", "startY", "targetY", "bufferService", "applicationCursor", "wrappedRowsForRow", "rowsToMove", "wrappedRows", "direction", "verticalDirection", "isWrapped", "repeat", "currentRow", "lineWraps", "startCol", "endCol", "forward", "currentCol", "bufferStr", "mod", "count", "str", "rpt", "targetX", "rowDifference", "currX", "TERMINAL_CLASS_PREFIX", "FOCUS_CLASS", "nextTerminalId", "_linkifier2", "instantiationService", "_terminalClass", "_cellToRowElements", "_refreshRowElements", "_selectionContainer", "createRenderDimensions", "_updateDimensions", "onOptionChange", "_handleOptionsChanged", "_injectCss", "_rowFactory", "DomRendererRowFactory", "_handleLinkHover", "_handleLinkLeave", "_themeStyleElement", "_dimensionsStyleElement", "letterSpacing", "overflow", "styles", "_terminalSelector", "foreground", "BOLD_CLASS", "fontWeight", "fontWeightBold", "ITALIC_CLASS", "cursor", "cursorAccent", "CURSOR_CLASS", "CURSOR_STYLE_BLOCK_CLASS", "CURSOR_BLINK_CLASS", "CURSOR_STYLE_BAR_CLASS", "cursorWidth", "CURSOR_STYLE_UNDERLINE_CLASS", "selectionBackgroundOpaque", "selectionInactiveBackgroundOpaque", "INVERTED_DEFAULT_COLOR", "opaque", "handleDevicePixelRatioChange", "handleCharSizeChanged", "renderRows", "viewportStartRow", "viewportEndRow", "viewportCappedStartRow", "viewportCappedEndRow", "documentFragment", "isXFlipped", "_createSelectionElement", "middleRowsCount", "colStart", "colEnd", "replaceChildren", "cursorAbsoluteY", "cursorBlink", "rowElement", "cursorStyle", "Int16Array", "createRow", "_setCellUnderline", "enabled", "span", "textDecoration", "IInstantiationService", "DIM_CLASS", "UNDERLINE_CLASS", "STRIKETHROUGH_CLASS", "_workCell", "_columnSelectMode", "_selectionStart", "_selectionEnd", "isCursorRow", "cellMap", "joinedRanges", "getJoinedCharacters", "getCode", "NULL_CELL_CODE", "elemIndex", "isJoined", "lastCharX", "JoinedCellData", "translateToString", "charElement", "isCursorHidden", "isBold", "isItalic", "isDim", "isInvisible", "WHITESPACE_CELL_CHAR", "getChars", "isUnderline", "underlineStyle", "isUnderlineColorDefault", "isUnderlineColorRGB", "textDecorationColor", "AttributeData", "getUnderlineColor", "join", "drawBoldTextInBrightColors", "isStrikethrough", "getFgColor", "fgColorMode", "getFgColorMode", "getBgColor", "bgColorMode", "getBgColorMode", "isInverse", "temp", "temp2", "bgOverride", "fgOverride", "isTop", "forEachDecorationAtCell", "layer", "backgroundColorRGB", "foregroundColorRGB", "isInSelection", "_isCellInSelection", "resolvedBg", "selectionForeground", "isFocused", "_addStyle", "padStart", "multiplyOpacity", "_applyMinimumContrast", "subarray", "fill", "minimumContrastRatio", "excludeFromContrastRatioDemands", "adjustedColor", "contrastCache", "ensureContrastRatio", "padChar", "DIM_OPACITY", "TEXT_BASELINE", "isLegacyEdge", "isPowerlineGlyph", "codepoint", "isSelectAllActive", "selectionStartLength", "finalSelectionStart", "areSelectionValuesReversed", "finalSelectionEnd", "startPlusLength", "handleTrim", "_onCharSizeChange", "onCharSizeChange", "_measureStrategy", "DomMeasureStrategy", "onMultipleOptionChange", "_parentElement", "_result", "_measureElement", "geometry", "firstCell", "chars", "content", "combinedData", "isCombined", "setFromCharData", "getAsCharData", "_characterJoiners", "_nextCharacterJoinerId", "joiner", "id", "ranges", "lineStr", "rangeStartColumn", "currentStringIndex", "rangeStartStringIndex", "rangeAttrFG", "getFg", "rangeAttrBG", "getBg", "_getJoinedRanges", "startIndex", "endIndex", "allJoinedRanges", "error", "joinerRanges", "_mergeRanges", "_stringRangesToCellRanges", "currentRangeIndex", "currentRangeStarted", "currentRange", "getString", "static", "newRange", "inRange", "_isFocused", "_cachedIsFocused", "hasFocus", "queueMicrotask", "decorationService", "coreBrowserService", "_pausedResizeTask", "DebouncedIdleTask", "_isPaused", "_needsFullRefresh", "_isNextRenderRedrawOnly", "_needsSelectionRefresh", "_canvasWidth", "_canvasHeight", "_selectionState", "_onDimensionsChange", "_onRenderedViewportChange", "_onRefreshRequest", "onRefreshRequest", "_renderer", "_renderDebouncer", "RenderDebouncer", "_fullRefresh", "observer", "IntersectionObserver", "_handleIntersectionChange", "threshold", "observe", "disconnect", "entry", "isIntersecting", "intersectionRatio", "flush", "isRedrawOnly", "_fireOnCanvasResize", "renderer", "NON_BREAKING_SPACE_CHAR", "ALL_NON_BREAKING_SPACE_REGEX", "RegExp", "_linkifier", "_dragScrollAmount", "_enabled", "_mouseDownTimeStamp", "_oldHasSelection", "_oldSelectionStart", "_oldSelectionEnd", "_onLinuxMouseSelection", "_onRedrawRequest", "_onRequestScrollLines", "_mouseMoveListener", "_mouseUpListener", "onUserInput", "_trimListener", "onTrim", "_handleTrim", "_handleBufferActivate", "_model", "SelectionModel", "_activeSelectionMode", "_removeMouseDownListeners", "lineText", "startRowEndCol", "isLinuxMouseSelection", "_isClickInSelection", "_getMouseBufferCoords", "_areCoordsInSelection", "isCellInSelection", "_selectWordAtCursor", "allowWhitespaceOnlySelection", "getRangeLength", "_selectWordAt", "_getMouseEventScrollAmount", "offset", "terminalHeight", "macOptionClickForcesSelection", "timeStamp", "_handleIncrementalClick", "detail", "_handleSingleClick", "_handleDoubleClick", "_handleTripleClick", "_addMouseDownListeners", "_dragScrollIntervalTimer", "setInterval", "_dragScroll", "clearInterval", "hasWidth", "_selectLineAt", "previousSelectionEnd", "_selectToWordAt", "timeElapsed", "altClickMovesCursor", "coordinates", "moveToCellSequence", "_fireEventIfSelectionChanged", "_fireOnSelectionChange", "_convertViewportColToCharacterIndex", "charIndex", "_getWordAt", "followWrappedLinesAbove", "followWrappedLinesBelow", "charOffset", "leftWideCharCount", "rightWideCharCount", "leftLongCharOffset", "rightLongCharOffset", "charAt", "_isCharWordSeparator", "slice", "trim", "getCodePoint", "previousBufferLine", "previousLineWordPosition", "nextBufferLine", "nextLineWordPosition", "wordPosition", "wordSeparator", "wrappedRange", "getWrappedRangeForLine", "first", "last", "createDecorator", "DEFAULT_FOREGROUND", "DEFAULT_BACKGROUND", "DEFAULT_CURSOR", "DEFAULT_CURSOR_ACCENT", "DEFAULT_SELECTION", "DEFAULT_ANSI_COLORS", "freeze", "toCss", "toRgba", "_onChangeColors", "_contrastCache", "ColorContrastCache", "_colors", "selectionBackgroundTransparent", "blend", "selectionInactiveBackgroundTransparent", "_updateRestoreColors", "_setTheme", "theme", "parseColor", "selectionBackground", "selectionInactiveBackground", "NULL_COLOR", "isOpaque", "opacity", "black", "red", "green", "yellow", "blue", "magenta", "cyan", "white", "brightBlack", "brightRed", "brightGreen", "brightYellow", "brightBlue", "brightMagenta", "brightCyan", "brightWhite", "extendedAnsi", "colorCount", "slot", "_restoreColor", "_restoreColors", "cssString", "fallback", "CircularList", "_maxLength", "onDeleteEmitter", "onDelete", "onInsertEmitter", "onInsert", "onTrimEmitter", "_array", "Array", "_startIndex", "_length", "maxLength", "newMaxLength", "newArray", "_getCyclicIndex", "newLength", "recycle", "isFull", "deleteCount", "items", "countToTrim", "trimStart", "shiftElements", "expandListBy", "clone", "val", "depth", "clonedObject", "isArray", "$r", "$g", "$b", "$a", "rgb", "toPaddedHex", "contrastRatio", "l1", "l2", "toChannels", "fgR", "fgG", "fgB", "bgR", "bgG", "bgB", "ratio", "rgbaColor", "factor", "$ctx", "$litmusColor", "isNode", "willReadFrequently", "globalCompositeOperation", "createLinearGradient", "match", "rgbaMatch", "parseFloat", "getImageData", "relativeLuminance2", "rs", "gs", "bs", "pow", "relativeLuminance", "reduceLuminance", "bgRgba", "fgRgba", "cr", "increaseLuminance", "bgL", "fgL", "resultA", "resultARatio", "resultB", "hasWriteSyncWarnHappened", "_onBinary", "onBinary", "_onData", "onData", "_onLineFeed", "_onResize", "_onWriteParsed", "onWriteParsed", "InstantiationService", "OptionsService", "BufferService", "LogService", "ILogService", "CoreService", "CoreMouseService", "ICoreMouseService", "unicodeService", "UnicodeService", "IUnicodeService", "_charsetService", "CharsetService", "ICharsetService", "OscLinkService", "InputHandler", "onRequestScrollToBottom", "_writeBuffer", "handleUserInput", "_handleWindowsModeOptionChange", "markRangeDirty", "scrollBottom", "WriteBuffer", "promiseResult", "parse", "_windowsMode", "_onScrollApi", "write", "writeSync", "maxSubsequentCalls", "LogLevelEnum", "WARN", "isNaN", "MINIMUM_COLS", "MINIMUM_ROWS", "scroll", "eraseAttr", "scrollPages", "pageCount", "scrollToTop", "scrollToLine", "registerEscHandler", "registerDcsHandler", "registerCsiHandler", "registerOscHandler", "windowsMode", "_enableWindowsMode", "disposables", "updateWindowsModeWrappedState", "final", "_listeners", "_disposed", "_event", "arg1", "arg2", "queue", "call", "from", "to", "GLEVEL", "MAX_PARSEBUFFER_LENGTH", "paramToWindowOption", "opts", "setWinLines", "restoreWin", "minimizeWin", "setWinPosition", "setWinSizePixels", "raiseWin", "lowerWin", "refreshWin", "setWinSizeChars", "maximizeWin", "fullscreenWin", "getWinState", "getWinPosition", "getWinSizePixels", "getScreenSizePixels", "getCellSizePixels", "getWinSizeChars", "getScreenSizeChars", "getIconTitle", "getWinTitle", "pushTitle", "popTitle", "$temp", "_coreMouseService", "_unicodeService", "_parser", "EscapeSequenceParser", "_parseBuffer", "Uint32Array", "_stringDecoder", "StringToUtf32", "_utf8Decoder", "Utf8ToUtf32", "_windowTitle", "_iconName", "_windowTitleStack", "_iconNameStack", "_curAttrData", "_eraseAttrDataInternal", "_onRequestBell", "_onRequestRefreshRows", "_onRequestReset", "_onRequestSendFocus", "_onRequestSyncScrollBar", "_onRequestWindowsOptionsReport", "_onA11yChar", "_onA11yTab", "_onColor", "_parseStack", "paused", "cursorStartX", "cursorStartY", "decodedLength", "_specialColors", "_dirtyRowTracker", "DirtyRowTracker", "setCsiHandlerFallback", "params", "identifier", "identToString", "toArray", "setEscHandlerFallback", "setExecuteHandlerFallback", "code", "setOscHandlerFallback", "setDcsHandlerFallback", "payload", "setPrintHandler", "print", "insertChars", "intermediates", "scrollLeft", "cursorUp", "scrollRight", "cursorDown", "cursorForward", "cursorBackward", "cursorNextLine", "cursorPrecedingLine", "cursorCharAbsolute", "cursorPosition", "cursorForwardTab", "eraseInDisplay", "prefix", "eraseInLine", "insertLines", "deleteLines", "deleteChars", "scrollUp", "scrollDown", "eraseChars", "cursorBackwardTab", "charPosAbsolute", "hPositionRelative", "repeatPrecedingCharacter", "sendDeviceAttributesPrimary", "sendDeviceAttributesSecondary", "linePosAbsolute", "vPositionRelative", "hVPosition", "tabClear", "setMode", "setModePrivate", "resetMode", "resetModePrivate", "charAttributes", "deviceStatus", "deviceStatusPrivate", "softReset", "setCursorStyle", "setScrollRegion", "saveCursor", "windowOptions", "restoreCursor", "insertColumns", "deleteColumns", "selectProtected", "requestMode", "setExecuteHandler", "BEL", "bell", "LF", "lineFeed", "VT", "FF", "carriageReturn", "BS", "backspace", "HT", "tab", "SO", "shiftOut", "SI", "shiftIn", "C1", "IND", "NEL", "nextLine", "HTS", "tabSet", "OscHandler", "setTitle", "setIconName", "setOrReportIndexedColor", "setHyperlink", "setOrReportFgColor", "setOrReportBgColor", "setOrReportCursorColor", "restoreIndexedColor", "restoreFgColor", "restoreBgColor", "restoreCursorColor", "reverseIndex", "keypadApplicationMode", "keypadNumericMode", "fullReset", "setgLevel", "selectDefaultCharset", "flag", "CHARSETS", "selectCharset", "screenAlignmentPattern", "setErrorHandler", "DcsHandler", "requestStatusString", "getAttrData", "_preserveStack", "_logSlowResolvingAsync", "Promise", "race", "res", "rej", "catch", "err", "_getCurrentLinkId", "wasPaused", "DEBUG", "prototype", "split", "clearRange", "len", "decode", "chWidth", "charset", "wraparoundMode", "wraparound", "insertMode", "modes", "curAttr", "bufferRow", "markDirty", "setCellFromCodePoint", "wcwidth", "ch", "stringFromCodePoint", "addLineToLink", "_eraseAttrData", "insertCells", "getNullCell", "NULL_CELL_WIDTH", "addCodepointToCell", "precedingCodepoint", "convertEol", "reverseWraparound", "_restrictCursor", "originalX", "nextStop", "maxCol", "_setCursor", "_moveCursor", "diffToTop", "diffToBottom", "param", "tabs", "prevStop", "_eraseInBufferLine", "clearWrap", "respectProtect", "replaceCells", "_resetBufferLine", "clearMarkers", "scrollBackSize", "scrollBottomRowsOffset", "scrollBottomAbsolute", "deleteCells", "_is", "term", "termName", "setgCharset", "DEFAULT_CHARSET", "applicationKeypad", "activeEncoding", "activateAltBuffer", "activateNormalBuffer", "dm", "mouseProtocol", "mouseEncoding", "cs", "b2v", "_updateAttrColor", "mode", "c1", "c2", "c3", "fromColorRGB", "_extractColor", "attr", "accu", "cSpace", "advance", "hasSubParams", "subparams", "getSubParams", "underlineColor", "_processUnderline", "updateExtended", "_processSGR0", "savedX", "savedY", "savedCurAttrData", "savedCharset", "isBlinking", "bottom", "second", "_savedCharset", "slots", "idx", "spec", "exec", "args", "_createHyperlink", "_finishHyperlink", "parsedParams", "idParamIndex", "findIndex", "startsWith", "registerLink", "_setOrReportSpecialColor", "collectAndFlag", "scrollRegionHeight", "level", "yOffset", "markAllDirty", "isProtected", "_disposables", "unregister", "array", "_data", "third", "fourth", "navigator", "userAgent", "platform", "isSafari", "majorVersion", "isIpad", "isIphone", "_getKey", "insert", "_search", "forEachByKey", "values", "mid", "midKey", "TaskQueue", "_tasks", "_i", "enqueue", "task", "_start", "_idleCallback", "_cancelCallback", "_requestCallback", "_process", "deadline", "taskDuration", "longestTask", "lastDeadlineRemaining", "timeRemaining", "deadlineRemaining", "PriorityTaskQueue", "_createDeadline", "duration", "IdleTaskQueue", "requestIdleCallback", "cancelIdleCallback", "_queue", "lastChar", "CHAR_DATA_CODE_INDEX", "WHITESPACE_CELL_CODE", "ExtendedAttrs", "newObj", "isBlink", "isFgRGB", "isBgRGB", "isFgPalette", "isBgPalette", "isFgDefault", "isBgDefault", "isAttributeDefault", "isEmpty", "getUnderlineColorMode", "isUnderlineColorPalette", "getUnderlineStyle", "ext", "_ext", "_urlId", "MAX_BUFFER_SIZE", "_hasScrollback", "_nullCell", "fromCharData", "NULL_CELL_CHAR", "_whitespaceCell", "WHITESPACE_CELL_WIDTH", "_isClearing", "_memoryCleanupQueue", "_memoryCleanupPosition", "_cols", "_rows", "_getCorrectBufferLength", "setupTabStops", "getWhitespaceCell", "BufferLine", "relativeY", "correctBufferLength", "scrollback", "fillViewportRows", "fillAttr", "newCols", "newRows", "nullCell", "dirtyMemoryLines", "addToY", "amountToTrim", "_isReflowEnabled", "_reflow", "_batchedMemoryCleanup", "normalRun", "counted", "cleanupMemory", "_reflowLarger", "_reflowSmaller", "toRemove", "reflowLargerGetLinesToRemove", "newLayoutResult", "reflowLargerCreateNewLayout", "reflowLargerApplyNewLayout", "layout", "_reflowLargerAdjustViewport", "countRemoved", "viewportAdjustments", "toInsert", "countToInsert", "wrappedLines", "absoluteY", "lastLineLength", "destLineLengths", "reflowSmallerGetNewLineLengths", "linesToAdd", "trimmedLines", "newLines", "newLine", "destLineIndex", "destCol", "srcLineIndex", "srcCol", "cellsToCopy", "copyCellsFrom", "wrappedLinesIndex", "getWrappedLineTrimmedLength", "setCell", "insertEvents", "originalLines", "originalLinesLength", "originalLineIndex", "nextToInsertIndex", "nextToInsert", "countInsertedSoFar", "nextI", "insertCountEmitted", "stringIndexToBufferIndex", "lineIndex", "stringIndex", "trimRight", "CHAR_DATA_WIDTH_INDEX", "CHAR_DATA_CHAR_INDEX", "tabStopWidth", "Marker", "onDispose", "_removeMarker", "iterator", "startOverscan", "endOverscan", "BufferStringIterator", "_buffer", "_trimRight", "_endIndex", "_startOverscan", "_endOverscan", "_current", "hasNext", "next", "$startIndex", "fillCellData", "_combined", "_extendedAttrs", "cp", "CHAR_DATA_ATTR_INDEX", "codePoint", "eAttrs", "byteLength", "uint32Cells", "keys", "extKeys", "copyFrom", "src", "applyInReverse", "srcData", "srcCombinedKeys", "bufferCols", "endsInNull", "followingLineStartsWithWide", "oldCols", "bufferAbsoluteY", "srcTrimmedTineLength", "srcRemainingCells", "destRemainingCells", "countToRemove", "nextToRemoveIndex", "nextToRemoveStart", "countRemovedSoFar", "newLayout", "newLayoutLines", "newLineLengths", "cellsNeeded", "reduce", "srcLine", "cellsAvailable", "oldTrimmedLength", "endsWithWide", "BufferSet", "_onBufferActivate", "_normal", "Buffer", "_alt", "inactiveBuffer", "obj", "combined", "DEFAULT_COLOR", "DEFAULT_ATTR", "DEFAULT_EXT", "isDisposed", "_id", "_nextId", "_onDispose", "disposable", "NUL", "SOH", "STX", "EOT", "ENQ", "ACK", "DLE", "DC1", "DC2", "DC3", "DC4", "NAK", "SYN", "ETB", "CAN", "EM", "SUB", "FS", "GS", "RS", "US", "SP", "PAD", "HOP", "BPH", "NBH", "SSA", "ESA", "HTJ", "VTS", "PLD", "PLU", "RI", "SS2", "SS3", "DCS", "PU1", "PU2", "STS", "CCH", "MW", "SPA", "EPA", "SOS", "SGCI", "SCI", "CSI", "OSC", "PM", "APC", "KEYCODE_KEY_MAPPINGS", "applicationCursorMode", "modifiers", "keyMapping", "keyString", "toUpperCase", "toLowerCase", "_interim", "startPos", "interim", "Uint8Array", "byte1", "byte2", "byte3", "byte4", "discardInterim", "tmp", "missing", "fourStop", "BMP_COMBINING", "HIGH_COMBINING", "table", "version", "num", "ucs", "_action", "_callbacks", "_pendingData", "_bufferOffset", "_isSyncWriting", "_syncCalls", "_didUserInput", "chunk", "cb", "_innerWrite", "lastTime", "continuation", "resolve", "then", "RGB_REX", "HASH_REX", "pad", "bits", "s2", "low", "base", "adv", "PAYLOAD_LIMIT", "EMPTY_HANDLERS", "_handlers", "create", "_active", "_ident", "_handlerFb", "_stack", "loopPosition", "fallThrough", "registerHandler", "handlerList", "handlerIndex", "clearHandler", "setHandlerFallback", "unhook", "hook", "put", "utf32ToString", "success", "handlerResult", "EMPTY_PARAMS", "Params", "addParam", "_handler", "_params", "_hitLimit", "ret", "TransitionTable", "setDefault", "addMany", "codes", "NON_ASCII_PRINTABLE", "VT500_TRANSITION_TABLE", "blueprint", "apply", "unused", "PRINTABLES", "EXECUTABLES", "states", "_transitions", "handlers", "handlerPos", "transition", "chunkPos", "initialState", "currentState", "_collect", "_printHandlerFb", "_executeHandlerFb", "_csiHandlerFb", "_escHandlerFb", "_errorHandlerFb", "_printHandler", "_executeHandlers", "_csiHandlers", "_escHandlers", "_oscParser", "OscParser", "_dcsParser", "DcsParser", "_errorHandler", "_identifier", "finalRange", "intermediate", "finalCode", "reverse", "clearPrintHandler", "clearEscHandler", "clearExecuteHandler", "clearCsiHandler", "clearDcsHandler", "clearOscHandler", "clearErrorHandler", "collect", "abort", "addSubParam", "addDigit", "handlersEsc", "jj", "_state", "_put", "MAX_VALUE", "maxSubParamsLength", "Int32Array", "_subParams", "_subParamsLength", "_subParamsIdx", "Uint16Array", "_rejectDigits", "_rejectSubDigits", "_digitIsSub", "newParams", "getSubParamsAll", "store", "cur", "_addons", "instance", "loadAddon", "terminal", "loadedAddon", "_wrappedAddonDispose", "init", "viewportY", "baseY", "getLine", "BufferLineApiView", "_line", "getCell", "startColumn", "endColumn", "_core", "_onBufferChange", "onBufferChange", "BufferApiView", "_alternate", "alternate", "addCsiHandler", "addDcsHandler", "addEscHandler", "addOscHandler", "provider", "versions", "activeVersion", "isUserScrolling", "_cachedBlankLine", "topRow", "bottomRow", "willBufferBeTrimmed", "oldYdisp", "scrollAmount", "glevel", "_charsets", "DEFAULT_PROTOCOLS", "NONE", "restrict", "X10", "VT200", "DRAG", "ANY", "eventCode", "isSGR", "DEFAULT_ENCODINGS", "DEFAULT", "SGR", "SGR_PIXELS", "_protocols", "_encodings", "_activeProtocol", "_activeEncoding", "_lastEvent", "_onProtocolChange", "name", "addProtocol", "addEncoding", "encoding", "_equalEvents", "report", "triggerBinaryEvent", "down", "up", "drag", "move", "e1", "e2", "pixels", "DEFAULT_MODES", "DEFAULT_DEC_PRIVATE_MODES", "_onUserInput", "_onRequestScrollToBottom", "wasUserInput", "disableStdin", "$xmin", "$xmax", "_decorations", "SortedList", "_onDecorationRegistered", "_onDecorationRemoved", "Decoration", "markerDispose", "xmin", "xmax", "getKeyIterator", "_cachedBg", "_cachedFg", "foregroundColor", "ServiceCollection", "_entries", "service", "_services", "getService", "ctor", "serviceDependencies", "getServiceDependencies", "sort", "serviceArgs", "dependency", "firstServiceArgPos", "optionsKeyToLogLevel", "info", "INFO", "ERROR", "off", "OFF", "_updateLogLevel", "_evalLazyOptionalParams", "optionalParams", "_log", "message", "log", "DEFAULT_OPTIONS", "customGlyphs", "allowProposedApi", "allowTransparency", "FONT_WEIGHT_OPTIONS", "_onOptionChange", "defaultOptions", "_sanitizeAndValidateOption", "_setupOptions", "eventKey", "getter", "propName", "setter", "desc", "defineProperty", "_entriesWithId", "_dataByLinkId", "_removeMarkerFromLink", "castData", "_getEntryIdKey", "linkId", "every", "linkData", "storeServiceDependency", "serviceRegistry", "decorator", "arguments", "_providers", "_onChange", "onChange", "defaultProvider", "UnicodeV6", "_activeProvider", "getStringCellWidth", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "CONSTRUCTOR_ONLY_OPTIONS", "_addonManager", "AddonManager", "_publicOptions", "_checkReadonlyOptions", "_checkProposedApi", "parser", "ParserApi", "unicode", "UnicodeApi", "BufferNamespaceApi", "mouseTrackingMode", "applicationCursorKeysMode", "applicationKeypadMode", "originMode", "reverseWraparoundMode", "sendFocusMode", "columns", "_verifyIntegers", "registerMarker", "_verifyPositiveIntegers", "writeln", "addon", "strings", "Infinity", "root", "factory", "exports", "module", "define", "amd", "self", "e", "t", "constructor", "activate", "terminal", "this", "_terminal", "dispose", "fit", "dims", "proposeDimensions", "isNaN", "cols", "rows", "core", "_core", "_renderService", "clear", "resize", "element", "parentElement", "dimensions", "css", "cell", "width", "height", "scrollbarWidth", "options", "scrollback", "viewport", "scrollBarWidth", "parentElementStyle", "window", "getComputedStyle", "parentElementHeight", "parseInt", "getPropertyValue", "parentElementWidth", "Math", "max", "elementStyle", "availableHeight", "availableWidth", "floor", "root", "factory", "exports", "module", "define", "amd", "self", "e", "t", "constructor", "_terminal", "_regex", "_handler", "_options", "provideLinks", "y", "callback", "links", "LinkComputer", "computeLink", "this", "_addCallbacks", "map", "link", "leave", "hover", "event", "uri", "range", "static", "regex", "terminal", "activate", "rex", "RegExp", "source", "flags", "lines", "startLineIndex", "_getWindowedLineStrings", "line", "join", "match", "result", "exec", "text", "url", "URL", "urlText", "decodeURI", "toString", "startY", "startX", "_mapStrIdx", "index", "endY", "endX", "length", "start", "x", "end", "push", "lineIndex", "topIdx", "bottomIdx", "content", "buffer", "active", "getLine", "currentContent", "translateToString", "isWrapped", "indexOf", "reverse", "rowIndex", "stringIndex", "buf", "cell", "getNullCell", "i", "getCell", "chars", "getChars", "getWidth", "n", "__webpack_module_cache__", "__webpack_require__", "moduleId", "cachedModule", "__webpack_modules__", "strictUrlRegex", "handleLink", "newWindow", "window", "open", "opener", "location", "href", "console", "warn", "options", "urlRegex", "_linkProvider", "registerLinkProvider", "WebLinkProvider", "dispose", "enosys", "err", "outputBuf", "fd", "buf", "decoder", "nl", "offset", "length", "position", "callback", "n", "path", "mode", "uid", "gid", "link", "perm", "flags", "buffer", "from", "to", "atime", "mtime", "pathSegments", "encoder", "code", "resolve", "setInt64", "addr", "v", "setInt32", "getInt64", "low", "high", "loadValue", "f", "id", "storeValue", "typeFlag", "loadSlice", "array", "len", "loadSliceOfValues", "a", "i", "loadString", "saddr", "testCallExport", "b", "timeOrigin", "sp", "p", "msec", "result", "m", "args", "str", "dst", "src", "toCopy", "value", "instance", "strPtr", "ptr", "bytes", "argc", "argvPtrs", "arg", "key", "argv", "go", "event", "import_xterm", "import_xterm_addon_fit", "import_xterm_addon_web_links", "runSSHSession", "termContainerNode", "def", "ipn", "callbacks", "terminalOptions", "_a", "parentWindow", "term", "__spreadValues", "fitAddon", "webLinksAddon", "event", "uri", "onDataHook", "e", "resizeObserver", "handleUnload", "sshSession", "input", "err", "hook", "rows", "cols", "createIPN", "config", "_a", "go", "wasmInstance", "main_default"]
}
